2024-03-21 22:20:40 [INFO] [task_scheduler.cc:160] Initializing Task #33: "fused_nn_softmax"
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
        T_softmax_exp = T.alloc_buffer((T.int64(1), T.int64(1000)))
        T_softmax_expsum = T.alloc_buffer((T.int64(1),))
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_maxelem"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(p0[v_i0, v_k])
                T.writes(T_softmax_maxelem[v_i0])
                with T.init():
                    T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_exp"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0])
                T.writes(T_softmax_exp[v_i0, v_i1])
                T_softmax_exp[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0])
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_expsum"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(T_softmax_exp[v_i0, v_k])
                T.writes(T_softmax_expsum[v_i0])
                with T.init():
                    T_softmax_expsum[v_i0] = T.float32(0)
                T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T_softmax_exp[v_i0, v_k]
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_norm"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(T_softmax_exp[v_i0, v_i1], T_softmax_expsum[v_i0])
                T.writes(T_softmax_norm[v_i0, v_i1])
                T.block_attr({"axis": 1})
                T_softmax_norm[v_i0, v_i1] = T_softmax_exp[v_i0, v_i1] / T_softmax_expsum[v_i0]
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:164] Total 4 design space(s) generated
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v5)
l6, l7 = sch.get_loops(block=b3)
l8 = sch.fuse(l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13 = sch.get_loops(block=b2)
l14 = sch.fuse(l12, preserve_unit_iters=True)
l15, l16 = sch.split(loop=l14, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for k_0 in range(T.int64(8)):
                    for k_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k_0 * T.int64(128) + k_1)
                            T.where(k_0 * T.int64(128) + k_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=5)
l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, v5], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="threadIdx.x")
v10 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v10)
l11, l12 = sch.get_loops(block=b3)
l13 = sch.fuse(l11, l12, preserve_unit_iters=True)
v14 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
l15, l16 = sch.split(loop=l13, factors=[None, v14], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b2)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
l22, l23, l24 = sch.get_loops(block=b0)
l25 = sch.fuse(l22, preserve_unit_iters=True)
sch.bind(loop=l25, thread_axis="blockIdx.x")
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(125)):
                    for ax1_1 in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(8) + ax1_1)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
                for i1_0 in range(T.int64(125)):
                    for i1_1 in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(8) + i1_1)
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=1)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17, l18, l19 = sch.get_loops(block=b3)
l20 = sch.fuse(l17, preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
l21, l22 = sch.get_loops(block=b0)
l23 = sch.fuse(l21, preserve_unit_iters=True)
l24, l25 = sch.split(loop=l23, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l24, thread_axis="blockIdx.x")
sch.bind(loop=l25, thread_axis="threadIdx.x")
2024-03-21 22:20:40 [INFO] [task_scheduler.cc:170] Design space #3:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            T_softmax_maxelem_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(125)):
                    for ax1_1 in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(8) + ax1_1)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem_shared[v_i0])
                            with T.init():
                                T_softmax_maxelem_shared[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem_shared[v_i0] = T.max(T_softmax_maxelem_shared[v_i0], p0[v_i0, v_k])
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(125)):
                    for ax1_1 in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(8) + ax1_1)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem_shared[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem_shared[v_i0])
                for i1_0 in range(T.int64(125)):
                    for i1_1 in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(8) + i1_1)
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem_shared[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem_shared[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=1)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
b16, b17 = sch.get_consumers(block=b0)
l18, l19, l20, l21 = sch.get_loops(block=b16)
sch.compute_at(block=b0, loop=l18, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b0, buffer_index=0, storage_scope="shared")
l22, l23, l24 = sch.get_loops(block=b0)
l25, l26 = sch.split(loop=l24, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l26, thread_axis="threadIdx.x")
v27 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v27)
l28, l29, l30 = sch.get_loops(block=b3)
l31 = sch.fuse(l28, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
2024-03-21 22:51:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 22:51:05 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 22:51:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-21 22:51:05 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9994  0.9949  0.9943  0.9912  0.9853  0.9781  0.9771  0.9644  0.9580  0.9508  0.9490  0.9488  0.9452  0.9411  0.9384
[17 : 32]:	0.9377  0.9311  0.9273  0.9253  0.9189  0.9189  0.9123  0.9122  0.9063  0.9032  0.9016  0.8987  0.8921  0.8920  0.8915  0.8904
[33 : 48]:	0.8884  0.8877  0.8823  0.8821  0.8815  0.8704  0.8666  0.8663  0.8654  0.8567  0.8519  0.8485  0.8435  0.8407  0.8398  0.8258
[49 : 64]:	0.8237  0.8222  0.8177  0.8164  0.8162  0.8120  0.8115  0.8090  0.8058  0.8037  0.8005  0.7867  0.7860  0.7830  0.7800  0.7791
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 22:51:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #1: GFLOPs: 0.1500. Time: 26.6588 us. Best GFLOPs: 0.1500
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #2: GFLOPs: 0.1911. Time: 20.9291 us. Best GFLOPs: 0.1911
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #3: GFLOPs: 0.3878. Time: 10.3137 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #4: GFLOPs: 0.1500. Time: 26.6596 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #5: GFLOPs: 0.1485. Time: 26.9294 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #6: GFLOPs: 0.1500. Time: 26.6608 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #7: GFLOPs: 0.1500. Time: 26.6591 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #8: GFLOPs: 0.1500. Time: 26.6587 us. Best GFLOPs: 0.3878
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #9: GFLOPs: 0.4209. Time: 9.5046 us. Best GFLOPs: 0.4209
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #10: GFLOPs: 0.1501. Time: 26.6577 us. Best GFLOPs: 0.4209
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #11: GFLOPs: 0.1227. Time: 32.5929 us. Best GFLOPs: 0.4209
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #12: GFLOPs: 0.1485. Time: 26.9295 us. Best GFLOPs: 0.4209
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #13: GFLOPs: 1.1000. Time: 3.6362 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #14: GFLOPs: 0.1500. Time: 26.6598 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #15: GFLOPs: 0.3732. Time: 10.7174 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #16: GFLOPs: 0.1478. Time: 27.0660 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #17: GFLOPs: 0.1227. Time: 32.5916 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #18: GFLOPs: 0.1463. Time: 27.3333 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #19: GFLOPs: 0.1255. Time: 31.8729 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #20: GFLOPs: 0.1840. Time: 21.7370 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #21: GFLOPs: 0.1500. Time: 26.6587 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #22: GFLOPs: 0.2143. Time: 18.6697 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #23: GFLOPs: 0.1500. Time: 26.6597 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #24: GFLOPs: 0.1227. Time: 32.5910 us. Best GFLOPs: 1.1000
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #25: GFLOPs: 1.7159. Time: 2.3312 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #26: GFLOPs: 0.1500. Time: 26.6607 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #27: GFLOPs: 0.1500. Time: 26.6591 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #28: GFLOPs: 0.1493. Time: 26.7845 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #29: GFLOPs: 0.1485. Time: 26.9301 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #30: GFLOPs: 0.1754. Time: 22.8064 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #31: GFLOPs: 0.2186. Time: 18.2998 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #32: GFLOPs: 0.2952. Time: 13.5480 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #33: GFLOPs: 0.1493. Time: 26.7933 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #34: GFLOPs: 0.1500. Time: 26.6600 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #35: GFLOPs: 0.1500. Time: 26.6582 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #36: GFLOPs: 0.1500. Time: 26.6584 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #37: GFLOPs: 0.2054. Time: 19.4785 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #38: GFLOPs: 0.1500. Time: 26.6581 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #39: GFLOPs: 0.1501. Time: 26.6578 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #40: GFLOPs: 0.1314. Time: 30.4430 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #41: GFLOPs: 0.7331. Time: 5.4563 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #42: GFLOPs: 0.2895. Time: 13.8184 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #43: GFLOPs: 0.7558. Time: 5.2922 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #44: GFLOPs: 0.4209. Time: 9.5045 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #45: GFLOPs: 0.1500. Time: 26.6591 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #46: GFLOPs: 0.1227. Time: 32.5890 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #47: GFLOPs: 0.2138. Time: 18.7060 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #48: GFLOPs: 0.1495. Time: 26.7605 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #49: GFLOPs: 0.1485. Time: 26.9283 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #50: GFLOPs: 0.1500. Time: 26.6584 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #51: GFLOPs: 0.2039. Time: 19.6132 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #52: GFLOPs: 0.1500. Time: 26.6589 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #53: GFLOPs: 0.2064. Time: 19.3815 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #54: GFLOPs: 0.4208. Time: 9.5050 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #55: GFLOPs: 0.2082. Time: 19.2111 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #56: GFLOPs: 0.2205. Time: 18.1419 us. Best GFLOPs: 1.7159
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #57: GFLOPs: 1.7497. Time: 2.2862 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #58: GFLOPs: 0.4523. Time: 8.8436 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #59: GFLOPs: 0.2138. Time: 18.7076 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #60: GFLOPs: 0.1500. Time: 26.6603 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #61: GFLOPs: 0.1500. Time: 26.6597 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #62: GFLOPs: 0.4347. Time: 9.2010 us. Best GFLOPs: 1.7497
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #63: GFLOPs: 1.7598. Time: 2.2729 us. Best GFLOPs: 1.7598
2024-03-21 22:52:07 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #64: GFLOPs: 0.1314. Time: 30.4352 us. Best GFLOPs: 1.7598
2024-03-22 00:40:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 00:40:07 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-22 00:40:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-22 00:40:07 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-03-22 00:40:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-22 00:40:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-22 00:40:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-22 00:40:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785eda048)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785eb3a58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785ebf938)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785cecad8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785361068)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785f79558)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785eb3958)]: 0 failure(s)
2024-03-22 00:40:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0002  0.9297  0.8953  0.6645  0.6602  0.6294  0.6293  0.6289  0.6089  0.5939  0.5789  0.5764  0.5554  0.5448  0.5437  0.5434
[17 : 32]:	0.5426  0.5420  0.4389  0.4321  0.4245  0.3252  0.3249  0.3096  0.3077  0.3053  0.2934  0.2921  0.2902  0.2779  0.2772  0.2664
[33 : 48]:	0.2640  0.2600  0.2566  0.2505  0.2488  0.2372  0.2316  0.2187  0.2185  0.2144  0.2125  0.2106  0.2091  0.2010  0.1986  0.1961
[49 : 64]:	0.1916  0.1905  0.1886  0.1853  0.1842  0.1823  0.1801  0.1723  0.1712  0.1683  0.1630  0.1590  0.1571  0.1526  0.1513  0.1496
2024-03-22 00:40:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 00:40:11 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #65: GFLOPs: 1.6161. Time: 2.4751 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #66: GFLOPs: 1.7573. Time: 2.2762 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #67: GFLOPs: 1.6547. Time: 2.4173 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #68: GFLOPs: 1.0288. Time: 3.8879 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #69: GFLOPs: 1.3987. Time: 2.8598 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #70: GFLOPs: 1.1418. Time: 3.5031 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #71: GFLOPs: 1.7040. Time: 2.3474 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #72: GFLOPs: 1.7040. Time: 2.3474 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #73: GFLOPs: 1.1016. Time: 3.6310 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #74: GFLOPs: 1.4639. Time: 2.7324 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #75: GFLOPs: 1.3987. Time: 2.8597 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #76: GFLOPs: 1.3988. Time: 2.8596 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #77: GFLOPs: 1.7050. Time: 2.3461 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #78: GFLOPs: 1.7470. Time: 2.2896 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #79: GFLOPs: 1.7022. Time: 2.3499 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #80: GFLOPs: 1.7408. Time: 2.2978 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #81: GFLOPs: 1.7052. Time: 2.3458 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #82: GFLOPs: 1.7540. Time: 2.2805 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #83: GFLOPs: 1.1017. Time: 3.6308 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #84: GFLOPs: 0.7526. Time: 5.3147 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #85: GFLOPs: 0.4138. Time: 9.6665 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #86: GFLOPs: 0.4089. Time: 9.7835 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #87: GFLOPs: 0.4223. Time: 9.4730 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #88: GFLOPs: 0.3137. Time: 12.7503 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #89: GFLOPs: 0.3965. Time: 10.0871 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #90: GFLOPs: 0.7096. Time: 5.6366 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #91: GFLOPs: 0.4123. Time: 9.7010 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #92: GFLOPs: 0.3106. Time: 12.8776 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #93: GFLOPs: 0.4415. Time: 9.0595 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #94: GFLOPs: 0.4544. Time: 8.8025 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #95: GFLOPs: 0.4178. Time: 9.5733 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #96: GFLOPs: 0.3867. Time: 10.3430 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #97: GFLOPs: 0.4069. Time: 9.8296 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #98: GFLOPs: 0.4557. Time: 8.7779 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #99: GFLOPs: 0.4178. Time: 9.5735 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #100: GFLOPs: 0.4235. Time: 9.4453 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #101: GFLOPs: 0.4105. Time: 9.7431 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #102: GFLOPs: 0.1491. Time: 26.8322 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #103: GFLOPs: 0.1485. Time: 26.9449 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #104: GFLOPs: 0.4069. Time: 9.8302 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #105: GFLOPs: 0.4069. Time: 9.8297 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #106: GFLOPs: 0.2163. Time: 18.4966 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #107: GFLOPs: 0.2980. Time: 13.4249 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #108: GFLOPs: 0.1829. Time: 21.8655 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #109: GFLOPs: 0.4179. Time: 9.5724 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #110: GFLOPs: 0.3226. Time: 12.3977 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #111: GFLOPs: 0.1492. Time: 26.8135 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #112: GFLOPs: 0.1482. Time: 26.9946 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #113: GFLOPs: 0.3739. Time: 10.6988 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #114: GFLOPs: 0.1485. Time: 26.9439 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #115: GFLOPs: 0.2923. Time: 13.6822 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #116: GFLOPs: 0.4310. Time: 9.2807 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #117: GFLOPs: 0.2124. Time: 18.8357 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #118: GFLOPs: 0.1482. Time: 26.9961 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #119: GFLOPs: 0.3473. Time: 11.5167 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #120: GFLOPs: 0.2069. Time: 19.3321 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #121: GFLOPs: 0.1485. Time: 26.9446 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #122: GFLOPs: 0.1485. Time: 26.9424 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #123: GFLOPs: 0.1490. Time: 26.8393 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #124: GFLOPs: 0.1485. Time: 26.9434 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #125: GFLOPs: 0.1490. Time: 26.8424 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #126: GFLOPs: 0.1218. Time: 32.8484 us. Best GFLOPs: 1.7598
2024-03-22 00:40:53 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_softmax] Trial #127: GFLOPs: 0.1471. Time: 27.1992 us. Best GFLOPs: 1.7598
