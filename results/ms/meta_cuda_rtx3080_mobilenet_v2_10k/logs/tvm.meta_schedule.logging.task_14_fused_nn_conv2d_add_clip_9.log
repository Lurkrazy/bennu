2024-03-21 22:20:39 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_conv2d_add_clip_9"
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), compute: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        PaddedInput = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(30), T.int64(30)))
        DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(192), T.int64(30), T.int64(30)):
            with T.block("PaddedInput"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3])
                PaddedInput[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for b, c, i, j, di, dj in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(3), T.int64(3)):
            with T.block("DepthwiseConv2d"):
                v_b, v_c, v_i, v_j, v_di, v_dj = T.axis.remap("SSSSRR", [b, c, i, j, di, dj])
                T.reads(PaddedInput[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1[v_c, T.int64(0), v_di, v_dj])
                T.writes(DepthwiseConv2d[v_b, v_c, v_i, v_j])
                with T.init():
                    DepthwiseConv2d[v_b, v_c, v_i, v_j] = T.float32(0)
                DepthwiseConv2d[v_b, v_c, v_i, v_j] = DepthwiseConv2d[v_b, v_c, v_i, v_j] + PaddedInput[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1[v_c, T.int64(0), v_di, v_dj]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(192), T.int64(14), T.int64(14)):
            with T.block("compute"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(T_add[v_i0, v_i1, v_i2, v_i3])
                T.writes(compute[v_i0, v_i1, v_i2, v_i3])
                compute[v_i0, v_i1, v_i2, v_i3] = T.max(T.min(T_add[v_i0, v_i1, v_i2, v_i3], T.float32(6)), T.float32(0))
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), compute: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(30), T.int64(30)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for di_0, dj_0 in T.grid(T.int64(1), T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36192)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(36192) // T.int64(377))
                                    v2 = T.axis.spatial(T.int64(30), ax0_ax1_ax2_ax3_fused % T.int64(377) // T.int64(13))
                                    v3 = T.axis.spatial(T.int64(30), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(14) + dj_0 + ax0_ax1_ax2_ax3_fused % T.int64(13))
                                    T.reads(p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(1) <= v2 and v2 < T.int64(29) and T.int64(1) <= v3 and v3 < T.int64(29), p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(288)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(3))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(3), ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    v3 = T.axis.spatial(T.int64(3), dj_0)
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(6), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + c_3 * T.int64(4) + c_4)
                                    v_i = T.axis.spatial(T.int64(14), i_3 * T.int64(2) + i_4)
                                    v_j = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(3), di_0 * T.int64(3) + di_1 + di_2)
                                    v_dj = T.axis.reduce(T.int64(3), dj_0 + dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(1)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + ax1)
                                v2 = T.axis.spatial(T.int64(14), ax2)
                                v3 = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(compute[v0, v1, v2, v3])
                                compute[v0, v1, v2, v3] = T.max(T.min(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="compute", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 6, 4])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 1, 7, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 3, 1])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[3, 1, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v91 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v91)
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), compute: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(30), T.int64(30)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for di_0_dj_0_fused in T.serial(T.int64(3), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36192)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(36192) // T.int64(377))
                                    v2 = T.axis.spatial(T.int64(30), ax0_ax1_ax2_ax3_fused % T.int64(377) // T.int64(13))
                                    v3 = T.axis.spatial(T.int64(30), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(14) + di_0_dj_0_fused % T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(13))
                                    T.reads(p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(1) <= v2 and v2 < T.int64(29) and T.int64(1) <= v3 and v3 < T.int64(29), p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(288)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(3))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(3), ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    v3 = T.axis.spatial(T.int64(3), di_0_dj_0_fused)
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(6), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + c_3 * T.int64(4) + c_4)
                                    v_i = T.axis.spatial(T.int64(14), i_3 * T.int64(2) + i_4)
                                    v_j = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(3), di_1 + di_2)
                                    v_dj = T.axis.reduce(T.int64(3), di_0_dj_0_fused + dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(1)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + ax1)
                                v2 = T.axis.spatial(T.int64(14), ax2)
                                v3 = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(compute[v0, v1, v2, v3])
                                compute[v0, v1, v2, v3] = T.max(T.min(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="compute", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 6, 4])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 1, 7, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 3, 1])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[3, 1, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
l91 = sch.fuse(l54, l60, preserve_unit_iters=True)
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v92 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v92)
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), compute: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(30), T.int64(30)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(1), T.int64(3), T.int64(3)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for di_0_dj_0_fused in T.serial(T.int64(3), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36192)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(36192) // T.int64(377))
                                    v2 = T.axis.spatial(T.int64(30), ax0_ax1_ax2_ax3_fused % T.int64(377) // T.int64(13))
                                    v3 = T.axis.spatial(T.int64(30), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(14) + di_0_dj_0_fused % T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(13))
                                    T.reads(p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(1) <= v2 and v2 < T.int64(29) and T.int64(1) <= v3 and v3 < T.int64(29), p0[v0, v1, v2 - T.int64(1), v3 - T.int64(1)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(288)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(3))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(3), ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    v3 = T.axis.spatial(T.int64(3), di_0_dj_0_fused)
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(6), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + c_3 * T.int64(4) + c_4)
                                    v_i = T.axis.spatial(T.int64(14), i_3 * T.int64(2) + i_4)
                                    v_j = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(3), di_1 + di_2)
                                    v_dj = T.axis.reduce(T.int64(3), di_0_dj_0_fused + dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(1)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), b_0_c_0_i_0_j_0_fused // T.int64(2) * T.int64(96) + b_1_c_1_i_1_j_1_fused * T.int64(24) + ax1)
                                v2 = T.axis.spatial(T.int64(14), ax2)
                                v3 = T.axis.spatial(T.int64(14), b_0_c_0_i_0_j_0_fused % T.int64(2) * T.int64(7) + b_2_c_2_i_2_j_2_fused + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(compute[v0, v1, v2, v3])
                                compute[v0, v1, v2, v3] = T.max(T.min(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="compute", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 6, 4])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 1, 7, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 3, 1])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[3, 1, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
l91 = sch.fuse(l54, l60, preserve_unit_iters=True)
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v92 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v92)
2024-03-21 22:35:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 22:35:59 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 22:36:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 506 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 1011 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 1519 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 2025 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 2526 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 3029 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 3540 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 4045 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:05 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-03-21 22:36:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 22:36:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9996  0.9991  0.9986  0.9966  0.9963  0.9959  0.9952  0.9947  0.9929  0.9929  0.9922  0.9915  0.9912  0.9907  0.9907
[17 : 32]:	0.9906  0.9904  0.9901  0.9895  0.9893  0.9890  0.9887  0.9885  0.9864  0.9863  0.9861  0.9853  0.9851  0.9851  0.9840  0.9840
[33 : 48]:	0.9833  0.9828  0.9818  0.9774  0.9770  0.9769  0.9764  0.9749  0.9739  0.9737  0.9720  0.9709  0.9702  0.9694  0.9691  0.9688
[49 : 64]:	0.9677  0.9676  0.9659  0.9658  0.9648  0.9648  0.9641  0.9636  0.9632  0.9626  0.9619  0.9615  0.9607  0.9602  0.9599  0.9595
2024-03-21 22:36:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 22:36:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #1: GFLOPs: 32.4681. Time: 24.3399 us. Best GFLOPs: 32.4681
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #2: GFLOPs: 77.1444. Time: 10.2441 us. Best GFLOPs: 77.1444
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #3: GFLOPs: 56.1977. Time: 14.0624 us. Best GFLOPs: 77.1444
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #4: GFLOPs: 107.0372. Time: 7.3832 us. Best GFLOPs: 107.0372
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #5: GFLOPs: 83.3539. Time: 9.4809 us. Best GFLOPs: 107.0372
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #6: GFLOPs: 42.3634. Time: 18.6546 us. Best GFLOPs: 107.0372
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #7: GFLOPs: 53.6571. Time: 14.7282 us. Best GFLOPs: 107.0372
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #8: GFLOPs: 175.8271. Time: 4.4946 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #9: GFLOPs: 2.1110. Time: 374.3597 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #10: GFLOPs: 107.3366. Time: 7.3626 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #11: GFLOPs: 155.4647. Time: 5.0833 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #12: GFLOPs: 26.6777. Time: 29.6230 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #13: GFLOPs: 71.3361. Time: 11.0781 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #14: GFLOPs: 49.6392. Time: 15.9203 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #15: GFLOPs: 36.2010. Time: 21.8301 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #16: GFLOPs: 36.9714. Time: 21.3753 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #17: GFLOPs: 90.2621. Time: 8.7553 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #18: GFLOPs: 83.2240. Time: 9.4957 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #19: GFLOPs: 35.3337. Time: 22.3660 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #20: GFLOPs: 168.8650. Time: 4.6799 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #21: GFLOPs: 106.3849. Time: 7.4284 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #22: GFLOPs: 68.0870. Time: 11.6068 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #23: GFLOPs: 50.3105. Time: 15.7079 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #24: GFLOPs: 110.9993. Time: 7.1196 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #25: GFLOPs: 64.1038. Time: 12.3280 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #26: GFLOPs: 102.3749. Time: 7.7194 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #27: GFLOPs: 58.2724. Time: 13.5617 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #28: GFLOPs: 99.7733. Time: 7.9207 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #29: GFLOPs: 37.7107. Time: 20.9562 us. Best GFLOPs: 175.8271
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #30: GFLOPs: 185.2178. Time: 4.2667 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #31: GFLOPs: 155.5478. Time: 5.0806 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #32: GFLOPs: 6.9200. Time: 114.2012 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #33: GFLOPs: 96.0202. Time: 8.2303 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #34: GFLOPs: 109.1691. Time: 7.2390 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #35: GFLOPs: 71.2209. Time: 11.0961 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #36: GFLOPs: 140.7833. Time: 5.6134 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #37: GFLOPs: 96.9910. Time: 8.1479 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #38: GFLOPs: 98.3332. Time: 8.0367 us. Best GFLOPs: 185.2178
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #39: GFLOPs: 185.5010. Time: 4.2602 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #40: GFLOPs: 76.1289. Time: 10.3807 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #41: GFLOPs: 79.6471. Time: 9.9222 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #42: GFLOPs: 67.6402. Time: 11.6835 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #43: GFLOPs: 92.3136. Time: 8.5607 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #44: GFLOPs: 76.5909. Time: 10.3181 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #45: GFLOPs: 60.0652. Time: 13.1569 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #46: GFLOPs: 62.4115. Time: 12.6623 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #47: GFLOPs: 32.3037. Time: 24.4638 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #48: GFLOPs: 90.3416. Time: 8.7476 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #49: GFLOPs: 99.4257. Time: 7.9484 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #50: GFLOPs: 43.6068. Time: 18.1227 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #51: GFLOPs: 35.6833. Time: 22.1468 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #52: GFLOPs: 35.6956. Time: 22.1392 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #53: GFLOPs: 21.1027. Time: 37.4489 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #54: GFLOPs: 45.8804. Time: 17.2246 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #55: GFLOPs: 14.9264. Time: 52.9446 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #56: GFLOPs: 163.9955. Time: 4.8189 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #57: GFLOPs: 125.3808. Time: 6.3030 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #58: GFLOPs: 39.2506. Time: 20.1340 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #59: GFLOPs: 20.4690. Time: 38.6083 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #60: GFLOPs: 36.1154. Time: 21.8818 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #61: GFLOPs: 22.4741. Time: 35.1637 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #62: GFLOPs: 35.9240. Time: 21.9984 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #63: GFLOPs: 39.0035. Time: 20.2616 us. Best GFLOPs: 185.5010
2024-03-21 22:51:55 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #64: GFLOPs: 183.7716. Time: 4.3003 us. Best GFLOPs: 185.5010
2024-03-21 23:49:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 23:49:23 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 23:49:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 439 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 882 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 1320 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 1761 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 2196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 2632 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:27 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-03-21 23:49:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785032058)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785f082a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff78602a118)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff785e9d4a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff785e960b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785ebc1c8)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785f081a8)]: 0 failure(s)
2024-03-21 23:49:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1466  1.1425  1.1422  1.0588  1.0588  0.9917  0.9821  0.9820  0.9792  0.9721  0.9721  0.9721  0.9614  0.9583  0.9573  0.9560
[17 : 32]:	0.9530  0.9530  0.9530  0.9516  0.9515  0.9515  0.9501  0.9500  0.9484  0.9476  0.9476  0.9476  0.9476  0.9476  0.9476  0.9476
[33 : 48]:	0.9467  0.9453  0.9444  0.9442  0.9442  0.9442  0.9422  0.9403  0.9373  0.9373  0.9359  0.9357  0.9340  0.9340  0.9279  0.9265
[49 : 64]:	0.9242  0.9233  0.9185  0.9177  0.9171  0.9168  0.9165  0.9164  0.9163  0.9157  0.9144  0.9075  0.9075  0.9065  0.9065  0.9054
2024-03-21 23:49:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 23:49:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #65: GFLOPs: 218.3126. Time: 3.6199 us. Best GFLOPs: 218.3126
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #66: GFLOPs: 218.3880. Time: 3.6187 us. Best GFLOPs: 218.3880
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #67: GFLOPs: 219.8407. Time: 3.5947 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #68: GFLOPs: 185.2501. Time: 4.2660 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #69: GFLOPs: 185.2545. Time: 4.2659 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #70: GFLOPs: 185.1690. Time: 4.2678 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #71: GFLOPs: 180.5405. Time: 4.3773 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #72: GFLOPs: 185.5252. Time: 4.2596 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #73: GFLOPs: 184.5982. Time: 4.2810 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #74: GFLOPs: 184.3614. Time: 4.2865 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #75: GFLOPs: 185.2915. Time: 4.2650 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #76: GFLOPs: 185.2968. Time: 4.2649 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #77: GFLOPs: 189.9291. Time: 4.1609 us. Best GFLOPs: 219.8407
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #78: GFLOPs: 226.5434. Time: 3.4884 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #79: GFLOPs: 151.0838. Time: 5.2307 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #80: GFLOPs: 168.4967. Time: 4.6901 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #81: GFLOPs: 185.3101. Time: 4.2646 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #82: GFLOPs: 185.3148. Time: 4.2645 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #83: GFLOPs: 185.2932. Time: 4.2650 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #84: GFLOPs: 185.5627. Time: 4.2588 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #85: GFLOPs: 186.3021. Time: 4.2419 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #86: GFLOPs: 186.3005. Time: 4.2419 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #87: GFLOPs: 187.1529. Time: 4.2226 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #88: GFLOPs: 173.7866. Time: 4.5474 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #89: GFLOPs: 185.5602. Time: 4.2588 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #90: GFLOPs: 174.4228. Time: 4.5308 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #91: GFLOPs: 174.4386. Time: 4.5304 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #92: GFLOPs: 174.4160. Time: 4.5310 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #93: GFLOPs: 174.4344. Time: 4.5305 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #94: GFLOPs: 188.0969. Time: 4.2014 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #95: GFLOPs: 185.2733. Time: 4.2654 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #96: GFLOPs: 188.1106. Time: 4.2011 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #97: GFLOPs: 202.6017. Time: 3.9006 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #98: GFLOPs: 202.3731. Time: 3.9050 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #99: GFLOPs: 205.5322. Time: 3.8450 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #100: GFLOPs: 179.5535. Time: 4.4013 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #101: GFLOPs: 179.5478. Time: 4.4015 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #102: GFLOPs: 179.5592. Time: 4.4012 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #103: GFLOPs: 188.4698. Time: 4.1931 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #104: GFLOPs: 186.8532. Time: 4.2294 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #105: GFLOPs: 174.4304. Time: 4.5306 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #106: GFLOPs: 174.4247. Time: 4.5307 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #107: GFLOPs: 174.4359. Time: 4.5304 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #108: GFLOPs: 201.0252. Time: 3.9312 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #109: GFLOPs: 174.4463. Time: 4.5302 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #110: GFLOPs: 174.4452. Time: 4.5302 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #111: GFLOPs: 174.4516. Time: 4.5300 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #112: GFLOPs: 174.4603. Time: 4.5298 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #113: GFLOPs: 220.9081. Time: 3.5774 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #114: GFLOPs: 151.8643. Time: 5.2038 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #115: GFLOPs: 164.2319. Time: 4.8119 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #116: GFLOPs: 200.9010. Time: 3.9336 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #117: GFLOPs: 94.8273. Time: 8.3338 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #118: GFLOPs: 185.5552. Time: 4.2590 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #119: GFLOPs: 174.4517. Time: 4.5300 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #120: GFLOPs: 93.2947. Time: 8.4707 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #121: GFLOPs: 185.5684. Time: 4.2587 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #122: GFLOPs: 94.8125. Time: 8.3351 us. Best GFLOPs: 226.5434
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #123: GFLOPs: 229.3646. Time: 3.4455 us. Best GFLOPs: 229.3646
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #124: GFLOPs: 147.7861. Time: 5.3474 us. Best GFLOPs: 229.3646
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #125: GFLOPs: 147.7907. Time: 5.3472 us. Best GFLOPs: 229.3646
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #126: GFLOPs: 35.7771. Time: 22.0888 us. Best GFLOPs: 229.3646
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #127: GFLOPs: 1.6735. Time: 472.2186 us. Best GFLOPs: 229.3646
2024-03-21 23:50:25 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_clip_9] Trial #128: GFLOPs: 101.1690. Time: 7.8114 us. Best GFLOPs: 229.3646
