2024-03-21 22:20:39 [INFO] [task_scheduler.cc:160] Initializing Task #2: "fused_nn_conv2d_add"
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(32), T.int64(112), T.int64(112)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(16), T.int64(112), T.int64(112), T.int64(32), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(112), T.int64(112)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1024)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(32) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(32), rc_0 * T.int64(32) + rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 2, 1, 1, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[28, 4, 1, 1, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 4, 1, 2])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 32])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1024)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(32) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(32), rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 2, 1, 1, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[28, 4, 1, 1, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 4, 1, 2])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 32])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
l99 = sch.fuse(l54, l60, l66, preserve_unit_iters=True)
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 22:20:39 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1024)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(32) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(32), ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(32), rc_1 * T.int64(32) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(16), nn_0_ff_0_yy_0_xx_0_fused // T.int64(392) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(392) // T.int64(14) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 2, 1, 1, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[28, 4, 1, 1, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 4, 1, 2])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 32])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
l99 = sch.fuse(l54, l60, l66, preserve_unit_iters=True)
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 22:22:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 22:22:40 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 22:22:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 499 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 1475 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:42 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-03-21 22:22:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 22:22:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9984  0.9981  0.9976  0.9967  0.9963  0.9957  0.9949  0.9949  0.9940  0.9938  0.9935  0.9934  0.9932  0.9916  0.9905
[17 : 32]:	0.9900  0.9896  0.9886  0.9882  0.9881  0.9876  0.9871  0.9868  0.9855  0.9853  0.9849  0.9834  0.9822  0.9811  0.9810  0.9808
[33 : 48]:	0.9797  0.9796  0.9794  0.9789  0.9778  0.9767  0.9766  0.9741  0.9741  0.9740  0.9739  0.9732  0.9730  0.9729  0.9728  0.9676
[49 : 64]:	0.9675  0.9667  0.9664  0.9663  0.9661  0.9661  0.9653  0.9645  0.9639  0.9626  0.9618  0.9616  0.9612  0.9601  0.9601  0.9590
2024-03-21 22:22:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 22:22:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #1: GFLOPs: 210.7600. Time: 61.8987 us. Best GFLOPs: 210.7600
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #2: GFLOPs: 237.8241. Time: 54.8547 us. Best GFLOPs: 237.8241
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #3: GFLOPs: 183.2963. Time: 71.1731 us. Best GFLOPs: 237.8241
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #4: GFLOPs: 1112.5571. Time: 11.7259 us. Best GFLOPs: 1112.5571
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #5: GFLOPs: 570.4007. Time: 22.8712 us. Best GFLOPs: 1112.5571
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #6: GFLOPs: 1414.6913. Time: 9.2216 us. Best GFLOPs: 1414.6913
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #7: GFLOPs: 442.3504. Time: 29.4919 us. Best GFLOPs: 1414.6913
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #8: GFLOPs: 1549.5288. Time: 8.4192 us. Best GFLOPs: 1549.5288
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #9: GFLOPs: 894.0798. Time: 14.5913 us. Best GFLOPs: 1549.5288
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #10: GFLOPs: 2774.6358. Time: 4.7018 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #11: GFLOPs: 2246.3790. Time: 5.8075 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #12: GFLOPs: 84.5819. Time: 154.2382 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #13: GFLOPs: 230.2029. Time: 56.6707 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #14: GFLOPs: 93.4110. Time: 139.6597 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #15: GFLOPs: 480.7242. Time: 27.1377 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #16: GFLOPs: 1145.6247. Time: 11.3875 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #17: GFLOPs: 840.4038. Time: 15.5232 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #18: GFLOPs: 135.8222. Time: 96.0503 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #19: GFLOPs: 54.2750. Time: 240.3641 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #20: GFLOPs: 1536.2963. Time: 8.4917 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #21: GFLOPs: 1045.7610. Time: 12.4749 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #22: GFLOPs: 1118.5503. Time: 11.6631 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #23: GFLOPs: 899.6863. Time: 14.5003 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #24: GFLOPs: 190.0724. Time: 68.6357 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #25: GFLOPs: 420.7173. Time: 31.0084 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #26: GFLOPs: 405.1199. Time: 32.2022 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #27: GFLOPs: 137.7271. Time: 94.7218 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #28: GFLOPs: 2422.5736. Time: 5.3851 us. Best GFLOPs: 2774.6358
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #29: GFLOPs: 2939.5936. Time: 4.4379 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #30: GFLOPs: 766.6145. Time: 17.0174 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #31: GFLOPs: 1099.8371. Time: 11.8615 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #32: GFLOPs: 681.7136. Time: 19.1367 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #33: GFLOPs: 68.0478. Time: 191.7146 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #34: GFLOPs: 102.2222. Time: 127.6216 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #35: GFLOPs: 285.3380. Time: 45.7204 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #36: GFLOPs: 872.9531. Time: 14.9444 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #37: GFLOPs: 1991.4087. Time: 6.5510 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #38: GFLOPs: 2277.0723. Time: 5.7292 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #39: GFLOPs: 562.0238. Time: 23.2121 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #40: GFLOPs: 538.2827. Time: 24.2359 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #41: GFLOPs: 1163.0922. Time: 11.2164 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #42: GFLOPs: 786.8801. Time: 16.5791 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #43: GFLOPs: 927.4069. Time: 14.0669 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #44: GFLOPs: 535.3700. Time: 24.3677 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #45: GFLOPs: 1362.3199. Time: 9.5761 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #46: GFLOPs: 416.1851. Time: 31.3461 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #47: GFLOPs: 604.9068. Time: 21.5666 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #48: GFLOPs: 1038.5142. Time: 12.5619 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #49: GFLOPs: 512.1858. Time: 25.4708 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #50: GFLOPs: 155.8022. Time: 83.7328 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #51: GFLOPs: 521.3479. Time: 25.0231 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #52: GFLOPs: 71.1276. Time: 183.4135 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #53: GFLOPs: 436.5865. Time: 29.8813 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #54: GFLOPs: 458.9405. Time: 28.4258 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #55: GFLOPs: 602.0360. Time: 21.6694 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #56: GFLOPs: 166.3844. Time: 78.4074 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #57: GFLOPs: 164.9586. Time: 79.0851 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #58: GFLOPs: 790.2368. Time: 16.5087 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #59: GFLOPs: 642.4207. Time: 20.3072 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:121] [Task #2: fused_nn_conv2d_add] Trial #60: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  332: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::TVMRetValue)
  331: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  330: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  329: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  328: tvm::transform::Pass::operator()(tvm::IRModule) const
  327: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  326: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  325: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  324: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  323: _ZN3tvm7runtime13PackedFuncObj
  322: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  321: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  320: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  319: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  318: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  317: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  316: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  315: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  314: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  313: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  312: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  311: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  310: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  309: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  308: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  307: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  306: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  305: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  304: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  303: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  302: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  301: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  300: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  299: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  298: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  297: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  296: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  295: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  294: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  286: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  285: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  284: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  283: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  282: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  281: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  280: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  279: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  278: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  277: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  276: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  275: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  274: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  273: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  272: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  271: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  270: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  269: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  268: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  267: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  266: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  265: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  264: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  263: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  262: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  261: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  260: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  259: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  258: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  257: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  256: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  255: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  254: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  253: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  252: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  251: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  250: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  249: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  248: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  247: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  246: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  245: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  244: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  243: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  242: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  241: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  240: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  239: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  238: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  237: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  236: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  235: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  234: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  233: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  232: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  231: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  230: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  229: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  228: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  227: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  226: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  225: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  224: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  223: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  222: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  221: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  220: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  219: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  218: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  217: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  216: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  215: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  214: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  213: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  212: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  211: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  210: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  209: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  208: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  207: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  206: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  205: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  204: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  200: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  199: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  198: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  197: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  196: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  195: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  194: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  193: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  192: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  191: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  190: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  189: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  188: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  187: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  186: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  185: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  184: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  183: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  182: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  181: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  174: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  173: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  172: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  171: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  170: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  169: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  168: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  167: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  166: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  165: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  164: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  163: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  162: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  161: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  160: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  159: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  158: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  157: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  156: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  155: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  154: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  153: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  152: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  151: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  150: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  149: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  145: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  144: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  143: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  142: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  141: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  140: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  139: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  138: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  137: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  136: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  135: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  134: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  133: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  132: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  131: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  130: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  129: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  128: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  127: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  126: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  125: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  124: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  123: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  122: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  121: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  120: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  113: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  112: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  111: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  110: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  109: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  108: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  107: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  106: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  105: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  104: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  103: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  102: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  101: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  100: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  99: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  98: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  97: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  96: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  95: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  94: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  93: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  92: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  91: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  90: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  89: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  88: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  87: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  86: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  85: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  78: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  77: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  76: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  75: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  74: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  73: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  72: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  71: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  70: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  69: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  68: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  67: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  66: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  65: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  64: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  63: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  62: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  61: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  60: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  59: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  58: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  57: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  56: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  55: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  54: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  53: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  52: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  51: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  50: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  43: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  42: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  41: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  40: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  39: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  38: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  37: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  36: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  35: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  34: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  33: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  32: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  31: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  30: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  29: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  28: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  27: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  26: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  25: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  24: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  23: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  22: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  21: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  17: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  16: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  15: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  14: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  13: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  12: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  11: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  10: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  9: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  8: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  7: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  6: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  5: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  4: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  3: _ZZN3tvm3tir11ExprFunctorIFNS_8PrimExprERKS2_EE10InitVTableEvENUlRKNS_7ru
  2: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  1: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  0: tvm::tir::APIType(tvm::runtime::DataType)
  File "/home/canesche/tvm-0.16.dev0/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(112), T.int64(112)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(112), T.int64(112)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(16), T.int64(32), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(16), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused // T.int64(56) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + yy_3_init * T.int64(7) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(56) * T.int64(2) + xx_3_init * T.int64(2) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(14)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused // T.int64(56) * T.int64(28) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(56) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(16), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused // T.int64(56) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                v_xx = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(56) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                v_rc = T.axis.reduce(T.int64(32), rc_0 * T.int64(32) + rc_1 * T.int64(8) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(16), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused // T.int64(56) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(112), nn_0_ff_0_yy_0_xx_0_fused % T.int64(56) * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_add[v0, v1, v2, v3])
                            T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 8, 2, 1])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 1, 4, 1, 7])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[56, 1, 1, 1, 2])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 4, 8])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
sch.enter_postproc()
sch.unannotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch")
l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b73)
l107, l108, l109 = sch.split(loop=l106, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.bind(loop=l108, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b86)
l117, l118 = sch.split(loop=l116, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l118, thread_axis="threadIdx.x")
b119 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b119, ann_key="meta_schedule.unroll_explicit")
b120, b121, b122, b123 = sch.get_child_blocks(b119)
l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b120)
l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b121)
l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b122)
sch.annotate(block_or_loop=l141, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l141, ann_key="pragma_unroll_explicit", ann_val=1)
l161, l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b123)
b168 = sch.get_block(name="conv2d_nchw", func_name="main")
l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188 = sch.get_loops(block=b168)
b189 = sch.decompose_reduction(block=b168, loop=l172)
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #61: GFLOPs: 1561.5234. Time: 8.3545 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #62: GFLOPs: 941.3285. Time: 13.8589 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #63: GFLOPs: 159.3092. Time: 81.8896 us. Best GFLOPs: 2939.5936
2024-03-21 22:51:51 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #64: GFLOPs: 710.2832. Time: 18.3670 us. Best GFLOPs: 2939.5936
2024-03-21 23:48:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 23:48:25 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-03-21 23:48:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 437 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 867 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 1304 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 1739 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:28 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-03-21 23:48:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ff785a5c0d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ff785e993e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ff785e9d0c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ff7851db9a8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ff784c28078)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ff785e9aa88)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ff785e99288)]: 0 failure(s)
2024-03-21 23:48:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0440  1.0432  1.0427  1.0070  1.0023  1.0014  0.9788  0.9689  0.9595  0.9547  0.9516  0.9494  0.9433  0.9408  0.9407  0.9396
[17 : 32]:	0.9357  0.9312  0.9286  0.9281  0.9265  0.9265  0.9262  0.9244  0.9232  0.9213  0.9213  0.9191  0.9179  0.9179  0.9166  0.9148
[33 : 48]:	0.9124  0.9124  0.9124  0.9119  0.9090  0.9084  0.9081  0.9059  0.9044  0.9042  0.9024  0.9000  0.8994  0.8990  0.8989  0.8981
[49 : 64]:	0.8980  0.8975  0.8975  0.8967  0.8967  0.8947  0.8936  0.8930  0.8896  0.8871  0.8842  0.8842  0.8841  0.8832  0.8793  0.8791
2024-03-21 23:48:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 23:48:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #65: GFLOPs: 3169.3174. Time: 4.1163 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #66: GFLOPs: 3145.7610. Time: 4.1471 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #67: GFLOPs: 3146.1169. Time: 4.1466 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #68: GFLOPs: 3103.2293. Time: 4.2039 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #69: GFLOPs: 3146.9872. Time: 4.1455 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #70: GFLOPs: 3102.9922. Time: 4.2043 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #71: GFLOPs: 3122.5867. Time: 4.1779 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #72: GFLOPs: 2946.1889. Time: 4.4280 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #73: GFLOPs: 2946.2879. Time: 4.4279 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #74: GFLOPs: 2946.1268. Time: 4.4281 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #75: GFLOPs: 2946.6789. Time: 4.4273 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #76: GFLOPs: 2900.8596. Time: 4.4972 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #77: GFLOPs: 2753.9362. Time: 4.7371 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #78: GFLOPs: 2753.5798. Time: 4.7377 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #79: GFLOPs: 2932.5552. Time: 4.4486 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #80: GFLOPs: 2916.0112. Time: 4.4738 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #81: GFLOPs: 2778.6849. Time: 4.6949 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #82: GFLOPs: 2916.0974. Time: 4.4737 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #83: GFLOPs: 2942.6220. Time: 4.4334 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #84: GFLOPs: 2778.5231. Time: 4.6952 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #85: GFLOPs: 2918.7374. Time: 4.4697 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #86: GFLOPs: 2918.7438. Time: 4.4696 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #87: GFLOPs: 2837.4822. Time: 4.5977 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #88: GFLOPs: 2916.1105. Time: 4.4737 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #89: GFLOPs: 2922.8175. Time: 4.4634 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #90: GFLOPs: 2922.1614. Time: 4.4644 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #91: GFLOPs: 2751.1281. Time: 4.7420 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #92: GFLOPs: 2974.9163. Time: 4.3853 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #93: GFLOPs: 2894.6398. Time: 4.5069 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #94: GFLOPs: 2853.1259. Time: 4.5724 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #95: GFLOPs: 2836.3333. Time: 4.5995 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #96: GFLOPs: 2789.0396. Time: 4.6775 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #97: GFLOPs: 2745.9377. Time: 4.7509 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #98: GFLOPs: 2745.2621. Time: 4.7521 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #99: GFLOPs: 2745.3985. Time: 4.7519 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #100: GFLOPs: 2746.0893. Time: 4.7507 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #101: GFLOPs: 2926.3087. Time: 4.4581 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #102: GFLOPs: 2926.3697. Time: 4.4580 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #103: GFLOPs: 2750.1484. Time: 4.7437 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #104: GFLOPs: 2781.5663. Time: 4.6901 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #105: GFLOPs: 2919.3587. Time: 4.4687 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #106: GFLOPs: 3147.7924. Time: 4.1444 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #107: GFLOPs: 3104.1177. Time: 4.2027 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #108: GFLOPs: 2844.0760. Time: 4.5870 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #109: GFLOPs: 2983.0725. Time: 4.3733 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #110: GFLOPs: 2778.0206. Time: 4.6961 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #111: GFLOPs: 3021.7096. Time: 4.3173 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #112: GFLOPs: 2837.7024. Time: 4.5973 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #113: GFLOPs: 3024.4523. Time: 4.3134 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #114: GFLOPs: 2999.9508. Time: 4.3487 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #115: GFLOPs: 2838.0094. Time: 4.5968 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #116: GFLOPs: 2456.2694. Time: 5.3112 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #117: GFLOPs: 2474.9931. Time: 5.2710 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #118: GFLOPs: 2414.5349. Time: 5.4030 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #119: GFLOPs: 2554.2072. Time: 5.1076 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #120: GFLOPs: 2556.4015. Time: 5.1032 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #121: GFLOPs: 3105.5543. Time: 4.2008 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #122: GFLOPs: 2783.5058. Time: 4.6868 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #123: GFLOPs: 2609.1587. Time: 5.0000 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #124: GFLOPs: 2609.0252. Time: 5.0002 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #125: GFLOPs: 2975.8575. Time: 4.3839 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #126: GFLOPs: 2457.2764. Time: 5.3090 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #127: GFLOPs: 96.9946. Time: 134.4999 us. Best GFLOPs: 3169.3174
2024-03-21 23:49:22 [INFO] [task_scheduler.cc:131] [Task #2: fused_nn_conv2d_add] Trial #128: GFLOPs: 330.4552. Time: 39.4782 us. Best GFLOPs: 3169.3174
