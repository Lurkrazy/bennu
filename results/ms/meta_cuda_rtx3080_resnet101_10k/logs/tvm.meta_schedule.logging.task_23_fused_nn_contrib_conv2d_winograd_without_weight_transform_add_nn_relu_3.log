2024-03-22 00:52:27 [INFO] [task_scheduler.cc:160] Initializing Task #23: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3"
2024-03-22 00:52:27 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(9), T.int64(9)))
        input_tile = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(2), T.int64(2)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(512), T.int64(9), T.int64(9)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(8) and T.int64(1) <= v_i3 and v_i3 < T.int64(8), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(512), T.int64(16), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps, v_p % T.int64(4) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps, v_p % T.int64(4) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(16), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(512), T.int64(16), T.int64(512)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(512), T.int64(16), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-22 00:52:27 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-22 00:52:27 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax0)
                            v_p = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps and v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps < T.int64(8) and T.int64(1) <= v_p % T.int64(4) * T.int64(2) + v_nu and v_p % T.int64(4) * T.int64(2) + v_nu < T.int64(8), p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(16))
                                        v_p = T.axis.spatial(T.int64(16), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(16))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(32), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + co_3 * T.int64(32) + co_4)
                                    v_p = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0 * T.int64(64) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(32), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(16) + ax0)
                                            v_p = T.axis.spatial(T.int64(16), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(16) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(16))
                            v_h = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1)
                            T.where((n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1 < T.int64(7) and (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1 < T.int64(7))
                            T.reads(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 16, 1, 32])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 2, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[8, 8, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-03-22 00:52:27 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax0)
                            v_p = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps and v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps < T.int64(8) and T.int64(1) <= v_p % T.int64(4) * T.int64(2) + v_nu and v_p % T.int64(4) * T.int64(2) + v_nu < T.int64(8), p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(16))
                                        v_p = T.axis.spatial(T.int64(16), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(16))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(32), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + co_3 * T.int64(32) + co_4)
                                    v_p = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(64) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(32), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(64), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(16) + ax0)
                                            v_p = T.axis.spatial(T.int64(16), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(16))
                            v_h = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1)
                            T.where((n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1 < T.int64(7) and (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1 < T.int64(7))
                            T.reads(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 16, 1, 32])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 2, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[8, 8, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-03-22 00:52:27 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), "float32"), p2: T.Buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)))
            inverse_local = T.alloc_buffer((T.int64(512), T.int64(16), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(16)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(512), T.int64(512)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax0)
                            v_p = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps and v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps < T.int64(8) and T.int64(1) <= v_p % T.int64(4) * T.int64(2) + v_nu and v_p % T.int64(4) * T.int64(2) + v_nu < T.int64(8), p0[v_p // T.int64(16), v_ci, v_p % T.int64(16) // T.int64(4) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(4) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(512), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(16))
                                        v_p = T.axis.spatial(T.int64(16), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(16))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(512), ci_p_fused_0 * T.int64(2) + ci_p_fused_1 // T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(16), ci_p_fused_1 % T.int64(16) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2))
                                    v2 = T.axis.spatial(T.int64(512), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(512))
                                    v3 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused % T.int64(512))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(32), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + co_3 * T.int64(32) + co_4)
                                    v_p = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(512), ci_0_fused * T.int64(64) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(32), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(8) // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(512), eps_2_nu_2_co_2_p_2_fused // T.int64(2) * T.int64(32) + ax2)
                                v3 = T.axis.spatial(T.int64(16), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(8) + eps_1_nu_1_co_1_p_1_fused * T.int64(4) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(64), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(16) + ax0)
                                            v_p = T.axis.spatial(T.int64(16), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(512), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(16))
                            v_h = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(7), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1)
                            T.where((n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(16) // T.int64(4) * T.int64(2) + h_1 < T.int64(7) and (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(4) * T.int64(2) + w_1 < T.int64(7))
                            T.reads(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(16) + v_h // T.int64(2) * T.int64(4) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 2], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 16, 1, 32])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 2, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[8, 8, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-03-22 01:19:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 01:19:41 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-22 01:19:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 500 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:19:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1000 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:19:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1502 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:19:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:19:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2507 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:19:55 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-03-22 01:20:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:20:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 125 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:20:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:20:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:20:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9989  0.9984  0.9981  0.9959  0.9959  0.9957  0.9942  0.9939  0.9937  0.9931  0.9927  0.9924  0.9921  0.9919  0.9917
[17 : 32]:	0.9914  0.9912  0.9909  0.9905  0.9885  0.9882  0.9862  0.9860  0.9854  0.9851  0.9850  0.9848  0.9831  0.9828  0.9813  0.9798
[33 : 48]:	0.9792  0.9783  0.9779  0.9774  0.9772  0.9768  0.9767  0.9753  0.9753  0.9711  0.9702  0.9701  0.9698  0.9673  0.9669  0.9658
[49 : 64]:	0.9653  0.9639  0.9630  0.9625  0.9619  0.9613  0.9611  0.9610  0.9605  0.9604  0.9603  0.9602  0.9593  0.9580  0.9575  0.9556
2024-03-22 01:20:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 01:20:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #1: GFLOPs: 790.5941. Time: 179.7790 us. Best GFLOPs: 790.5941
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #2: GFLOPs: 995.8007. Time: 142.7316 us. Best GFLOPs: 995.8007
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #3: GFLOPs: 612.8138. Time: 231.9338 us. Best GFLOPs: 995.8007
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #4: GFLOPs: 1875.9564. Time: 75.7652 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #5: GFLOPs: 1011.6303. Time: 140.4982 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #6: GFLOPs: 786.9631. Time: 180.6085 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #7: GFLOPs: 744.4973. Time: 190.9103 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #8: GFLOPs: 203.3089. Time: 699.0950 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #9: GFLOPs: 48.8029. Time: 2912.3731 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #10: GFLOPs: 40.7428. Time: 3488.5209 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #11: GFLOPs: 43.9886. Time: 3231.1163 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #12: GFLOPs: 1099.3734. Time: 129.2848 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #13: GFLOPs: 491.8993. Time: 288.9458 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #14: GFLOPs: 116.9996. Time: 1214.8095 us. Best GFLOPs: 1875.9564
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #15: GFLOPs: 2738.9541. Time: 51.8929 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #16: GFLOPs: 1266.1183. Time: 112.2583 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #17: GFLOPs: 1650.8966. Time: 86.0940 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #18: GFLOPs: 572.5907. Time: 248.2266 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #19: GFLOPs: 739.0555. Time: 192.3160 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #20: GFLOPs: 805.8383. Time: 176.3781 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #21: GFLOPs: 715.2048. Time: 198.7294 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #22: GFLOPs: 1898.4986. Time: 74.8656 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #23: GFLOPs: 74.7941. Time: 1900.3122 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #24: GFLOPs: 1253.0175. Time: 113.4320 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #25: GFLOPs: 600.3756. Time: 236.7388 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #26: GFLOPs: 479.5072. Time: 296.4131 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #27: GFLOPs: 1249.6889. Time: 113.7341 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #28: GFLOPs: 144.9574. Time: 980.5101 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #29: GFLOPs: 1117.4064. Time: 127.1983 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #30: GFLOPs: 633.6378. Time: 224.3115 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #31: GFLOPs: 41.6837. Time: 3409.7834 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #32: GFLOPs: 851.2094. Time: 166.9768 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #33: GFLOPs: 89.1983. Time: 1593.4415 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #34: GFLOPs: 2467.2591. Time: 57.6073 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #35: GFLOPs: 878.9402. Time: 161.7086 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #36: GFLOPs: 778.9157. Time: 182.4745 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #37: GFLOPs: 457.0051. Time: 311.0079 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #38: GFLOPs: 1374.3827. Time: 103.4153 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #39: GFLOPs: 595.9515. Time: 238.4963 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #40: GFLOPs: 194.8771. Time: 729.3428 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #41: GFLOPs: 606.9447. Time: 234.1766 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #42: GFLOPs: 1832.6495. Time: 77.5556 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #43: GFLOPs: 834.7325. Time: 170.2728 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #44: GFLOPs: 1173.3215. Time: 121.1366 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #45: GFLOPs: 901.9387. Time: 157.5852 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #46: GFLOPs: 934.9193. Time: 152.0262 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #47: GFLOPs: 149.7634. Time: 949.0451 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #48: GFLOPs: 208.6102. Time: 681.3292 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #49: GFLOPs: 1649.2443. Time: 86.1802 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #50: GFLOPs: 123.3761. Time: 1152.0236 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #51: GFLOPs: 2192.4076. Time: 64.8293 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #52: GFLOPs: 122.2140. Time: 1162.9782 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #53: GFLOPs: 622.9015. Time: 228.1777 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #54: GFLOPs: 883.6792. Time: 160.8414 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #55: GFLOPs: 633.1072. Time: 224.4995 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #56: GFLOPs: 1046.3527. Time: 135.8359 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #57: GFLOPs: 187.3177. Time: 758.7762 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #58: GFLOPs: 152.4572. Time: 932.2761 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #59: GFLOPs: 64.2151. Time: 2213.3759 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #60: GFLOPs: 898.7725. Time: 158.1404 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #61: GFLOPs: 19.1193. Time: 7433.9474 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #62: GFLOPs: 2373.5138. Time: 59.8826 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #63: GFLOPs: 12.5117. Time: 11359.9149 us. Best GFLOPs: 2738.9541
2024-03-22 01:24:27 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #64: GFLOPs: 359.1971. Time: 395.6942 us. Best GFLOPs: 2738.9541
2024-03-22 01:46:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 01:46:17 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-22 01:46:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 439 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 882 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1319 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1759 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2199 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2637 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:32 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-03-22 01:46:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:46:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:47:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 01:47:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.5151  2.5034  2.4931  2.4931  2.4784  2.4491  2.4388  2.4372  2.4256  2.4112  2.4109  2.4088  2.3991  2.3904  2.3890  2.3652
[17 : 32]:	2.3576  2.3511  2.3442  2.3437  2.3377  2.3075  2.2956  2.2762  2.2661  2.2574  2.2493  2.2493  2.2394  2.2373  2.2369  2.2351
[33 : 48]:	2.2234  2.2224  2.2224  2.2196  2.2191  2.2091  2.1960  2.1940  2.1448  2.1345  2.1225  2.1015  2.0325  1.9411  1.8318  1.8210
[49 : 64]:	1.8184  1.8077  1.8075  1.8069  1.8069  1.7982  1.7888  1.7853  1.7320  1.6925  1.6913  1.6757  1.6494  1.6494  1.6437  1.6400
2024-03-22 01:47:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 01:47:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #65: GFLOPs: 551.4819. Time: 257.7278 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #66: GFLOPs: 634.1565. Time: 224.1280 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #67: GFLOPs: 533.9281. Time: 266.2011 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #68: GFLOPs: 673.6798. Time: 210.9789 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #69: GFLOPs: 577.3209. Time: 246.1928 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #70: GFLOPs: 732.2831. Time: 194.0947 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #71: GFLOPs: 619.7498. Time: 229.3381 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #72: GFLOPs: 617.0187. Time: 230.3532 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #73: GFLOPs: 619.8599. Time: 229.2973 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #74: GFLOPs: 458.7850. Time: 309.8014 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #75: GFLOPs: 617.0309. Time: 230.3486 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #76: GFLOPs: 639.2006. Time: 222.3593 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #77: GFLOPs: 422.5619. Time: 336.3584 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #78: GFLOPs: 619.7737. Time: 229.3292 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #79: GFLOPs: 732.5054. Time: 194.0357 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #80: GFLOPs: 1089.5148. Time: 130.4546 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #81: GFLOPs: 619.9627. Time: 229.2593 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #82: GFLOPs: 734.0650. Time: 193.6235 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #83: GFLOPs: 619.7229. Time: 229.3480 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #84: GFLOPs: 604.3377. Time: 235.1868 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #85: GFLOPs: 1199.8428. Time: 118.4590 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #86: GFLOPs: 637.6282. Time: 222.9077 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #87: GFLOPs: 604.1259. Time: 235.2692 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #88: GFLOPs: 616.2175. Time: 230.6527 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #89: GFLOPs: 502.8096. Time: 282.6760 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #90: GFLOPs: 1226.6468. Time: 115.8705 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #91: GFLOPs: 915.3506. Time: 155.2763 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #92: GFLOPs: 915.4291. Time: 155.2630 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #93: GFLOPs: 1258.7393. Time: 112.9163 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #94: GFLOPs: 463.5264. Time: 306.6324 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #95: GFLOPs: 1220.4968. Time: 116.4544 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #96: GFLOPs: 501.1568. Time: 283.6083 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #97: GFLOPs: 723.8344. Time: 196.3601 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #98: GFLOPs: 1220.0823. Time: 116.4940 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #99: GFLOPs: 1220.3807. Time: 116.4655 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #100: GFLOPs: 745.2095. Time: 190.7279 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #101: GFLOPs: 375.9731. Time: 378.0382 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #102: GFLOPs: 370.7269. Time: 383.3879 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #103: GFLOPs: 500.4291. Time: 284.0207 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #104: GFLOPs: 463.7595. Time: 306.4783 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #105: GFLOPs: 870.1424. Time: 163.3436 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #106: GFLOPs: 1195.2278. Time: 118.9164 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #107: GFLOPs: 371.0622. Time: 383.0415 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #108: GFLOPs: 756.8144. Time: 187.8033 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #109: GFLOPs: 727.4261. Time: 195.3906 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #110: GFLOPs: 870.2007. Time: 163.3327 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #111: GFLOPs: 512.8311. Time: 277.1521 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #112: GFLOPs: 499.4141. Time: 284.5979 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #113: GFLOPs: 507.7440. Time: 279.9289 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #114: GFLOPs: 500.0900. Time: 284.2133 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #115: GFLOPs: 505.4121. Time: 281.2205 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #116: GFLOPs: 507.7053. Time: 279.9502 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #117: GFLOPs: 507.7247. Time: 279.9395 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #118: GFLOPs: 500.1472. Time: 284.1808 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #119: GFLOPs: 2192.9418. Time: 64.8135 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #120: GFLOPs: 503.9034. Time: 282.0625 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #121: GFLOPs: 366.3880. Time: 387.9282 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #122: GFLOPs: 268.2378. Time: 529.8740 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #123: GFLOPs: 256.2090. Time: 554.7511 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #124: GFLOPs: 788.9739. Time: 180.1482 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #125: GFLOPs: 256.2578. Time: 554.6455 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #126: GFLOPs: 52.9536. Time: 2684.0876 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #127: GFLOPs: 402.5034. Time: 353.1206 us. Best GFLOPs: 2738.9541
2024-03-22 01:48:00 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #128: GFLOPs: 38.9379. Time: 3650.2309 us. Best GFLOPs: 2738.9541
2024-03-22 02:20:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 02:20:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-22 02:20:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2812 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:31 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2024-03-22 02:20:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:20:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:21:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:21:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.6943  2.6932  2.1646  1.6121  1.5768  1.5455  1.5320  1.4233  1.4165  1.3863  1.3366  1.3241  1.3216  1.3020  1.2757  1.2756
[17 : 32]:	1.2610  1.2562  1.2542  1.2534  1.2458  1.2380  1.2365  1.2357  1.2353  1.2346  1.2228  1.2226  1.2215  1.2210  1.2149  1.2146
[33 : 48]:	1.2129  1.1911  1.1795  1.1614  1.1586  1.1568  1.1473  1.1454  1.1450  1.1419  1.1391  1.1370  1.1320  1.1201  1.1139  1.1086
[49 : 64]:	1.1079  1.1045  1.0960  1.0920  1.0871  1.0843  1.0838  1.0786  1.0780  1.0772  1.0734  1.0715  1.0713  1.0646  1.0642  1.0623
2024-03-22 02:21:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 02:21:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #129: GFLOPs: 465.0148. Time: 305.6510 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #130: GFLOPs: 464.3176. Time: 306.1099 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #131: GFLOPs: 465.7663. Time: 305.1578 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #132: GFLOPs: 621.2445. Time: 228.7863 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #133: GFLOPs: 958.5885. Time: 148.2724 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #134: GFLOPs: 511.9691. Time: 277.6188 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #135: GFLOPs: 507.3770. Time: 280.1314 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #136: GFLOPs: 841.2021. Time: 168.9632 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #137: GFLOPs: 1457.8855. Time: 97.4920 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #138: GFLOPs: 1452.0887. Time: 97.8812 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #139: GFLOPs: 971.3911. Time: 146.3182 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #140: GFLOPs: 2029.9670. Time: 70.0170 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #141: GFLOPs: 2042.4772. Time: 69.5882 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #142: GFLOPs: 1934.3328. Time: 73.4787 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #143: GFLOPs: 702.5620. Time: 202.3056 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #144: GFLOPs: 1845.6412. Time: 77.0097 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #145: GFLOPs: 2039.9472. Time: 69.6745 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #146: GFLOPs: 1489.6741. Time: 95.4116 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #147: GFLOPs: 572.5819. Time: 248.2304 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #148: GFLOPs: 1452.6109. Time: 97.8460 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #149: GFLOPs: 1447.7775. Time: 98.1727 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #150: GFLOPs: 922.2276. Time: 154.1184 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #151: GFLOPs: 1453.1670. Time: 97.8086 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #152: GFLOPs: 1487.5579. Time: 95.5474 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #153: GFLOPs: 1448.2612. Time: 98.1399 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #154: GFLOPs: 1494.8751. Time: 95.0797 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #155: GFLOPs: 570.8785. Time: 248.9711 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #156: GFLOPs: 1495.4113. Time: 95.0456 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #157: GFLOPs: 590.2821. Time: 240.7870 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #158: GFLOPs: 574.3246. Time: 247.4772 us. Best GFLOPs: 2738.9541
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #159: GFLOPs: 2745.2950. Time: 51.7730 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #160: GFLOPs: 1500.8640. Time: 94.7003 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #161: GFLOPs: 459.8773. Time: 309.0655 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #162: GFLOPs: 967.5468. Time: 146.8996 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #163: GFLOPs: 1342.6599. Time: 105.8587 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #164: GFLOPs: 635.3195. Time: 223.7177 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #165: GFLOPs: 2589.4954. Time: 54.8880 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #166: GFLOPs: 2597.0636. Time: 54.7280 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #167: GFLOPs: 612.6638. Time: 231.9906 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #168: GFLOPs: 2485.8331. Time: 57.1769 us. Best GFLOPs: 2745.2950
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #169: GFLOPs: 3040.5197. Time: 46.7460 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #170: GFLOPs: 2373.5439. Time: 59.8819 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #171: GFLOPs: 2243.1784. Time: 63.3620 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #172: GFLOPs: 2547.6223. Time: 55.7901 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #173: GFLOPs: 2103.8304. Time: 67.5588 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #174: GFLOPs: 1918.4035. Time: 74.0888 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #175: GFLOPs: 2437.4151. Time: 58.3127 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #176: GFLOPs: 482.6431. Time: 294.4872 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #177: GFLOPs: 1931.9510. Time: 73.5693 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #178: GFLOPs: 2423.9733. Time: 58.6361 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #179: GFLOPs: 1103.3762. Time: 128.8157 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #180: GFLOPs: 2437.4077. Time: 58.3129 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #181: GFLOPs: 1877.4464. Time: 75.7051 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #182: GFLOPs: 1918.4133. Time: 74.0884 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #183: GFLOPs: 656.7328. Time: 216.4232 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #184: GFLOPs: 1751.2833. Time: 81.1589 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #185: GFLOPs: 592.7193. Time: 239.7968 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #186: GFLOPs: 1554.1849. Time: 91.4513 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #187: GFLOPs: 2872.2732. Time: 49.4842 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #188: GFLOPs: 1395.6233. Time: 101.8414 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #189: GFLOPs: 1491.4721. Time: 95.2966 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #190: GFLOPs: 1200.5021. Time: 118.3940 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #191: GFLOPs: 980.2887. Time: 144.9902 us. Best GFLOPs: 3040.5197
2024-03-22 02:21:59 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #192: GFLOPs: 961.9652. Time: 147.7519 us. Best GFLOPs: 3040.5197
2024-03-22 02:57:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 02:57:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-22 02:57:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1201 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1601 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2006 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:29 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-03-22 02:57:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:57:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:58:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 02:58:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7149  1.5243  1.5169  1.4423  1.3912  1.3834  1.3716  1.3482  1.3298  1.3156  1.3074  1.3045  1.2798  1.2717  1.2682  1.2667
[17 : 32]:	1.2642  1.2597  1.2412  1.2251  1.1584  1.1540  1.1459  1.1428  1.1388  1.1322  1.1320  1.1315  1.1310  1.1305  1.1263  1.1256
[33 : 48]:	1.1189  1.1156  1.1102  1.1065  1.1043  1.1039  1.1022  1.0975  1.0970  1.0969  1.0968  1.0962  1.0961  1.0949  1.0938  1.0923
[49 : 64]:	1.0907  1.0903  1.0902  1.0856  1.0736  1.0722  1.0684  1.0675  1.0675  1.0653  1.0600  1.0589  1.0580  1.0578  1.0563  1.0540
2024-03-22 02:58:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 02:58:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #193: GFLOPs: 566.0942. Time: 251.0752 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #194: GFLOPs: 1453.5823. Time: 97.7807 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #195: GFLOPs: 1445.6681. Time: 98.3159 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #196: GFLOPs: 1540.5741. Time: 92.2593 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #197: GFLOPs: 600.6258. Time: 236.6402 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #198: GFLOPs: 1561.9859. Time: 90.9946 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #199: GFLOPs: 600.9511. Time: 236.5121 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #200: GFLOPs: 379.6990. Time: 374.3287 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #201: GFLOPs: 696.9731. Time: 203.9279 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #202: GFLOPs: 1913.9985. Time: 74.2593 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #203: GFLOPs: 872.8456. Time: 162.8378 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #204: GFLOPs: 674.7529. Time: 210.6434 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #205: GFLOPs: 1483.1458. Time: 95.8316 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #206: GFLOPs: 2730.9803. Time: 52.0444 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #207: GFLOPs: 2682.3525. Time: 52.9879 us. Best GFLOPs: 3040.5197
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #208: GFLOPs: 3075.0627. Time: 46.2209 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #209: GFLOPs: 2731.0533. Time: 52.0430 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #210: GFLOPs: 675.0204. Time: 210.5599 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #211: GFLOPs: 2111.5776. Time: 67.3109 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #212: GFLOPs: 2759.8995. Time: 51.4991 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #213: GFLOPs: 1054.1871. Time: 134.8264 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #214: GFLOPs: 1466.8366. Time: 96.8971 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #215: GFLOPs: 2540.8524. Time: 55.9388 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #216: GFLOPs: 2479.1592. Time: 57.3308 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #217: GFLOPs: 2192.0269. Time: 64.8405 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #218: GFLOPs: 1475.1204. Time: 96.3530 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #219: GFLOPs: 1826.1663. Time: 77.8309 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #220: GFLOPs: 2956.4386. Time: 48.0755 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #221: GFLOPs: 1475.9257. Time: 96.3004 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #222: GFLOPs: 2481.5286. Time: 57.2761 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #223: GFLOPs: 1424.9559. Time: 99.7450 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #224: GFLOPs: 1411.9926. Time: 100.6607 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #225: GFLOPs: 1811.0974. Time: 78.4785 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #226: GFLOPs: 858.3202. Time: 165.5935 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #227: GFLOPs: 1964.8207. Time: 72.3385 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #228: GFLOPs: 1965.5905. Time: 72.3102 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #229: GFLOPs: 1679.5824. Time: 84.6235 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #230: GFLOPs: 1696.6725. Time: 83.7712 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #231: GFLOPs: 1707.9485. Time: 83.2181 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #232: GFLOPs: 2392.5539. Time: 59.4061 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #233: GFLOPs: 2204.6107. Time: 64.4704 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #234: GFLOPs: 1696.6559. Time: 83.7720 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #235: GFLOPs: 1696.6181. Time: 83.7738 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #236: GFLOPs: 1413.7366. Time: 100.5366 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #237: GFLOPs: 1695.8428. Time: 83.8121 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #238: GFLOPs: 1464.5921. Time: 97.0456 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #239: GFLOPs: 3028.6116. Time: 46.9298 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #240: GFLOPs: 1707.5376. Time: 83.2381 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #241: GFLOPs: 1440.4287. Time: 98.6736 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #242: GFLOPs: 2352.5852. Time: 60.4153 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #243: GFLOPs: 2231.1348. Time: 63.7040 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #244: GFLOPs: 1422.0852. Time: 99.9463 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #245: GFLOPs: 1407.3477. Time: 100.9930 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #246: GFLOPs: 2192.8306. Time: 64.8168 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #247: GFLOPs: 1279.3913. Time: 111.0936 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #248: GFLOPs: 2276.6136. Time: 62.4314 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #249: GFLOPs: 2353.9456. Time: 60.3804 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #250: GFLOPs: 1402.6940. Time: 101.3280 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #251: GFLOPs: 2282.0461. Time: 62.2828 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #252: GFLOPs: 2329.9327. Time: 61.0027 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #253: GFLOPs: 2340.1512. Time: 60.7363 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #254: GFLOPs: 815.2334. Time: 174.3454 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #255: GFLOPs: 631.4510. Time: 225.0883 us. Best GFLOPs: 3075.0627
2024-03-22 02:58:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #256: GFLOPs: 22.4620. Time: 6327.6801 us. Best GFLOPs: 3075.0627
2024-03-22 03:22:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 03:22:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-22 03:22:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2007 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:35 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-03-22 03:22:42 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:22:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:23:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:23:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7253  1.6923  1.6263  1.6161  1.5884  1.5042  1.4966  1.4887  1.4852  1.4650  1.3891  1.3757  1.3238  1.3235  1.2935  1.2494
[17 : 32]:	1.2490  1.2317  1.2250  1.2142  1.2094  1.2074  1.1836  1.1828  1.1760  1.1719  1.1611  1.1587  1.1573  1.1560  1.1429  1.1421
[33 : 48]:	1.1419  1.1245  1.1206  1.1198  1.1197  1.1183  1.1103  1.0989  1.0968  1.0946  1.0868  1.0827  1.0808  1.0764  1.0707  1.0682
[49 : 64]:	1.0657  1.0599  1.0577  1.0571  1.0569  1.0563  1.0554  1.0466  1.0420  1.0414  1.0392  1.0382  1.0366  1.0317  1.0303  1.0251
2024-03-22 03:23:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 03:23:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #257: GFLOPs: 1592.2572. Time: 89.2646 us. Best GFLOPs: 3075.0627
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #258: GFLOPs: 566.6678. Time: 250.8211 us. Best GFLOPs: 3075.0627
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #259: GFLOPs: 1592.6520. Time: 89.2425 us. Best GFLOPs: 3075.0627
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #260: GFLOPs: 1592.4262. Time: 89.2551 us. Best GFLOPs: 3075.0627
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #261: GFLOPs: 1115.9791. Time: 127.3610 us. Best GFLOPs: 3075.0627
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #262: GFLOPs: 3246.0374. Time: 43.7864 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #263: GFLOPs: 145.8559. Time: 974.4702 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #264: GFLOPs: 3186.0070. Time: 44.6114 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #265: GFLOPs: 1304.4122. Time: 108.9627 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #266: GFLOPs: 578.6904. Time: 245.6101 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #267: GFLOPs: 676.1093. Time: 210.2208 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #268: GFLOPs: 1439.7667. Time: 98.7189 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #269: GFLOPs: 1704.3854. Time: 83.3921 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #270: GFLOPs: 991.5495. Time: 143.3435 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #271: GFLOPs: 139.0195. Time: 1022.3909 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #272: GFLOPs: 148.2766. Time: 958.5615 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #273: GFLOPs: 610.0097. Time: 232.9999 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #274: GFLOPs: 1274.0710. Time: 111.5575 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #275: GFLOPs: 132.7482. Time: 1070.6901 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #276: GFLOPs: 1951.7646. Time: 72.8224 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #277: GFLOPs: 550.9519. Time: 257.9757 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #278: GFLOPs: 1701.9431. Time: 83.5117 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #279: GFLOPs: 1738.3297. Time: 81.7637 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #280: GFLOPs: 134.3304. Time: 1058.0793 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #281: GFLOPs: 1273.3061. Time: 111.6246 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #282: GFLOPs: 1307.8407. Time: 108.6770 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #283: GFLOPs: 2035.7941. Time: 69.8166 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #284: GFLOPs: 1186.1678. Time: 119.8247 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #285: GFLOPs: 636.9656. Time: 223.1395 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #286: GFLOPs: 2474.4956. Time: 57.4389 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #287: GFLOPs: 1819.2589. Time: 78.1264 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #288: GFLOPs: 830.8819. Time: 171.0619 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #289: GFLOPs: 134.1417. Time: 1059.5681 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #290: GFLOPs: 2910.1386. Time: 48.8404 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #291: GFLOPs: 1692.8149. Time: 83.9621 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #292: GFLOPs: 890.9770. Time: 159.5240 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #293: GFLOPs: 761.4033. Time: 186.6714 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #294: GFLOPs: 2019.1308. Time: 70.3928 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #295: GFLOPs: 573.3647. Time: 247.8915 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #296: GFLOPs: 1279.1696. Time: 111.1129 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #297: GFLOPs: 3020.3216. Time: 47.0586 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #298: GFLOPs: 1183.4488. Time: 120.1000 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #299: GFLOPs: 2042.7122. Time: 69.5802 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #300: GFLOPs: 2058.4536. Time: 69.0481 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #301: GFLOPs: 133.8445. Time: 1061.9203 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #302: GFLOPs: 675.6655. Time: 210.3589 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #303: GFLOPs: 643.0219. Time: 221.0379 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #304: GFLOPs: 3078.0773. Time: 46.1757 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #305: GFLOPs: 1040.8358. Time: 136.5559 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #306: GFLOPs: 1959.4705. Time: 72.5360 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #307: GFLOPs: 918.7019. Time: 154.7098 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #308: GFLOPs: 2465.2861. Time: 57.6534 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #309: GFLOPs: 964.2082. Time: 147.4082 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #310: GFLOPs: 2629.2459. Time: 54.0582 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #311: GFLOPs: 1038.8085. Time: 136.8224 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #312: GFLOPs: 571.4116. Time: 248.7388 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #313: GFLOPs: 1498.4318. Time: 94.8540 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #314: GFLOPs: 687.8768. Time: 206.6245 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #315: GFLOPs: 2029.2050. Time: 70.0433 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #316: GFLOPs: 684.4237. Time: 207.6670 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #317: GFLOPs: 749.6003. Time: 189.6107 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #318: GFLOPs: 501.4621. Time: 283.4357 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #319: GFLOPs: 428.3874. Time: 331.7844 us. Best GFLOPs: 3246.0374
2024-03-22 03:24:06 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #320: GFLOPs: 1355.2356. Time: 104.8764 us. Best GFLOPs: 3246.0374
2024-03-22 03:57:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 03:58:00 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-22 03:58:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 2410 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:13 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-03-22 03:58:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5c8855fdd798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5c8860e00948)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5c887123e838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5c885d4f8968)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5c886c9e39c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5c887123f368)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5c8860e00848)]: 0 failure(s)
2024-03-22 03:58:49 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3449  1.1275  1.0882  1.0789  1.0733  1.0540  1.0274  1.0080  0.9935  0.9831  0.9822  0.9686  0.9521  0.9494  0.9473  0.9442
[17 : 32]:	0.9439  0.9428  0.9382  0.9368  0.9336  0.9247  0.9245  0.9240  0.9211  0.9210  0.9161  0.9143  0.9123  0.9104  0.9096  0.9071
[33 : 48]:	0.9051  0.9041  0.9015  0.8987  0.8979  0.8979  0.8961  0.8953  0.8914  0.8902  0.8821  0.8798  0.8794  0.8790  0.8782  0.8743
[49 : 64]:	0.8734  0.8708  0.8701  0.8686  0.8683  0.8681  0.8676  0.8657  0.8654  0.8647  0.8630  0.8623  0.8620  0.8610  0.8592  0.8588
2024-03-22 03:58:49 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 03:58:49 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #321: GFLOPs: 1221.9700. Time: 116.3140 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #322: GFLOPs: 1837.5269. Time: 77.3497 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #323: GFLOPs: 3194.5778. Time: 44.4917 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #324: GFLOPs: 3189.1091. Time: 44.5680 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #325: GFLOPs: 2876.0307. Time: 49.4196 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #326: GFLOPs: 2147.6418. Time: 66.1806 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #327: GFLOPs: 2915.9951. Time: 48.7423 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #328: GFLOPs: 1725.4541. Time: 82.3738 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #329: GFLOPs: 3236.5960. Time: 43.9141 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #330: GFLOPs: 3198.8747. Time: 44.4319 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #331: GFLOPs: 3070.1420. Time: 46.2950 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #332: GFLOPs: 2961.7500. Time: 47.9893 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #333: GFLOPs: 3112.6153. Time: 45.6633 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #334: GFLOPs: 3163.5760. Time: 44.9277 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #335: GFLOPs: 3184.7646. Time: 44.6288 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #336: GFLOPs: 3091.4468. Time: 45.9760 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #337: GFLOPs: 3056.8170. Time: 46.4968 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #338: GFLOPs: 3198.4957. Time: 44.4372 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #339: GFLOPs: 3031.2117. Time: 46.8896 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #340: GFLOPs: 3060.3610. Time: 46.4430 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #341: GFLOPs: 2611.8495. Time: 54.4182 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #342: GFLOPs: 2883.9031. Time: 49.2847 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #343: GFLOPs: 3067.7966. Time: 46.3304 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #344: GFLOPs: 3090.1841. Time: 45.9947 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #345: GFLOPs: 3106.0053. Time: 45.7605 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #346: GFLOPs: 2968.0894. Time: 47.8868 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #347: GFLOPs: 3006.9137. Time: 47.2685 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #348: GFLOPs: 3032.5895. Time: 46.8683 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #349: GFLOPs: 3080.8192. Time: 46.1346 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #350: GFLOPs: 1515.5956. Time: 93.7798 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #351: GFLOPs: 3232.5285. Time: 43.9694 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #352: GFLOPs: 2988.2148. Time: 47.5643 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #353: GFLOPs: 3162.6340. Time: 44.9411 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #354: GFLOPs: 2672.3153. Time: 53.1869 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #355: GFLOPs: 2709.0033. Time: 52.4666 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #356: GFLOPs: 2998.9903. Time: 47.3934 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #357: GFLOPs: 2585.2169. Time: 54.9788 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #358: GFLOPs: 2652.6597. Time: 53.5810 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #359: GFLOPs: 3095.2999. Time: 45.9187 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #360: GFLOPs: 3040.9914. Time: 46.7388 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #361: GFLOPs: 2688.1066. Time: 52.8745 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #362: GFLOPs: 2832.3078. Time: 50.1825 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #363: GFLOPs: 2671.4275. Time: 53.2046 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #364: GFLOPs: 2091.9309. Time: 67.9431 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #365: GFLOPs: 3159.1613. Time: 44.9905 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #366: GFLOPs: 2910.9920. Time: 48.8260 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #367: GFLOPs: 3106.1790. Time: 45.7579 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #368: GFLOPs: 3075.8389. Time: 46.2093 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #369: GFLOPs: 3078.5170. Time: 46.1691 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #370: GFLOPs: 2694.5132. Time: 52.7488 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #371: GFLOPs: 3171.4755. Time: 44.8158 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #372: GFLOPs: 3007.6231. Time: 47.2573 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #373: GFLOPs: 2424.8818. Time: 58.6141 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #374: GFLOPs: 2670.4509. Time: 53.2241 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #375: GFLOPs: 2815.9673. Time: 50.4737 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #376: GFLOPs: 2692.3749. Time: 52.7907 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #377: GFLOPs: 2476.0913. Time: 57.4019 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #378: GFLOPs: 2549.6829. Time: 55.7451 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #379: GFLOPs: 3012.3310. Time: 47.1835 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #380: GFLOPs: 2397.3509. Time: 59.2872 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #381: GFLOPs: 2667.7470. Time: 53.2780 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #382: GFLOPs: 1455.2654. Time: 97.6676 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #383: GFLOPs: 1054.8092. Time: 134.7469 us. Best GFLOPs: 3246.0374
2024-03-22 03:59:56 [INFO] [task_scheduler.cc:131] [Task #23: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #384: GFLOPs: 232.7190. Time: 610.7461 us. Best GFLOPs: 3246.0374
