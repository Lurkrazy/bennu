2024-03-21 07:30:26 [INFO] [task_scheduler.cc:160] Initializing Task #148: "fused_nn_conv2d_add_nn_relu_72"
2024-03-21 07:30:26 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(336), T.int64(56), T.int64(56)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56), T.int64(336), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-21 07:30:26 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 07:30:26 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(3), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(336), rc_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(4), T.int64(4), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0 * T.int64(112) + rc_1 * T.int64(56) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(8), T.int64(8)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 16, 1, 6, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[3, 2, 56])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 07:30:26 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(3), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(4), T.int64(4), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + rc_1 * T.int64(56) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(8), T.int64(8)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 16, 1, 6, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[3, 2, 56])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 07:30:26 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(336), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(336), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(3), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(10752)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(4), T.int64(4), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(336), rc_0_ry_0_rx_0_fused * T.int64(112) + rc_1 * T.int64(56) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(8), T.int64(8)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(49) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(49) // T.int64(7) * T.int64(8) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(8) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 16, 1, 6, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[7, 1, 1, 4, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[3, 2, 56])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 08:50:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 08:50:28 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 08:50:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 496 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 985 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 1487 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 1978 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:32 [INFO] [evolutionary_search.cc:723] Sampled 70 candidate(s)
2024-03-21 08:50:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 08:50:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9989  0.9986  0.9986  0.9985  0.9979  0.9978  0.9977  0.9974  0.9964  0.9958  0.9936  0.9932  0.9926  0.9909  0.9908  0.9907
[17 : 32]:	0.9903  0.9896  0.9890  0.9886  0.9885  0.9875  0.9868  0.9867  0.9857  0.9847  0.9845  0.9843  0.9840  0.9835  0.9830  0.9822
[33 : 48]:	0.9821  0.9813  0.9812  0.9799  0.9782  0.9779  0.9779  0.9775  0.9773  0.9767  0.9755  0.9751  0.9751  0.9743  0.9741  0.9731
[49 : 64]:	0.9726  0.9721  0.9721  0.9719  0.9715  0.9708  0.9707  0.9705  0.9699  0.9698  0.9698  0.9697  0.9695  0.9695  0.9693  0.9692
2024-03-21 08:50:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 08:50:38 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #1: GFLOPs: 3216.8872. Time: 126.1541 us. Best GFLOPs: 3216.8872
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #2: GFLOPs: 875.4403. Time: 463.5650 us. Best GFLOPs: 3216.8872
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #3: GFLOPs: 450.0735. Time: 901.6827 us. Best GFLOPs: 3216.8872
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #4: GFLOPs: 102.0947. Time: 3974.9712 us. Best GFLOPs: 3216.8872
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #5: GFLOPs: 3941.2684. Time: 102.9677 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #6: GFLOPs: 82.7234. Time: 4905.7890 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #7: GFLOPs: 16.4352. Time: 24692.3644 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #8: GFLOPs: 2559.7108. Time: 158.5427 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #9: GFLOPs: 3258.4878. Time: 124.5435 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #10: GFLOPs: 1737.0164. Time: 233.6325 us. Best GFLOPs: 3941.2684
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #11: GFLOPs: 4248.7012. Time: 95.5171 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #12: GFLOPs: 561.5258. Time: 722.7156 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #13: GFLOPs: 100.5705. Time: 4035.2154 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #14: GFLOPs: 107.9314. Time: 3760.0143 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #15: GFLOPs: 2174.2400. Time: 186.6507 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #16: GFLOPs: 3371.1716. Time: 120.3805 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #17: GFLOPs: 3098.4352. Time: 130.9769 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #18: GFLOPs: 526.7628. Time: 770.4103 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #19: GFLOPs: 3536.4914. Time: 114.7531 us. Best GFLOPs: 4248.7012
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #20: GFLOPs: 4931.9968. Time: 82.2838 us. Best GFLOPs: 4931.9968
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #21: GFLOPs: 5186.4157. Time: 78.2474 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #22: GFLOPs: 47.4488. Time: 8552.8748 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #23: GFLOPs: 1953.4211. Time: 207.7501 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #24: GFLOPs: 2927.4193. Time: 138.6284 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #25: GFLOPs: 409.8534. Time: 990.1674 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #26: GFLOPs: 2805.5449. Time: 144.6505 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #27: GFLOPs: 270.9591. Time: 1497.7299 us. Best GFLOPs: 5186.4157
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #28: GFLOPs: 8801.2070. Time: 46.1100 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #29: GFLOPs: 458.7674. Time: 884.5953 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #30: GFLOPs: 2989.8505. Time: 135.7337 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #31: GFLOPs: 8016.9977. Time: 50.6204 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #32: GFLOPs: 3142.8058. Time: 129.1278 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #33: GFLOPs: 322.4900. Time: 1258.4063 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #34: GFLOPs: 5144.1947. Time: 78.8896 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #35: GFLOPs: 4424.2393. Time: 91.7273 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #36: GFLOPs: 217.5745. Time: 1865.2160 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #37: GFLOPs: 2894.2320. Time: 140.2180 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #38: GFLOPs: 5308.9025. Time: 76.4421 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #39: GFLOPs: 86.3254. Time: 4701.0910 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #40: GFLOPs: 2183.3139. Time: 185.8750 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #41: GFLOPs: 1890.9017. Time: 214.6190 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #42: GFLOPs: 1833.4697. Time: 221.3418 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #43: GFLOPs: 142.1733. Time: 2854.4284 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #44: GFLOPs: 18.6366. Time: 21775.5644 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #45: GFLOPs: 149.3111. Time: 2717.9728 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #46: GFLOPs: 311.6909. Time: 1302.0064 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #47: GFLOPs: 8345.6200. Time: 48.6271 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #48: GFLOPs: 142.1602. Time: 2854.6914 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #49: GFLOPs: 155.2448. Time: 2614.0882 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #50: GFLOPs: 62.2190. Time: 6522.4962 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #51: GFLOPs: 3486.1723. Time: 116.4095 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #52: GFLOPs: 2619.0920. Time: 154.9482 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #53: GFLOPs: 47.8238. Time: 8485.8029 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #54: GFLOPs: 268.0073. Time: 1514.2255 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #55: GFLOPs: 372.1473. Time: 1090.4915 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #56: GFLOPs: 122.9711. Time: 3300.1539 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #57: GFLOPs: 105.3700. Time: 3851.4156 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #58: GFLOPs: 3915.0498. Time: 103.6573 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #59: GFLOPs: 1653.3267. Time: 245.4587 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #60: GFLOPs: 7565.2215. Time: 53.6433 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #61: GFLOPs: 140.4238. Time: 2889.9913 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #62: GFLOPs: 2323.5222. Time: 174.6587 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #63: GFLOPs: 265.3229. Time: 1529.5456 us. Best GFLOPs: 8801.2070
2024-03-21 09:11:54 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #64: GFLOPs: 5553.9871. Time: 73.0689 us. Best GFLOPs: 8801.2070
2024-03-21 10:20:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 10:20:09 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 10:20:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 434 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 870 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 1307 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 1744 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 2180 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:13 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-03-21 10:20:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x61c8f34b0c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x61c8efd6e9e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x61c8f59756a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x61c8f6d5bae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x61c8ee809408)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x61c8f20a6cf8)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x61c8efd6eae8)]: 0 failure(s)
2024-03-21 10:20:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6549  1.6410  1.6357  1.6272  1.4770  1.4758  1.4557  1.4505  1.4358  1.4050  1.3966  1.3597  1.3333  1.3299  1.2823  1.2544
[17 : 32]:	1.2301  1.2031  1.1858  1.1768  1.1734  1.1726  1.1504  1.1494  1.1383  1.1305  1.1249  1.1247  1.1211  1.1200  1.1188  1.1169
[33 : 48]:	1.1156  1.1147  1.0738  1.0707  1.0702  1.0675  1.0665  1.0564  1.0187  1.0184  1.0167  1.0163  1.0145  1.0056  1.0023  0.9956
[49 : 64]:	0.9921  0.9900  0.9710  0.9689  0.9664  0.9651  0.9605  0.9552  0.9546  0.9541  0.9501  0.9499  0.9493  0.9483  0.9467  0.9465
2024-03-21 10:20:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 10:20:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #65: GFLOPs: 4693.0858. Time: 86.4726 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #66: GFLOPs: 4048.7757. Time: 100.2336 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #67: GFLOPs: 4045.1805. Time: 100.3227 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #68: GFLOPs: 4060.8110. Time: 99.9366 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #69: GFLOPs: 7677.8425. Time: 52.8564 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #70: GFLOPs: 6785.6108. Time: 59.8065 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #71: GFLOPs: 7405.1984. Time: 54.8025 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #72: GFLOPs: 7660.9744. Time: 52.9728 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #73: GFLOPs: 6040.8335. Time: 67.1800 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #74: GFLOPs: 5963.1590. Time: 68.0551 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #75: GFLOPs: 7646.4773. Time: 53.0733 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #76: GFLOPs: 5517.6354. Time: 73.5503 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #77: GFLOPs: 7568.3145. Time: 53.6214 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #78: GFLOPs: 7504.4521. Time: 54.0777 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #79: GFLOPs: 3953.7865. Time: 102.6417 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #80: GFLOPs: 3923.3394. Time: 103.4383 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #81: GFLOPs: 5640.8506. Time: 71.9437 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #82: GFLOPs: 7343.1561. Time: 55.2655 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #83: GFLOPs: 6348.1786. Time: 63.9275 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #84: GFLOPs: 4508.4781. Time: 90.0134 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #85: GFLOPs: 6438.8668. Time: 63.0272 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #86: GFLOPs: 2001.2595. Time: 202.7840 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #87: GFLOPs: 2000.1856. Time: 202.8929 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #88: GFLOPs: 2007.5805. Time: 202.1456 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #89: GFLOPs: 5641.8112. Time: 71.9314 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #90: GFLOPs: 7869.2305. Time: 51.5709 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #91: GFLOPs: 1207.7006. Time: 336.0299 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #92: GFLOPs: 1308.2427. Time: 310.2050 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #93: GFLOPs: 1212.1520. Time: 334.7959 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #94: GFLOPs: 1084.5757. Time: 374.1772 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #95: GFLOPs: 6706.3747. Time: 60.5131 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #96: GFLOPs: 1310.6056. Time: 309.6458 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #97: GFLOPs: 6380.9071. Time: 63.5997 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #98: GFLOPs: 1314.9690. Time: 308.6183 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #99: GFLOPs: 8397.7647. Time: 48.3252 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #100: GFLOPs: 6105.8971. Time: 66.4642 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #101: GFLOPs: 8237.7704. Time: 49.2638 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #102: GFLOPs: 1064.9690. Time: 381.0660 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #103: GFLOPs: 1250.1560. Time: 324.6183 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #104: GFLOPs: 1250.4649. Time: 324.5381 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #105: GFLOPs: 6414.1876. Time: 63.2697 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #106: GFLOPs: 7455.1309. Time: 54.4355 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #107: GFLOPs: 7036.0681. Time: 57.6776 us. Best GFLOPs: 8801.2070
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #108: GFLOPs: 9260.2349. Time: 43.8243 us. Best GFLOPs: 9260.2349
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #109: GFLOPs: 9294.6514. Time: 43.6620 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #110: GFLOPs: 7278.7027. Time: 55.7549 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #111: GFLOPs: 6368.2860. Time: 63.7257 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #112: GFLOPs: 7274.3724. Time: 55.7881 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #113: GFLOPs: 8913.7350. Time: 45.5279 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #114: GFLOPs: 2717.2691. Time: 149.3498 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #115: GFLOPs: 8241.6321. Time: 49.2407 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #116: GFLOPs: 7548.9868. Time: 53.7587 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #117: GFLOPs: 7513.6500. Time: 54.0115 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #118: GFLOPs: 5200.9840. Time: 78.0282 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #119: GFLOPs: 8454.2610. Time: 48.0022 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #120: GFLOPs: 8487.2983. Time: 47.8154 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #121: GFLOPs: 5028.1495. Time: 80.7103 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #122: GFLOPs: 8394.2807. Time: 48.3452 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #123: GFLOPs: 8141.5197. Time: 49.8462 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #124: GFLOPs: 5874.7236. Time: 69.0796 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #125: GFLOPs: 7750.8787. Time: 52.3584 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #126: GFLOPs: 2324.4204. Time: 174.5913 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #127: GFLOPs: 983.0668. Time: 412.8137 us. Best GFLOPs: 9294.6514
2024-03-21 10:21:08 [INFO] [task_scheduler.cc:131] [Task #148: fused_nn_conv2d_add_nn_relu_72] Trial #128: GFLOPs: 1203.9441. Time: 337.0783 us. Best GFLOPs: 9294.6514
