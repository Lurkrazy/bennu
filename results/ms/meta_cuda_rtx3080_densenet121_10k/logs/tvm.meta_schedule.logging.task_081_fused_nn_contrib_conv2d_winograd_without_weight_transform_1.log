2024-03-20 22:52:35 [INFO] [task_scheduler.cc:160] Initializing Task #81: "fused_nn_contrib_conv2d_winograd_without_weight_transform_1"
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(16), T.int64(16)))
        input_tile = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(16), T.int64(16)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(32), T.int64(49), T.int64(128)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(32), T.int64(49), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(256) // T.int64(128))
                                    v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(128) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(32) + ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[8, 1, 1, 2, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[49, 1, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 8, 4])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
v117 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v117)
l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b3)
l124 = sch.fuse(l118, l119, l120, l121, preserve_unit_iters=True)
v125 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l126, l127 = sch.split(loop=l124, factors=[None, v125], preserve_unit_iters=True)
sch.bind(loop=l126, thread_axis="blockIdx.x")
sch.bind(loop=l127, thread_axis="threadIdx.x")
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(256) // T.int64(128))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(128) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(32) + ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(7), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[8, 1, 1, 2, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[49, 1, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 8, 4])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(64))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(64) // T.int64(32))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(512)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(256) // T.int64(128))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(128) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(8), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + co_3 * T.int64(2) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(32) + ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(784) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused % T.int64(784) // T.int64(392) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(392) // T.int64(49) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[8, 1, 1, 2, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[49, 1, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 8, 4])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-03-20 23:33:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-20 23:33:26 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-20 23:33:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 492 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:33:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 990 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:33:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1481 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:33:33 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-03-20 23:33:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:33:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:33:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:34:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-20 23:34:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9992  0.9991  0.9991  0.9977  0.9971  0.9967  0.9954  0.9950  0.9940  0.9926  0.9920  0.9913  0.9905  0.9887  0.9879  0.9870
[17 : 32]:	0.9862  0.9848  0.9848  0.9847  0.9832  0.9830  0.9830  0.9817  0.9806  0.9805  0.9805  0.9797  0.9780  0.9780  0.9774  0.9766
[33 : 48]:	0.9758  0.9755  0.9752  0.9744  0.9742  0.9741  0.9736  0.9735  0.9725  0.9722  0.9722  0.9710  0.9708  0.9706  0.9703  0.9703
[49 : 64]:	0.9699  0.9695  0.9692  0.9688  0.9680  0.9677  0.9672  0.9654  0.9651  0.9622  0.9617  0.9606  0.9600  0.9583  0.9582  0.9582
2024-03-20 23:34:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-20 23:34:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #1: GFLOPs: 414.2326. Time: 27.8599 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #2: GFLOPs: 358.5089. Time: 32.1902 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #3: GFLOPs: 301.5694. Time: 38.2681 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #4: GFLOPs: 267.5349. Time: 43.1363 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #5: GFLOPs: 253.8814. Time: 45.4562 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #6: GFLOPs: 147.6137. Time: 78.1803 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #7: GFLOPs: 22.1822. Time: 520.2581 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #8: GFLOPs: 375.1633. Time: 30.7612 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #9: GFLOPs: 251.5968. Time: 45.8689 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #10: GFLOPs: 174.3650. Time: 66.1857 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:121] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #11: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(13), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(22) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.where(ci_p_fused_0 * T.int64(512) + ci_p_fused_1 < T.int64(6272))
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(49))
                            T.where(ci_p_fused_0 * T.int64(512) + ci_p_fused_1 < T.int64(6272))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.where(ci_p_fused_0 * T.int64(512) + ci_p_fused_1 < T.int64(6272))
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(512) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(22) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.where(ci_p_fused_0 * T.int64(512) + ci_p_fused_1 < T.int64(6272))
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(49), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(2) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(64), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(49)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(392))
                                    v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(392) // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(98) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(256))
                                        v1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(256) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64) // T.int64(32))
                                        v3 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(32))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(49), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(2) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(49), p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(2) + ci_1 * T.int64(2) + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(49)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(16) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(49), ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(4), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.where(n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.where(n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.where(n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                        T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                        conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 2, 2, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 2, 1, 2, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 16, 1, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 49, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[64, 1, 2])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch")
l129, l130, l131, l132, l133 = sch.get_loops(block=b95)
l134, l135 = sch.split(loop=l133, factors=[None, 32], preserve_unit_iters=True)
sch.bind(loop=l135, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch")
l136, l137, l138, l139, l140 = sch.get_loops(block=b106)
l141, l142, l143 = sch.split(loop=l140, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l143)
sch.bind(loop=l142, thread_axis="threadIdx.x")
b144 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b144, ann_key="meta_schedule.unroll_explicit")
b145, b146, b147, b148, b149, b150, b151, b152, b153 = sch.get_child_blocks(b144)
l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b145)
l160, l161, l162, l163, l164, l165 = sch.get_loops(block=b146)
sch.annotate(block_or_loop=l160, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l160, ann_key="pragma_unroll_explicit", ann_val=1)
l166, l167, l168, l169, l170, l171 = sch.get_loops(block=b147)
l172, l173, l174, l175, l176, l177 = sch.get_loops(block=b148)
l178, l179, l180, l181, l182, l183, l184 = sch.get_loops(block=b149)
l185, l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198 = sch.get_loops(block=b150)
sch.annotate(block_or_loop=l185, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l185, ann_key="pragma_unroll_explicit", ann_val=1)
l199, l200, l201, l202, l203, l204, l205 = sch.get_loops(block=b151)
l206, l207, l208, l209, l210, l211, l212, l213 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l206, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l206, ann_key="pragma_unroll_explicit", ann_val=1)
l214, l215, l216, l217 = sch.get_loops(block=b153)
b218 = sch.get_block(name="data_pack", func_name="main")
l219, l220, l221, l222, l223, l224 = sch.get_loops(block=b218)
b225 = sch.decompose_reduction(block=b218, loop=l223)
b226 = sch.get_block(name="bgemm", func_name="main")
l227, l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240 = sch.get_loops(block=b226)
b241 = sch.decompose_reduction(block=b226, loop=l230)
b242 = sch.get_block(name="inverse", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b242)
b251 = sch.decompose_reduction(block=b242, loop=l249)
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #12: GFLOPs: 193.0184. Time: 59.7895 us. Best GFLOPs: 414.2326
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #13: GFLOPs: 731.4957. Time: 15.7766 us. Best GFLOPs: 731.4957
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #14: GFLOPs: 188.3598. Time: 61.2683 us. Best GFLOPs: 731.4957
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #15: GFLOPs: 568.5640. Time: 20.2976 us. Best GFLOPs: 731.4957
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #16: GFLOPs: 324.4322. Time: 35.5713 us. Best GFLOPs: 731.4957
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #17: GFLOPs: 235.4783. Time: 49.0087 us. Best GFLOPs: 731.4957
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #18: GFLOPs: 769.2642. Time: 15.0020 us. Best GFLOPs: 769.2642
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #19: GFLOPs: 260.0648. Time: 44.3754 us. Best GFLOPs: 769.2642
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #20: GFLOPs: 257.1765. Time: 44.8738 us. Best GFLOPs: 769.2642
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #21: GFLOPs: 478.0584. Time: 24.1403 us. Best GFLOPs: 769.2642
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #22: GFLOPs: 87.5189. Time: 131.8627 us. Best GFLOPs: 769.2642
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #23: GFLOPs: 1086.1260. Time: 10.6254 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #24: GFLOPs: 111.2579. Time: 103.7272 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #25: GFLOPs: 113.0910. Time: 102.0460 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #26: GFLOPs: 196.9937. Time: 58.5830 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #27: GFLOPs: 184.7171. Time: 62.4765 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #28: GFLOPs: 143.4549. Time: 80.4467 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #29: GFLOPs: 615.4711. Time: 18.7506 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #30: GFLOPs: 274.8135. Time: 41.9939 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #31: GFLOPs: 146.9512. Time: 78.5327 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #32: GFLOPs: 463.0411. Time: 24.9232 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #33: GFLOPs: 243.8695. Time: 47.3224 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #34: GFLOPs: 217.5152. Time: 53.0560 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #35: GFLOPs: 20.6704. Time: 558.3103 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #36: GFLOPs: 285.7409. Time: 40.3879 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #37: GFLOPs: 350.4271. Time: 32.9326 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #38: GFLOPs: 73.0362. Time: 158.0105 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #39: GFLOPs: 91.3851. Time: 126.2841 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #40: GFLOPs: 333.6331. Time: 34.5903 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #41: GFLOPs: 176.9353. Time: 65.2243 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #42: GFLOPs: 776.3186. Time: 14.8656 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #43: GFLOPs: 346.7297. Time: 33.2838 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #44: GFLOPs: 195.8951. Time: 58.9115 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #45: GFLOPs: 321.7549. Time: 35.8673 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #46: GFLOPs: 430.2539. Time: 26.8225 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #47: GFLOPs: 310.3715. Time: 37.1828 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #48: GFLOPs: 186.5017. Time: 61.8787 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #49: GFLOPs: 256.9152. Time: 44.9194 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #50: GFLOPs: 311.2882. Time: 37.0733 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #51: GFLOPs: 404.4617. Time: 28.5329 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #52: GFLOPs: 122.6194. Time: 94.1163 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #53: GFLOPs: 366.2291. Time: 31.5116 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #54: GFLOPs: 339.8346. Time: 33.9591 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #55: GFLOPs: 437.6554. Time: 26.3689 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #56: GFLOPs: 790.9101. Time: 14.5914 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #57: GFLOPs: 275.2210. Time: 41.9317 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #58: GFLOPs: 299.7255. Time: 38.5035 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #59: GFLOPs: 335.7485. Time: 34.3724 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #60: GFLOPs: 146.3486. Time: 78.8561 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #61: GFLOPs: 267.1190. Time: 43.2035 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #62: GFLOPs: 217.0809. Time: 53.1621 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #63: GFLOPs: 298.1887. Time: 38.7019 us. Best GFLOPs: 1086.1260
2024-03-21 00:12:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #64: GFLOPs: 239.8450. Time: 48.1164 us. Best GFLOPs: 1086.1260
2024-03-21 00:16:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:16:09 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-03-21 00:16:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 419 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 851 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1286 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:16 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-03-21 00:16:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:16:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3706  1.3476  1.3313  1.3261  1.3076  1.2938  1.2789  1.2723  1.2700  1.2675  1.2648  1.2606  1.2470  1.2468  1.2465  1.2459
[17 : 32]:	1.2455  1.2453  1.2453  1.2441  1.2421  1.2385  1.2379  1.2373  1.2367  1.2365  1.2364  1.2358  1.2334  1.2315  1.2259  1.2256
[33 : 48]:	1.2235  1.2212  1.2162  1.2132  1.2118  1.2118  1.2111  1.2086  1.2073  1.2068  1.2055  1.1991  1.1933  1.1799  1.1777  1.1732
[49 : 64]:	1.1597  1.1517  1.1449  1.1442  1.1411  1.1310  1.1279  1.1221  1.1204  1.1178  1.1162  1.1120  1.1089  1.1082  1.1056  1.1053
2024-03-21 00:16:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:16:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #65: GFLOPs: 622.9098. Time: 18.5267 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #66: GFLOPs: 690.7629. Time: 16.7069 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #67: GFLOPs: 652.0954. Time: 17.6975 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #68: GFLOPs: 748.6317. Time: 15.4154 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #69: GFLOPs: 606.8334. Time: 19.0175 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #70: GFLOPs: 345.8466. Time: 33.3688 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #71: GFLOPs: 651.2428. Time: 17.7207 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #72: GFLOPs: 574.2244. Time: 20.0975 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #73: GFLOPs: 692.4219. Time: 16.6668 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #74: GFLOPs: 606.9961. Time: 19.0124 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #75: GFLOPs: 504.2418. Time: 22.8868 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #76: GFLOPs: 747.3446. Time: 15.4420 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #77: GFLOPs: 732.3114. Time: 15.7590 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #78: GFLOPs: 724.2664. Time: 15.9340 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #79: GFLOPs: 647.8031. Time: 17.8148 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #80: GFLOPs: 647.8198. Time: 17.8143 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #81: GFLOPs: 360.6871. Time: 31.9958 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #82: GFLOPs: 649.2579. Time: 17.7749 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #83: GFLOPs: 647.6650. Time: 17.8186 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #84: GFLOPs: 688.5705. Time: 16.7601 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #85: GFLOPs: 593.7988. Time: 19.4350 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #86: GFLOPs: 647.7839. Time: 17.8153 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #87: GFLOPs: 647.6173. Time: 17.8199 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #88: GFLOPs: 647.4689. Time: 17.8240 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #89: GFLOPs: 647.4847. Time: 17.8236 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #90: GFLOPs: 500.4479. Time: 23.0603 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #91: GFLOPs: 534.3822. Time: 21.5959 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #92: GFLOPs: 501.6853. Time: 23.0034 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #93: GFLOPs: 731.4059. Time: 15.7785 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #94: GFLOPs: 1047.6468. Time: 11.0156 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #95: GFLOPs: 1044.8410. Time: 11.0452 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #96: GFLOPs: 335.2991. Time: 34.4185 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #97: GFLOPs: 688.6912. Time: 16.7571 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #98: GFLOPs: 647.4281. Time: 17.8251 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #99: GFLOPs: 648.4551. Time: 17.7969 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #100: GFLOPs: 321.9449. Time: 35.8461 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #101: GFLOPs: 343.3597. Time: 33.6105 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #102: GFLOPs: 343.3369. Time: 33.6127 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #103: GFLOPs: 343.3878. Time: 33.6077 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #104: GFLOPs: 302.1810. Time: 38.1906 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #105: GFLOPs: 309.9320. Time: 37.2355 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #106: GFLOPs: 942.1822. Time: 12.2487 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #107: GFLOPs: 343.3620. Time: 33.6102 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #108: GFLOPs: 1003.9868. Time: 11.4947 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #109: GFLOPs: 303.7986. Time: 37.9873 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #110: GFLOPs: 613.6653. Time: 18.8058 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #111: GFLOPs: 291.4997. Time: 39.5900 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #112: GFLOPs: 606.6621. Time: 19.0229 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #113: GFLOPs: 620.0271. Time: 18.6129 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #114: GFLOPs: 1000.5422. Time: 11.5342 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #115: GFLOPs: 638.6615. Time: 18.0698 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #116: GFLOPs: 601.7329. Time: 19.1787 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #117: GFLOPs: 623.1215. Time: 18.5204 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #118: GFLOPs: 638.6020. Time: 18.0715 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #119: GFLOPs: 523.9073. Time: 22.0277 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #120: GFLOPs: 407.7060. Time: 28.3059 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #121: GFLOPs: 534.2002. Time: 21.6033 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #122: GFLOPs: 744.2918. Time: 15.5053 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #123: GFLOPs: 614.7792. Time: 18.7717 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #124: GFLOPs: 970.7848. Time: 11.8878 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #125: GFLOPs: 520.4231. Time: 22.1752 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #126: GFLOPs: 1031.4323. Time: 11.1888 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #127: GFLOPs: 307.1300. Time: 37.5752 us. Best GFLOPs: 1086.1260
2024-03-21 00:17:47 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #128: GFLOPs: 408.9952. Time: 28.2167 us. Best GFLOPs: 1086.1260
2024-03-21 00:21:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:21:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 00:21:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 777 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:09 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-03-21 00:21:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:21:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.0494  1.9567  1.9128  1.8994  1.8154  1.8033  1.8028  1.7935  1.7173  1.7099  1.7071  1.6996  1.6908  1.6888  1.6794  1.6772
[17 : 32]:	1.6767  1.6641  1.6628  1.6555  1.6545  1.6537  1.6521  1.6502  1.6502  1.6498  1.6461  1.6429  1.6417  1.6416  1.6395  1.6382
[33 : 48]:	1.6377  1.6290  1.6286  1.6137  1.6114  1.6017  1.5954  1.5953  1.5866  1.5828  1.5817  1.5790  1.5657  1.5652  1.5627  1.5618
[49 : 64]:	1.5612  1.5599  1.5594  1.5594  1.5521  1.5501  1.5491  1.5456  1.5455  1.5414  1.5366  1.5330  1.5329  1.5329  1.5288  1.5204
2024-03-21 00:21:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:21:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #129: GFLOPs: 768.1983. Time: 15.0228 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #130: GFLOPs: 790.9279. Time: 14.5911 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #131: GFLOPs: 977.4331. Time: 11.8069 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #132: GFLOPs: 908.0843. Time: 12.7086 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #133: GFLOPs: 981.6415. Time: 11.7563 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #134: GFLOPs: 962.1459. Time: 11.9945 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #135: GFLOPs: 964.4902. Time: 11.9654 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #136: GFLOPs: 982.6149. Time: 11.7447 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #137: GFLOPs: 452.5617. Time: 25.5003 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #138: GFLOPs: 832.6052. Time: 13.8607 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #139: GFLOPs: 451.0104. Time: 25.5881 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #140: GFLOPs: 709.7325. Time: 16.2603 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #141: GFLOPs: 423.5398. Time: 27.2477 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #142: GFLOPs: 979.1717. Time: 11.7860 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #143: GFLOPs: 965.6255. Time: 11.9513 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #144: GFLOPs: 901.1125. Time: 12.8069 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #145: GFLOPs: 957.4141. Time: 12.0538 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #146: GFLOPs: 976.3858. Time: 11.8196 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #147: GFLOPs: 980.1982. Time: 11.7736 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #148: GFLOPs: 976.1146. Time: 11.8229 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #149: GFLOPs: 720.4563. Time: 16.0183 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #150: GFLOPs: 720.4051. Time: 16.0194 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #151: GFLOPs: 732.6594. Time: 15.7515 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #152: GFLOPs: 917.2315. Time: 12.5819 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #153: GFLOPs: 878.1211. Time: 13.1422 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #154: GFLOPs: 720.4435. Time: 16.0186 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #155: GFLOPs: 423.4935. Time: 27.2507 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #156: GFLOPs: 732.6281. Time: 15.7522 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #157: GFLOPs: 979.2218. Time: 11.7854 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #158: GFLOPs: 916.4654. Time: 12.5924 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #159: GFLOPs: 864.5284. Time: 13.3489 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #160: GFLOPs: 732.7888. Time: 15.7487 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #161: GFLOPs: 923.2727. Time: 12.4995 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #162: GFLOPs: 923.0757. Time: 12.5022 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #163: GFLOPs: 402.9460. Time: 28.6403 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #164: GFLOPs: 450.2658. Time: 25.6304 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #165: GFLOPs: 734.5875. Time: 15.7102 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #166: GFLOPs: 938.7037. Time: 12.2941 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #167: GFLOPs: 979.0435. Time: 11.7875 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #168: GFLOPs: 874.1993. Time: 13.2012 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #169: GFLOPs: 643.8930. Time: 17.9230 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #170: GFLOPs: 945.0760. Time: 12.2112 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #171: GFLOPs: 728.0256. Time: 15.8517 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #172: GFLOPs: 572.8754. Time: 20.1448 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #173: GFLOPs: 963.0513. Time: 11.9832 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #174: GFLOPs: 644.3468. Time: 17.9104 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #175: GFLOPs: 981.8034. Time: 11.7544 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #176: GFLOPs: 885.1111. Time: 13.0385 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #177: GFLOPs: 962.8498. Time: 11.9858 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #178: GFLOPs: 901.9848. Time: 12.7945 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #179: GFLOPs: 834.1930. Time: 13.8343 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #180: GFLOPs: 923.0928. Time: 12.5020 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #181: GFLOPs: 1002.7687. Time: 11.5086 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #182: GFLOPs: 965.4540. Time: 11.9534 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #183: GFLOPs: 940.3873. Time: 12.2721 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #184: GFLOPs: 966.0887. Time: 11.9456 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #185: GFLOPs: 939.8275. Time: 12.2794 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #186: GFLOPs: 977.5115. Time: 11.8060 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #187: GFLOPs: 977.3021. Time: 11.8085 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #188: GFLOPs: 976.7250. Time: 11.8155 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #189: GFLOPs: 875.2157. Time: 13.1859 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #190: GFLOPs: 484.4093. Time: 23.8238 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #191: GFLOPs: 204.8905. Time: 56.3251 us. Best GFLOPs: 1086.1260
2024-03-21 00:22:41 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #192: GFLOPs: 83.9243. Time: 137.5106 us. Best GFLOPs: 1086.1260
2024-03-21 00:25:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:25:13 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 00:25:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 785 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1571 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:21 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-03-21 00:25:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:25:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:26:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.5480  2.4790  2.4548  2.4485  2.4077  2.3856  2.2966  2.2966  2.2888  2.2774  2.2773  2.2562  2.2507  2.2483  2.2176  2.2073
[17 : 32]:	2.2043  2.2014  2.1984  2.1866  2.1793  2.1775  2.1763  2.1670  2.1655  2.1586  2.1557  2.1553  2.1531  2.1506  2.1483  2.1388
[33 : 48]:	2.1352  2.1342  2.1280  2.1139  2.1114  2.1079  2.0922  2.0840  2.0831  2.0689  2.0689  2.0679  2.0661  2.0640  2.0522  2.0413
[49 : 64]:	2.0398  2.0360  2.0293  2.0223  2.0210  2.0185  2.0151  2.0137  2.0077  2.0046  2.0035  2.0006  1.9924  1.9887  1.9851  1.9848
2024-03-21 00:26:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:26:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #193: GFLOPs: 1089.5492. Time: 10.5920 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #194: GFLOPs: 474.1105. Time: 24.3413 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #195: GFLOPs: 474.5509. Time: 24.3187 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #196: GFLOPs: 493.2108. Time: 23.3987 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #197: GFLOPs: 457.0252. Time: 25.2513 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #198: GFLOPs: 257.8198. Time: 44.7618 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #199: GFLOPs: 1089.1003. Time: 10.5963 us. Best GFLOPs: 1089.5492
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #200: GFLOPs: 1124.0587. Time: 10.2668 us. Best GFLOPs: 1124.0587
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #201: GFLOPs: 1119.0592. Time: 10.3127 us. Best GFLOPs: 1124.0587
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #202: GFLOPs: 1077.8277. Time: 10.7072 us. Best GFLOPs: 1124.0587
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #203: GFLOPs: 1081.7885. Time: 10.6680 us. Best GFLOPs: 1124.0587
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #204: GFLOPs: 1147.9299. Time: 10.0533 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #205: GFLOPs: 1059.6094. Time: 10.8913 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #206: GFLOPs: 435.0244. Time: 26.5283 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #207: GFLOPs: 1134.1536. Time: 10.1754 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #208: GFLOPs: 1090.8604. Time: 10.5792 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #209: GFLOPs: 1062.6579. Time: 10.8600 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #210: GFLOPs: 468.5402. Time: 24.6307 us. Best GFLOPs: 1147.9299
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #211: GFLOPs: 1199.8505. Time: 9.6183 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #212: GFLOPs: 787.7841. Time: 14.6493 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #213: GFLOPs: 655.2676. Time: 17.6119 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #214: GFLOPs: 1120.7259. Time: 10.2973 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #215: GFLOPs: 1070.1878. Time: 10.7836 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #216: GFLOPs: 455.0115. Time: 25.3630 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #217: GFLOPs: 557.2158. Time: 20.7110 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #218: GFLOPs: 1062.9884. Time: 10.8566 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #219: GFLOPs: 525.8682. Time: 21.9456 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #220: GFLOPs: 688.8563. Time: 16.7531 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #221: GFLOPs: 805.0502. Time: 14.3351 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #222: GFLOPs: 804.8977. Time: 14.3378 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #223: GFLOPs: 525.8121. Time: 21.9479 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #224: GFLOPs: 545.8264. Time: 21.1431 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #225: GFLOPs: 410.0850. Time: 28.1417 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #226: GFLOPs: 481.7134. Time: 23.9572 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #227: GFLOPs: 1091.0112. Time: 10.5778 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #228: GFLOPs: 376.9148. Time: 30.6183 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #229: GFLOPs: 559.0808. Time: 20.6419 us. Best GFLOPs: 1199.8505
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #230: GFLOPs: 1201.3311. Time: 9.6064 us. Best GFLOPs: 1201.3311
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #231: GFLOPs: 1173.7675. Time: 9.8320 us. Best GFLOPs: 1201.3311
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #232: GFLOPs: 1172.4776. Time: 9.8428 us. Best GFLOPs: 1201.3311
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #233: GFLOPs: 1206.1141. Time: 9.5683 us. Best GFLOPs: 1206.1141
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #234: GFLOPs: 489.7829. Time: 23.5624 us. Best GFLOPs: 1206.1141
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #235: GFLOPs: 756.8265. Time: 15.2485 us. Best GFLOPs: 1206.1141
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #236: GFLOPs: 925.7157. Time: 12.4665 us. Best GFLOPs: 1206.1141
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #237: GFLOPs: 1085.5314. Time: 10.6312 us. Best GFLOPs: 1206.1141
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #238: GFLOPs: 1238.2577. Time: 9.3199 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #239: GFLOPs: 1157.0539. Time: 9.9740 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #240: GFLOPs: 579.1676. Time: 19.9260 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #241: GFLOPs: 528.4262. Time: 21.8393 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #242: GFLOPs: 984.9918. Time: 11.7163 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #243: GFLOPs: 783.1825. Time: 14.7354 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #244: GFLOPs: 457.7284. Time: 25.2125 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #245: GFLOPs: 493.7786. Time: 23.3718 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #246: GFLOPs: 566.4174. Time: 20.3745 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #247: GFLOPs: 1080.2228. Time: 10.6834 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #248: GFLOPs: 748.3683. Time: 15.4209 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #249: GFLOPs: 969.8020. Time: 11.8998 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #250: GFLOPs: 988.8488. Time: 11.6706 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #251: GFLOPs: 851.0364. Time: 13.5605 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #252: GFLOPs: 550.6425. Time: 20.9582 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #253: GFLOPs: 1038.8756. Time: 11.1086 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #254: GFLOPs: 160.3696. Time: 71.9618 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #255: GFLOPs: 241.5718. Time: 47.7725 us. Best GFLOPs: 1238.2577
2024-03-21 00:27:05 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #256: GFLOPs: 84.6605. Time: 136.3148 us. Best GFLOPs: 1238.2577
2024-03-21 00:31:30 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:31:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 00:31:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 387 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:31:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 771 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:31:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:31:37 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2024-03-21 00:31:45 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:31:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:32:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:32:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 125 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:32:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	3.1257  3.0345  2.7162  2.6992  2.6988  2.6753  2.6663  2.6444  2.5878  2.5851  2.5763  2.5683  2.5666  2.5666  2.5563  2.5532
[17 : 32]:	2.5441  2.5428  2.4882  2.4643  2.4513  2.4339  2.4283  2.4283  2.3938  2.3797  2.3701  2.3606  2.3583  2.3475  2.3380  2.2915
[33 : 48]:	2.2878  2.2793  2.2776  2.2450  2.2286  2.2263  2.2215  2.1963  2.1945  2.1615  2.1606  2.1468  2.1455  2.1414  2.1378  2.1343
[49 : 64]:	2.1204  2.1106  2.0886  2.0800  2.0680  2.0558  2.0213  2.0183  2.0129  2.0008  1.9466  1.9400  1.9214  1.9099  1.9041  1.9025
2024-03-21 00:32:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:32:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #257: GFLOPs: 477.2092. Time: 24.1833 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #258: GFLOPs: 555.0883. Time: 20.7903 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #259: GFLOPs: 732.8140. Time: 15.7482 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #260: GFLOPs: 731.0520. Time: 15.7861 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #261: GFLOPs: 672.3980. Time: 17.1632 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #262: GFLOPs: 574.6090. Time: 20.0841 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #263: GFLOPs: 720.9667. Time: 16.0070 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #264: GFLOPs: 714.4845. Time: 16.1522 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #265: GFLOPs: 442.6433. Time: 26.0717 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #266: GFLOPs: 440.5604. Time: 26.1950 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #267: GFLOPs: 475.3329. Time: 24.2787 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #268: GFLOPs: 215.1110. Time: 53.6489 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #269: GFLOPs: 723.1559. Time: 15.9585 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #270: GFLOPs: 722.7808. Time: 15.9668 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #271: GFLOPs: 741.2710. Time: 15.5685 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #272: GFLOPs: 442.5702. Time: 26.0760 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #273: GFLOPs: 742.4028. Time: 15.5448 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #274: GFLOPs: 1236.5873. Time: 9.3325 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #275: GFLOPs: 997.2404. Time: 11.5724 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #276: GFLOPs: 991.3082. Time: 11.6417 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #277: GFLOPs: 731.0720. Time: 15.7857 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #278: GFLOPs: 670.5706. Time: 17.2099 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #279: GFLOPs: 736.4707. Time: 15.6700 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #280: GFLOPs: 720.2058. Time: 16.0239 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #281: GFLOPs: 579.8633. Time: 19.9021 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #282: GFLOPs: 550.6954. Time: 20.9562 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #283: GFLOPs: 550.3047. Time: 20.9711 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #284: GFLOPs: 550.3058. Time: 20.9710 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #285: GFLOPs: 580.5622. Time: 19.8781 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #286: GFLOPs: 723.7636. Time: 15.9451 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #287: GFLOPs: 723.8499. Time: 15.9432 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #288: GFLOPs: 740.0726. Time: 15.5937 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #289: GFLOPs: 214.6401. Time: 53.7666 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #290: GFLOPs: 742.5201. Time: 15.5423 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #291: GFLOPs: 718.5557. Time: 16.0607 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #292: GFLOPs: 210.1843. Time: 54.9065 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #293: GFLOPs: 721.1613. Time: 16.0026 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #294: GFLOPs: 438.2640. Time: 26.3323 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #295: GFLOPs: 1180.2215. Time: 9.7782 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #296: GFLOPs: 442.6847. Time: 26.0693 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #297: GFLOPs: 949.0673. Time: 12.1598 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #298: GFLOPs: 1191.6838. Time: 9.6842 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #299: GFLOPs: 450.3917. Time: 25.6232 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #300: GFLOPs: 654.5809. Time: 17.6303 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #301: GFLOPs: 1190.4613. Time: 9.6941 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #302: GFLOPs: 755.8674. Time: 15.2679 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #303: GFLOPs: 1205.9531. Time: 9.5696 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #304: GFLOPs: 1207.1011. Time: 9.5605 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #305: GFLOPs: 1177.4629. Time: 9.8011 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #306: GFLOPs: 996.8657. Time: 11.5768 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #307: GFLOPs: 749.5309. Time: 15.3969 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #308: GFLOPs: 1005.3865. Time: 11.4786 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #309: GFLOPs: 724.7351. Time: 15.9237 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #310: GFLOPs: 744.2410. Time: 15.5064 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #311: GFLOPs: 1175.0444. Time: 9.8213 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #312: GFLOPs: 1179.5936. Time: 9.7834 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #313: GFLOPs: 999.4979. Time: 11.5463 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #314: GFLOPs: 985.2680. Time: 11.7130 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #315: GFLOPs: 733.5587. Time: 15.7322 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #316: GFLOPs: 994.6162. Time: 11.6029 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #317: GFLOPs: 424.8184. Time: 27.1657 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #318: GFLOPs: 160.1910. Time: 72.0420 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #319: GFLOPs: 115.0420. Time: 100.3153 us. Best GFLOPs: 1238.2577
2024-03-21 00:33:14 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #320: GFLOPs: 282.7975. Time: 40.8083 us. Best GFLOPs: 1238.2577
2024-03-21 00:42:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:42:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 00:42:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:42:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 787 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:42:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:42:40 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-03-21 00:42:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:42:57 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:43:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:43:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:43:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4212  1.2879  1.2748  1.2537  1.2413  1.2410  1.2372  1.2329  1.2260  1.2051  1.2005  1.1919  1.1917  1.1813  1.1743  1.1701
[17 : 32]:	1.1690  1.1672  1.1607  1.1602  1.1585  1.1560  1.1533  1.1522  1.1495  1.1431  1.1424  1.1417  1.1372  1.1312  1.1298  1.1265
[33 : 48]:	1.1251  1.1251  1.1188  1.1170  1.1105  1.1062  1.1026  1.0965  1.0964  1.0955  1.0955  1.0933  1.0908  1.0879  1.0873  1.0859
[49 : 64]:	1.0850  1.0726  1.0700  1.0694  1.0690  1.0689  1.0654  1.0629  1.0609  1.0600  1.0481  1.0430  1.0412  1.0272  1.0207  1.0201
2024-03-21 00:43:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:43:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #321: GFLOPs: 1143.9016. Time: 10.0887 us. Best GFLOPs: 1238.2577
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #322: GFLOPs: 1408.4919. Time: 8.1935 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #323: GFLOPs: 1408.3659. Time: 8.1942 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #324: GFLOPs: 1262.2958. Time: 9.1425 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #325: GFLOPs: 1285.5715. Time: 8.9769 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #326: GFLOPs: 1190.8768. Time: 9.6907 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #327: GFLOPs: 1318.2600. Time: 8.7543 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #328: GFLOPs: 1254.9873. Time: 9.1957 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #329: GFLOPs: 849.2800. Time: 13.5885 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #330: GFLOPs: 1190.3080. Time: 9.6954 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #331: GFLOPs: 1234.6383. Time: 9.3473 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #332: GFLOPs: 1124.3790. Time: 10.2639 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #333: GFLOPs: 1229.2416. Time: 9.3883 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #334: GFLOPs: 1318.6696. Time: 8.7516 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #335: GFLOPs: 693.4431. Time: 16.6423 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #336: GFLOPs: 693.5100. Time: 16.6407 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #337: GFLOPs: 604.0305. Time: 19.1058 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #338: GFLOPs: 1210.8428. Time: 9.5309 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #339: GFLOPs: 1120.3985. Time: 10.3003 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #340: GFLOPs: 781.2863. Time: 14.7711 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #341: GFLOPs: 1135.2975. Time: 10.1652 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #342: GFLOPs: 1124.6247. Time: 10.2616 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #343: GFLOPs: 1308.3580. Time: 8.8206 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #344: GFLOPs: 1308.0421. Time: 8.8227 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #345: GFLOPs: 763.1774. Time: 15.1216 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #346: GFLOPs: 1400.9818. Time: 8.2374 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #347: GFLOPs: 1326.6451. Time: 8.6990 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #348: GFLOPs: 703.5117. Time: 16.4041 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #349: GFLOPs: 1201.4868. Time: 9.6052 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #350: GFLOPs: 1210.9034. Time: 9.5305 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #351: GFLOPs: 1214.9881. Time: 9.4984 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #352: GFLOPs: 1166.1191. Time: 9.8965 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #353: GFLOPs: 1159.0591. Time: 9.9568 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #354: GFLOPs: 1158.7385. Time: 9.9595 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #355: GFLOPs: 1150.2560. Time: 10.0330 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #356: GFLOPs: 683.2379. Time: 16.8909 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #357: GFLOPs: 789.2112. Time: 14.6228 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #358: GFLOPs: 1285.9909. Time: 8.9740 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #359: GFLOPs: 1167.6995. Time: 9.8831 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #360: GFLOPs: 1032.8728. Time: 11.1732 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #361: GFLOPs: 1167.1429. Time: 9.8878 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #362: GFLOPs: 733.1771. Time: 15.7404 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #363: GFLOPs: 732.7025. Time: 15.7506 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #364: GFLOPs: 1259.8204. Time: 9.1604 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #365: GFLOPs: 373.7440. Time: 30.8780 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #366: GFLOPs: 1156.3242. Time: 9.9803 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #367: GFLOPs: 1000.9624. Time: 11.5294 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #368: GFLOPs: 1195.1063. Time: 9.6564 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #369: GFLOPs: 532.0507. Time: 21.6906 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #370: GFLOPs: 1131.3127. Time: 10.2010 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #371: GFLOPs: 1258.1464. Time: 9.1726 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #372: GFLOPs: 1155.6592. Time: 9.9861 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #373: GFLOPs: 1076.5408. Time: 10.7200 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #374: GFLOPs: 1133.6186. Time: 10.1802 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #375: GFLOPs: 1251.2397. Time: 9.2232 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #376: GFLOPs: 1072.4796. Time: 10.7606 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #377: GFLOPs: 1158.3174. Time: 9.9631 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #378: GFLOPs: 1134.4194. Time: 10.1730 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #379: GFLOPs: 1242.9228. Time: 9.2850 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #380: GFLOPs: 1027.1121. Time: 11.2359 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #381: GFLOPs: 1112.6829. Time: 10.3718 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #382: GFLOPs: 317.6288. Time: 36.3332 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #383: GFLOPs: 195.2824. Time: 59.0964 us. Best GFLOPs: 1408.4919
2024-03-21 00:44:08 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #384: GFLOPs: 852.6513. Time: 13.5348 us. Best GFLOPs: 1408.4919
2024-03-21 00:49:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:50:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 00:50:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 783 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:07 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-03-21 00:50:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 00:50:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.8521  1.6974  1.6927  1.6880  1.5841  1.5434  1.5381  1.5212  1.5187  1.5155  1.5131  1.5064  1.4758  1.4729  1.4637  1.4621
[17 : 32]:	1.4612  1.4537  1.4433  1.4307  1.4208  1.4168  1.4012  1.4003  1.3947  1.3947  1.3891  1.3792  1.3792  1.3693  1.3680  1.3632
[33 : 48]:	1.3582  1.3221  1.3104  1.3089  1.3078  1.3071  1.3028  1.2718  1.2543  1.2299  1.2248  1.2235  1.2073  1.2000  1.1995  1.1917
[49 : 64]:	1.1910  1.1747  1.1738  1.1711  1.1711  1.1646  1.1638  1.1606  1.1577  1.1477  1.1346  1.1328  1.1255  1.1250  1.1243  1.1219
2024-03-21 00:50:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:50:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #385: GFLOPs: 1008.0667. Time: 11.4481 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #386: GFLOPs: 1096.1419. Time: 10.5283 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #387: GFLOPs: 1280.4611. Time: 9.0128 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #388: GFLOPs: 1037.8510. Time: 11.1196 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #389: GFLOPs: 883.4029. Time: 13.0637 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #390: GFLOPs: 883.9114. Time: 13.0561 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #391: GFLOPs: 1171.4896. Time: 9.8511 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #392: GFLOPs: 1134.2815. Time: 10.1743 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #393: GFLOPs: 1237.1110. Time: 9.3286 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #394: GFLOPs: 1232.2859. Time: 9.3651 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #395: GFLOPs: 1253.6712. Time: 9.2053 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #396: GFLOPs: 1166.7665. Time: 9.8910 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #397: GFLOPs: 784.4086. Time: 14.7123 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #398: GFLOPs: 1151.2791. Time: 10.0241 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #399: GFLOPs: 881.7602. Time: 13.0880 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #400: GFLOPs: 914.0047. Time: 12.6263 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #401: GFLOPs: 1165.8200. Time: 9.8990 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #402: GFLOPs: 893.0901. Time: 12.9220 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #403: GFLOPs: 850.1376. Time: 13.5748 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #404: GFLOPs: 1165.7697. Time: 9.8995 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #405: GFLOPs: 1025.4030. Time: 11.2546 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #406: GFLOPs: 1320.6641. Time: 8.7384 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #407: GFLOPs: 1138.2635. Time: 10.1387 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #408: GFLOPs: 1011.5044. Time: 11.4092 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #409: GFLOPs: 1126.6785. Time: 10.2429 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #410: GFLOPs: 1046.9851. Time: 11.0226 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #411: GFLOPs: 973.3162. Time: 11.8569 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #412: GFLOPs: 1197.7304. Time: 9.6353 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #413: GFLOPs: 1128.8719. Time: 10.2230 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #414: GFLOPs: 840.9207. Time: 13.7236 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #415: GFLOPs: 930.3479. Time: 12.4045 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #416: GFLOPs: 992.7292. Time: 11.6250 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #417: GFLOPs: 1282.1663. Time: 9.0008 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #418: GFLOPs: 68.8111. Time: 167.7124 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #419: GFLOPs: 817.3875. Time: 14.1187 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #420: GFLOPs: 816.4560. Time: 14.1348 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #421: GFLOPs: 833.2334. Time: 13.8502 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #422: GFLOPs: 1126.5530. Time: 10.2441 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #423: GFLOPs: 1129.5671. Time: 10.2167 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #424: GFLOPs: 1197.9123. Time: 9.6338 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #425: GFLOPs: 481.3664. Time: 23.9744 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #426: GFLOPs: 1156.3015. Time: 9.9805 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #427: GFLOPs: 488.3312. Time: 23.6325 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #428: GFLOPs: 496.2005. Time: 23.2577 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #429: GFLOPs: 1143.4790. Time: 10.0924 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #430: GFLOPs: 1215.3225. Time: 9.4958 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #431: GFLOPs: 1268.6288. Time: 9.0968 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #432: GFLOPs: 65.9408. Time: 175.0126 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #433: GFLOPs: 766.9213. Time: 15.0478 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #434: GFLOPs: 386.1793. Time: 29.8837 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #435: GFLOPs: 385.4895. Time: 29.9372 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #436: GFLOPs: 76.4339. Time: 150.9864 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #437: GFLOPs: 75.5526. Time: 152.7476 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #438: GFLOPs: 65.7411. Time: 175.5443 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #439: GFLOPs: 583.9059. Time: 19.7643 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #440: GFLOPs: 1227.5763. Time: 9.4010 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #441: GFLOPs: 680.5935. Time: 16.9565 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #442: GFLOPs: 111.5643. Time: 103.4424 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #443: GFLOPs: 788.7462. Time: 14.6314 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #444: GFLOPs: 688.5916. Time: 16.7595 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #445: GFLOPs: 930.3689. Time: 12.4042 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #446: GFLOPs: 264.5526. Time: 43.6226 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #447: GFLOPs: 188.6272. Time: 61.1814 us. Best GFLOPs: 1408.4919
2024-03-21 00:51:37 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #448: GFLOPs: 421.6536. Time: 27.3696 us. Best GFLOPs: 1408.4919
2024-03-21 01:02:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:02:55 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:02:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:02:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 780 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1173 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:01 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-03-21 01:03:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:03:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7446  1.6412  1.6381  1.5771  1.3104  1.2997  1.2992  1.2949  1.2941  1.2877  1.2858  1.2653  1.2604  1.2584  1.2509  1.2489
[17 : 32]:	1.2487  1.2463  1.2461  1.2368  1.2295  1.2233  1.2233  1.2196  1.2175  1.2155  1.2132  1.2103  1.2094  1.2092  1.1975  1.1722
[33 : 48]:	1.1717  1.1683  1.1557  1.1543  1.1509  1.1486  1.1450  1.1425  1.1425  1.1366  1.1353  1.1338  1.1304  1.1275  1.1175  1.1111
[49 : 64]:	1.1051  1.0986  1.0893  1.0863  1.0835  1.0788  1.0788  1.0751  1.0677  1.0587  1.0554  1.0475  1.0470  1.0433  1.0402  1.0389
2024-03-21 01:03:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:03:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #449: GFLOPs: 1233.0441. Time: 9.3593 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #450: GFLOPs: 1192.8980. Time: 9.6743 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #451: GFLOPs: 1187.1762. Time: 9.7209 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #452: GFLOPs: 552.5912. Time: 20.8843 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #453: GFLOPs: 896.1344. Time: 12.8781 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #454: GFLOPs: 919.6824. Time: 12.5483 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #455: GFLOPs: 436.3596. Time: 26.4472 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #456: GFLOPs: 298.5421. Time: 38.6561 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #457: GFLOPs: 438.3797. Time: 26.3253 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #458: GFLOPs: 303.0001. Time: 38.0874 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #459: GFLOPs: 448.6497. Time: 25.7227 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #460: GFLOPs: 424.7731. Time: 27.1686 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #461: GFLOPs: 419.1875. Time: 27.5306 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #462: GFLOPs: 578.1743. Time: 19.9602 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #463: GFLOPs: 1283.7232. Time: 8.9899 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #464: GFLOPs: 574.0856. Time: 20.1024 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #465: GFLOPs: 1283.4966. Time: 8.9914 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #466: GFLOPs: 531.0374. Time: 21.7320 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #467: GFLOPs: 573.8992. Time: 20.1089 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #468: GFLOPs: 399.4943. Time: 28.8877 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #469: GFLOPs: 1371.3865. Time: 8.4152 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #470: GFLOPs: 395.2021. Time: 29.2015 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #471: GFLOPs: 394.8974. Time: 29.2240 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #472: GFLOPs: 1286.2156. Time: 8.9724 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #473: GFLOPs: 1254.1999. Time: 9.2015 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #474: GFLOPs: 205.7380. Time: 56.0931 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #475: GFLOPs: 422.6565. Time: 27.3046 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #476: GFLOPs: 449.4889. Time: 25.6747 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #477: GFLOPs: 1347.1311. Time: 8.5667 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #478: GFLOPs: 925.8500. Time: 12.4647 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #479: GFLOPs: 398.1006. Time: 28.9889 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #480: GFLOPs: 1026.1026. Time: 11.2469 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #481: GFLOPs: 1262.5536. Time: 9.1406 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #482: GFLOPs: 399.6833. Time: 28.8741 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #483: GFLOPs: 581.8808. Time: 19.8331 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #484: GFLOPs: 285.1429. Time: 40.4726 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #485: GFLOPs: 951.2848. Time: 12.1315 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #486: GFLOPs: 422.9609. Time: 27.2850 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #487: GFLOPs: 351.0327. Time: 32.8758 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #488: GFLOPs: 422.9078. Time: 27.2884 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #489: GFLOPs: 416.7239. Time: 27.6933 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #490: GFLOPs: 1231.6494. Time: 9.3699 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #491: GFLOPs: 206.0859. Time: 55.9984 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #492: GFLOPs: 525.3832. Time: 21.9658 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #493: GFLOPs: 617.6067. Time: 18.6858 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #494: GFLOPs: 1167.9788. Time: 9.8807 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #495: GFLOPs: 223.7841. Time: 51.5697 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #496: GFLOPs: 634.2764. Time: 18.1947 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #497: GFLOPs: 1125.7617. Time: 10.2513 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #498: GFLOPs: 297.1574. Time: 38.8363 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #499: GFLOPs: 1052.2302. Time: 10.9676 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #500: GFLOPs: 1158.6970. Time: 9.9599 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #501: GFLOPs: 280.2341. Time: 41.1816 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #502: GFLOPs: 1127.2749. Time: 10.2375 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #503: GFLOPs: 1128.2207. Time: 10.2289 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #504: GFLOPs: 932.9215. Time: 12.3703 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #505: GFLOPs: 1212.5247. Time: 9.5177 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #506: GFLOPs: 1017.1831. Time: 11.3455 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #507: GFLOPs: 150.4992. Time: 76.6813 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #508: GFLOPs: 840.0646. Time: 13.7376 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #509: GFLOPs: 1263.9606. Time: 9.1304 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #510: GFLOPs: 130.5706. Time: 88.3850 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #511: GFLOPs: 378.4206. Time: 30.4964 us. Best GFLOPs: 1408.4919
2024-03-21 01:04:35 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #512: GFLOPs: 632.3706. Time: 18.2496 us. Best GFLOPs: 1408.4919
2024-03-21 01:08:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:08:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:08:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:08:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:08:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1187 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:08:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1575 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:08:59 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2024-03-21 01:09:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:09:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:09:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:09:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:09:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7604  1.7604  1.7106  1.6828  1.6828  1.6640  1.6262  1.6247  1.5080  1.4633  1.4304  1.4278  1.4115  1.4067  1.3909  1.3738
[17 : 32]:	1.3211  1.3049  1.1969  1.1554  1.1469  1.1377  1.1278  1.0967  1.0866  1.0865  1.0796  1.0778  1.0718  1.0716  1.0555  1.0491
[33 : 48]:	1.0476  1.0400  1.0385  1.0332  1.0288  1.0206  1.0203  1.0185  1.0173  1.0076  1.0049  1.0048  1.0042  1.0020  1.0012  1.0004
[49 : 64]:	0.9982  0.9922  0.9906  0.9891  0.9874  0.9846  0.9839  0.9836  0.9808  0.9781  0.9766  0.9753  0.9732  0.9704  0.9634  0.9620
2024-03-21 01:09:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:09:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #513: GFLOPs: 31.4430. Time: 367.0281 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #514: GFLOPs: 35.2277. Time: 327.5968 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #515: GFLOPs: 51.5859. Time: 223.7141 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #516: GFLOPs: 51.1641. Time: 225.5580 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #517: GFLOPs: 42.6788. Time: 270.4033 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #518: GFLOPs: 47.7004. Time: 241.9370 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #519: GFLOPs: 31.7796. Time: 363.1416 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #520: GFLOPs: 47.3393. Time: 243.7820 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #521: GFLOPs: 27.6084. Time: 418.0062 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #522: GFLOPs: 50.9925. Time: 226.3170 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #523: GFLOPs: 36.0212. Time: 320.3799 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #524: GFLOPs: 36.0986. Time: 319.6929 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #525: GFLOPs: 34.6564. Time: 332.9967 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #526: GFLOPs: 36.7349. Time: 314.1561 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #527: GFLOPs: 846.0170. Time: 13.6410 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #528: GFLOPs: 25.3977. Time: 454.3906 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #529: GFLOPs: 62.0711. Time: 185.9234 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #530: GFLOPs: 79.7881. Time: 144.6391 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #531: GFLOPs: 1139.9898. Time: 10.1233 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #532: GFLOPs: 437.2926. Time: 26.3907 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #533: GFLOPs: 817.5946. Time: 14.1152 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #534: GFLOPs: 900.8799. Time: 12.8102 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #535: GFLOPs: 757.8560. Time: 15.2278 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #536: GFLOPs: 40.1294. Time: 287.5815 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #537: GFLOPs: 50.6006. Time: 228.0702 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #538: GFLOPs: 1089.3116. Time: 10.5943 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #539: GFLOPs: 19.4837. Time: 592.3143 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #540: GFLOPs: 1192.4930. Time: 9.6776 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #541: GFLOPs: 1050.5462. Time: 10.9852 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #542: GFLOPs: 417.0497. Time: 27.6717 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #543: GFLOPs: 77.4020. Time: 149.0980 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #544: GFLOPs: 1053.1634. Time: 10.9579 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #545: GFLOPs: 1143.1001. Time: 10.0958 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #546: GFLOPs: 533.1710. Time: 21.6450 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #547: GFLOPs: 1020.2381. Time: 11.3116 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #548: GFLOPs: 1155.5942. Time: 9.9866 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #549: GFLOPs: 1127.9256. Time: 10.2316 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #550: GFLOPs: 953.4947. Time: 12.1034 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #551: GFLOPs: 1210.8058. Time: 9.5312 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #552: GFLOPs: 1129.1573. Time: 10.2204 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #553: GFLOPs: 901.3375. Time: 12.8037 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #554: GFLOPs: 1072.9655. Time: 10.7557 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #555: GFLOPs: 1123.9117. Time: 10.2681 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #556: GFLOPs: 1145.0013. Time: 10.0790 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #557: GFLOPs: 942.2639. Time: 12.2476 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #558: GFLOPs: 23.0905. Time: 499.7944 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #559: GFLOPs: 1139.6538. Time: 10.1263 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #560: GFLOPs: 1125.6033. Time: 10.2527 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #561: GFLOPs: 1132.1320. Time: 10.1936 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #562: GFLOPs: 1261.8129. Time: 9.1460 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #563: GFLOPs: 1113.8810. Time: 10.3606 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #564: GFLOPs: 1077.4245. Time: 10.7112 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #565: GFLOPs: 1365.0963. Time: 8.4540 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #566: GFLOPs: 1228.1161. Time: 9.3969 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #567: GFLOPs: 1111.5833. Time: 10.3820 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #568: GFLOPs: 1119.0537. Time: 10.3127 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #569: GFLOPs: 1128.0257. Time: 10.2307 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #570: GFLOPs: 1096.6605. Time: 10.5233 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #571: GFLOPs: 1358.3147. Time: 8.4962 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #572: GFLOPs: 1003.5977. Time: 11.4991 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #573: GFLOPs: 1308.6292. Time: 8.8188 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #574: GFLOPs: 37.7081. Time: 306.0478 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #575: GFLOPs: 357.7578. Time: 32.2578 us. Best GFLOPs: 1408.4919
2024-03-21 01:10:29 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #576: GFLOPs: 634.9878. Time: 18.1743 us. Best GFLOPs: 1408.4919
2024-03-21 01:25:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:25:21 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:25:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:25:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 784 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:25:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1177 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:25:26 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-03-21 01:25:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:25:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:25:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:26:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:26:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6814  1.3547  1.3352  1.2943  1.2493  1.2338  1.2183  1.2161  1.2090  1.1675  1.1225  1.1133  1.1107  1.0454  1.0452  1.0369
[17 : 32]:	1.0367  1.0254  1.0207  1.0117  1.0094  1.0082  1.0076  0.9989  0.9989  0.9940  0.9924  0.9888  0.9888  0.9880  0.9855  0.9855
[33 : 48]:	0.9847  0.9834  0.9834  0.9753  0.9732  0.9704  0.9696  0.9694  0.9632  0.9602  0.9579  0.9569  0.9565  0.9544  0.9544  0.9541
[49 : 64]:	0.9518  0.9516  0.9516  0.9513  0.9497  0.9483  0.9467  0.9460  0.9423  0.9423  0.9415  0.9390  0.9385  0.9375  0.9374  0.9371
2024-03-21 01:26:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:26:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #577: GFLOPs: 1110.4923. Time: 10.3922 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #578: GFLOPs: 850.9636. Time: 13.5617 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #579: GFLOPs: 832.8552. Time: 13.8565 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #580: GFLOPs: 329.2320. Time: 35.0527 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #581: GFLOPs: 940.5817. Time: 12.2695 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #582: GFLOPs: 1283.3192. Time: 8.9927 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #583: GFLOPs: 891.7767. Time: 12.9410 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #584: GFLOPs: 485.5857. Time: 23.7661 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #585: GFLOPs: 890.9414. Time: 12.9531 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #586: GFLOPs: 688.1832. Time: 16.7695 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #587: GFLOPs: 815.1314. Time: 14.1578 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #588: GFLOPs: 891.0084. Time: 12.9522 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #589: GFLOPs: 719.9088. Time: 16.0305 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #590: GFLOPs: 759.0593. Time: 15.2037 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #591: GFLOPs: 1329.2923. Time: 8.6817 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #592: GFLOPs: 1331.5674. Time: 8.6668 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #593: GFLOPs: 643.9444. Time: 17.9215 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #594: GFLOPs: 1331.3537. Time: 8.6682 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #595: GFLOPs: 393.8019. Time: 29.3053 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #596: GFLOPs: 1027.4542. Time: 11.2321 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #597: GFLOPs: 986.5545. Time: 11.6978 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #598: GFLOPs: 1327.5257. Time: 8.6932 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #599: GFLOPs: 758.2758. Time: 15.2194 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #600: GFLOPs: 690.6256. Time: 16.7102 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #601: GFLOPs: 688.7579. Time: 16.7555 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #602: GFLOPs: 663.8428. Time: 17.3844 us. Best GFLOPs: 1408.4919
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #603: GFLOPs: 1419.7196. Time: 8.1287 us. Best GFLOPs: 1419.7196
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #604: GFLOPs: 1240.3145. Time: 9.3045 us. Best GFLOPs: 1419.7196
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #605: GFLOPs: 1240.9507. Time: 9.2997 us. Best GFLOPs: 1419.7196
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #606: GFLOPs: 1368.1455. Time: 8.4351 us. Best GFLOPs: 1419.7196
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #607: GFLOPs: 1423.0757. Time: 8.1095 us. Best GFLOPs: 1423.0757
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #608: GFLOPs: 1423.0874. Time: 8.1095 us. Best GFLOPs: 1423.0874
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #609: GFLOPs: 321.8471. Time: 35.8570 us. Best GFLOPs: 1423.0874
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #610: GFLOPs: 1425.9498. Time: 8.0932 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #611: GFLOPs: 1423.5686. Time: 8.1067 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #612: GFLOPs: 1044.6288. Time: 11.0474 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #613: GFLOPs: 1402.8058. Time: 8.2267 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #614: GFLOPs: 1343.7650. Time: 8.5882 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #615: GFLOPs: 1405.2987. Time: 8.2121 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #616: GFLOPs: 1286.8055. Time: 8.9683 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #617: GFLOPs: 644.3023. Time: 17.9116 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #618: GFLOPs: 1057.7668. Time: 10.9102 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #619: GFLOPs: 1404.1986. Time: 8.2186 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #620: GFLOPs: 1250.0949. Time: 9.2317 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #621: GFLOPs: 847.4120. Time: 13.6185 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #622: GFLOPs: 1209.1020. Time: 9.5447 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #623: GFLOPs: 1210.0291. Time: 9.5374 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #624: GFLOPs: 1370.6293. Time: 8.4198 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #625: GFLOPs: 1378.8871. Time: 8.3694 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #626: GFLOPs: 1272.5374. Time: 9.0689 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #627: GFLOPs: 1381.8957. Time: 8.3512 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #628: GFLOPs: 1234.8683. Time: 9.3455 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #629: GFLOPs: 1289.9412. Time: 8.9465 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #630: GFLOPs: 1253.9261. Time: 9.2035 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #631: GFLOPs: 1332.8814. Time: 8.6583 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #632: GFLOPs: 1179.3047. Time: 9.7858 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #633: GFLOPs: 417.3658. Time: 27.6508 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #634: GFLOPs: 766.1345. Time: 15.0633 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #635: GFLOPs: 1270.2559. Time: 9.0852 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #636: GFLOPs: 1338.9873. Time: 8.6188 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #637: GFLOPs: 1259.2221. Time: 9.1648 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #638: GFLOPs: 21.1568. Time: 545.4748 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #639: GFLOPs: 607.1370. Time: 19.0080 us. Best GFLOPs: 1425.9498
2024-03-21 01:26:57 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #640: GFLOPs: 147.0599. Time: 78.4747 us. Best GFLOPs: 1425.9498
2024-03-21 01:36:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:36:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:36:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 388 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:36:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 782 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:36:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:36:38 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-03-21 01:36:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:36:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:37:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:37:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:37:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6040  1.6040  1.5982  1.5953  1.5910  1.5769  1.4166  1.3445  1.2863  1.2752  1.2681  1.2560  1.2134  1.1971  1.1945  1.1895
[17 : 32]:	1.1855  1.1827  1.1824  1.1777  1.1617  1.1601  1.1544  1.1531  1.1531  1.1523  1.1518  1.1493  1.1485  1.1480  1.1474  1.1372
[33 : 48]:	1.1361  1.1201  1.1193  1.1173  1.1127  1.0997  1.0960  1.0853  1.0771  1.0677  1.0630  1.0625  1.0584  1.0517  1.0464  1.0399
[49 : 64]:	1.0334  1.0248  1.0139  1.0052  1.0037  1.0029  1.0006  1.0001  0.9983  0.9955  0.9931  0.9931  0.9917  0.9904  0.9892  0.9882
2024-03-21 01:37:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:37:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #641: GFLOPs: 350.4073. Time: 32.9345 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #642: GFLOPs: 351.7216. Time: 32.8114 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #643: GFLOPs: 355.5893. Time: 32.4545 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #644: GFLOPs: 361.9054. Time: 31.8881 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #645: GFLOPs: 350.0849. Time: 32.9648 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #646: GFLOPs: 355.6154. Time: 32.4521 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #647: GFLOPs: 372.4244. Time: 30.9874 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #648: GFLOPs: 1074.2020. Time: 10.7433 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #649: GFLOPs: 504.1479. Time: 22.8911 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #650: GFLOPs: 159.6669. Time: 72.2785 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #651: GFLOPs: 159.6779. Time: 72.2735 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #652: GFLOPs: 897.3346. Time: 12.8608 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #653: GFLOPs: 663.6160. Time: 17.3903 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #654: GFLOPs: 497.6894. Time: 23.1881 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #655: GFLOPs: 147.3151. Time: 78.3388 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #656: GFLOPs: 159.6604. Time: 72.2814 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #657: GFLOPs: 1112.3807. Time: 10.3746 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #658: GFLOPs: 358.4848. Time: 32.1924 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #659: GFLOPs: 1075.1753. Time: 10.7336 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #660: GFLOPs: 480.7453. Time: 24.0054 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #661: GFLOPs: 463.5341. Time: 24.8967 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #662: GFLOPs: 161.1226. Time: 71.6255 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #663: GFLOPs: 160.1627. Time: 72.0547 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #664: GFLOPs: 159.2176. Time: 72.4824 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #665: GFLOPs: 146.6658. Time: 78.6855 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #666: GFLOPs: 374.2090. Time: 30.8397 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #667: GFLOPs: 1114.9294. Time: 10.3509 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #668: GFLOPs: 161.0270. Time: 71.6680 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #669: GFLOPs: 497.5603. Time: 23.1941 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #670: GFLOPs: 159.5211. Time: 72.3446 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #671: GFLOPs: 159.6568. Time: 72.2831 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #672: GFLOPs: 497.6125. Time: 23.1917 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #673: GFLOPs: 157.7535. Time: 73.1551 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #674: GFLOPs: 158.1716. Time: 72.9618 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #675: GFLOPs: 408.8203. Time: 28.2287 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #676: GFLOPs: 489.1649. Time: 23.5922 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #677: GFLOPs: 405.5492. Time: 28.4564 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #678: GFLOPs: 452.6735. Time: 25.4941 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #679: GFLOPs: 403.2586. Time: 28.6181 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #680: GFLOPs: 384.4453. Time: 30.0185 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #681: GFLOPs: 979.1520. Time: 11.7862 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #682: GFLOPs: 166.1331. Time: 69.4653 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #683: GFLOPs: 1037.0776. Time: 11.1279 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #684: GFLOPs: 462.2927. Time: 24.9636 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #685: GFLOPs: 979.4265. Time: 11.7829 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #686: GFLOPs: 156.1359. Time: 73.9131 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #687: GFLOPs: 141.7378. Time: 81.4213 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #688: GFLOPs: 450.4817. Time: 25.6181 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #689: GFLOPs: 240.3473. Time: 48.0159 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #690: GFLOPs: 155.7342. Time: 74.1037 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #691: GFLOPs: 462.2381. Time: 24.9665 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #692: GFLOPs: 1416.8916. Time: 8.1449 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #693: GFLOPs: 1385.1722. Time: 8.3314 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #694: GFLOPs: 1185.5599. Time: 9.7342 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #695: GFLOPs: 1415.5197. Time: 8.1528 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #696: GFLOPs: 362.8153. Time: 31.8081 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #697: GFLOPs: 1097.1808. Time: 10.5183 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #698: GFLOPs: 141.0458. Time: 81.8208 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #699: GFLOPs: 215.5243. Time: 53.5461 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #700: GFLOPs: 215.5186. Time: 53.5475 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #701: GFLOPs: 154.4542. Time: 74.7178 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #702: GFLOPs: 288.0354. Time: 40.0662 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #703: GFLOPs: 309.6925. Time: 37.2643 us. Best GFLOPs: 1425.9498
2024-03-21 01:38:10 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #704: GFLOPs: 416.4997. Time: 27.7083 us. Best GFLOPs: 1425.9498
2024-03-21 01:52:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:52:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:52:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 383 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:52:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 779 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:52:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 1179 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:52:51 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-03-21 01:52:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 120 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:53:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:53:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:53:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x57299ea87798)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a5d045d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a42317d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a52aa268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a3b29618)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a148a008)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a5d04508)]: 0 failure(s)
2024-03-21 01:53:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6985  1.6958  1.6488  1.6357  1.6095  1.5576  1.5510  1.5150  1.4501  1.4491  1.4453  1.4394  1.4345  1.4268  1.4268  1.4258
[17 : 32]:	1.4176  1.4136  1.4060  1.4042  1.3967  1.3963  1.3896  1.3892  1.3892  1.3888  1.3887  1.3812  1.3810  1.3748  1.3699  1.3629
[33 : 48]:	1.3335  1.3329  1.3321  1.2692  1.2636  1.2608  1.2591  1.2540  1.2507  1.2493  1.2432  1.2390  1.2329  1.2328  1.2060  1.2045
[49 : 64]:	1.1991  1.1616  1.1504  1.1350  1.1263  1.1263  1.1128  1.1111  1.1019  1.0888  1.0880  1.0860  1.0792  1.0657  1.0630  1.0627
2024-03-21 01:53:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:53:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:121] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #705: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(4)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(224))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(224) // T.int64(7))
                                        v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(19)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(32))
                                        v3 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(32))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(32) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + ax1)
                            v2 = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                        T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                        conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 2, 8, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[7, 1, 7, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 32, 1])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
v117 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v117)
l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b3)
l124 = sch.fuse(l118, l119, l120, l121, preserve_unit_iters=True)
v125 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l126, l127 = sch.split(loop=l124, factors=[None, v125], preserve_unit_iters=True)
sch.bind(loop=l126, thread_axis="blockIdx.x")
sch.bind(loop=l127, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch")
l128, l129, l130, l131, l132 = sch.get_loops(block=b95)
l133, l134, l135 = sch.split(loop=l132, factors=[None, 56, 2], preserve_unit_iters=True)
sch.vectorize(loop=l135)
sch.bind(loop=l134, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch")
l136, l137, l138, l139, l140 = sch.get_loops(block=b106)
l141, l142, l143 = sch.split(loop=l140, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l143)
sch.bind(loop=l142, thread_axis="threadIdx.x")
b144 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b144, ann_key="meta_schedule.unroll_explicit")
b145, b146, b147, b148, b149, b150, b151, b152, b153 = sch.get_child_blocks(b144)
l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b145)
l160, l161, l162, l163, l164, l165 = sch.get_loops(block=b146)
sch.annotate(block_or_loop=l160, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l160, ann_key="pragma_unroll_explicit", ann_val=1)
l166, l167, l168, l169, l170, l171 = sch.get_loops(block=b147)
l172, l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b148)
l179, l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b149)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b150)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b151)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b153)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:121] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #706: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(64) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(15) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(28), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + co_3_init * T.int64(2) + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(4)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(224))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(224) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(19)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(1024))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(1024) // T.int64(32))
                                        v3 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(32))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4096))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + co_3 * T.int64(2) + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(32) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(7) + ax1)
                            v2 = T.axis.spatial(T.int64(32), eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                        T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                        conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[4, 1, 1, 1, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 2, 8, 2])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[7, 1, 7, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 32, 1])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
v117 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v117)
l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b3)
l124 = sch.fuse(l118, l119, l120, l121, preserve_unit_iters=True)
v125 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l126, l127 = sch.split(loop=l124, factors=[None, v125], preserve_unit_iters=True)
sch.bind(loop=l126, thread_axis="blockIdx.x")
sch.bind(loop=l127, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch")
l128, l129, l130, l131, l132 = sch.get_loops(block=b95)
l133, l134 = sch.split(loop=l132, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l134, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch")
l135, l136, l137, l138, l139 = sch.get_loops(block=b106)
l140, l141, l142 = sch.split(loop=l139, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l142)
sch.bind(loop=l141, thread_axis="threadIdx.x")
b143 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b143, ann_key="meta_schedule.unroll_explicit")
b144, b145, b146, b147, b148, b149, b150, b151, b152 = sch.get_child_blocks(b143)
l153, l154, l155, l156, l157, l158 = sch.get_loops(block=b144)
l159, l160, l161, l162, l163, l164 = sch.get_loops(block=b145)
sch.annotate(block_or_loop=l159, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l159, ann_key="pragma_unroll_explicit", ann_val=1)
l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b146)
l171, l172, l173, l174, l175, l176 = sch.get_loops(block=b147)
l177, l178, l179, l180, l181, l182, l183 = sch.get_loops(block=b148)
l184, l185, l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197 = sch.get_loops(block=b149)
sch.annotate(block_or_loop=l184, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l184, ann_key="pragma_unroll_explicit", ann_val=1)
l198, l199, l200, l201, l202, l203, l204 = sch.get_loops(block=b150)
l205, l206, l207, l208, l209, l210, l211, l212 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l205, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l205, ann_key="pragma_unroll_explicit", ann_val=1)
l213, l214, l215, l216 = sch.get_loops(block=b152)
b217 = sch.get_block(name="data_pack", func_name="main")
l218, l219, l220, l221, l222, l223 = sch.get_loops(block=b217)
b224 = sch.decompose_reduction(block=b217, loop=l222)
b225 = sch.get_block(name="bgemm", func_name="main")
l226, l227, l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239 = sch.get_loops(block=b225)
b240 = sch.decompose_reduction(block=b225, loop=l229)
b241 = sch.get_block(name="inverse", func_name="main")
l242, l243, l244, l245, l246, l247, l248, l249 = sch.get_loops(block=b241)
b250 = sch.decompose_reduction(block=b241, loop=l248)
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #707: GFLOPs: 943.2742. Time: 12.2345 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #708: GFLOPs: 1205.4812. Time: 9.5733 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #709: GFLOPs: 902.6349. Time: 12.7853 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #710: GFLOPs: 1083.0280. Time: 10.6558 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #711: GFLOPs: 1071.7432. Time: 10.7680 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #712: GFLOPs: 1083.0604. Time: 10.6554 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #713: GFLOPs: 1228.8457. Time: 9.3913 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #714: GFLOPs: 1273.6313. Time: 9.0611 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #715: GFLOPs: 1267.3704. Time: 9.1058 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #716: GFLOPs: 1267.2377. Time: 9.1068 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #717: GFLOPs: 1271.3509. Time: 9.0773 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #718: GFLOPs: 1352.4102. Time: 8.5333 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #719: GFLOPs: 1386.8443. Time: 8.3214 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #720: GFLOPs: 306.8361. Time: 37.6112 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #721: GFLOPs: 1251.0495. Time: 9.2246 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #722: GFLOPs: 1260.8670. Time: 9.1528 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #723: GFLOPs: 845.5227. Time: 13.6489 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #724: GFLOPs: 1094.8364. Time: 10.5408 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #725: GFLOPs: 1181.0192. Time: 9.7716 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #726: GFLOPs: 1169.8265. Time: 9.8651 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #727: GFLOPs: 1145.7639. Time: 10.0723 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #728: GFLOPs: 1250.0159. Time: 9.2323 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #729: GFLOPs: 1228.0618. Time: 9.3973 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #730: GFLOPs: 1219.1038. Time: 9.4664 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #731: GFLOPs: 1183.4075. Time: 9.7519 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #732: GFLOPs: 1123.2415. Time: 10.2743 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #733: GFLOPs: 1143.6888. Time: 10.0906 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #734: GFLOPs: 1240.8880. Time: 9.3002 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #735: GFLOPs: 1113.4343. Time: 10.3648 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #736: GFLOPs: 1183.4398. Time: 9.7516 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #737: GFLOPs: 1235.5058. Time: 9.3407 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #738: GFLOPs: 1211.2857. Time: 9.5275 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #739: GFLOPs: 1246.6331. Time: 9.2573 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #740: GFLOPs: 1296.1069. Time: 8.9040 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #741: GFLOPs: 358.5233. Time: 32.1889 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #742: GFLOPs: 1250.2995. Time: 9.2302 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #743: GFLOPs: 1227.9774. Time: 9.3980 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #744: GFLOPs: 882.6964. Time: 13.0741 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #745: GFLOPs: 1186.8656. Time: 9.7235 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #746: GFLOPs: 1054.2257. Time: 10.9469 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #747: GFLOPs: 944.4108. Time: 12.2198 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #748: GFLOPs: 1311.5536. Time: 8.7991 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #749: GFLOPs: 827.4420. Time: 13.9472 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #750: GFLOPs: 635.4661. Time: 18.1607 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #751: GFLOPs: 568.8572. Time: 20.2871 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #752: GFLOPs: 806.0448. Time: 14.3174 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #753: GFLOPs: 1246.3806. Time: 9.2592 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #754: GFLOPs: 1135.5428. Time: 10.1630 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #755: GFLOPs: 876.2822. Time: 13.1698 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #756: GFLOPs: 875.7687. Time: 13.1775 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #757: GFLOPs: 744.9833. Time: 15.4909 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #758: GFLOPs: 744.9483. Time: 15.4917 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #759: GFLOPs: 1084.0964. Time: 10.6453 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #760: GFLOPs: 744.9225. Time: 15.4922 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #761: GFLOPs: 1084.7089. Time: 10.6392 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #762: GFLOPs: 1333.5925. Time: 8.6537 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #763: GFLOPs: 1059.3518. Time: 10.8939 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #764: GFLOPs: 1168.4540. Time: 9.8767 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #765: GFLOPs: 1166.1560. Time: 9.8962 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #766: GFLOPs: 13.3983. Time: 861.3373 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #767: GFLOPs: 91.1673. Time: 126.5857 us. Best GFLOPs: 1425.9498
2024-03-21 01:54:28 [INFO] [task_scheduler.cc:131] [Task #81: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #768: GFLOPs: 121.8664. Time: 94.6978 us. Best GFLOPs: 1425.9498
