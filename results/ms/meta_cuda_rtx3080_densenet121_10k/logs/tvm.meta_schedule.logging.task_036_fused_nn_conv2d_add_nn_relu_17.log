2024-03-20 22:52:32 [INFO] [task_scheduler.cc:160] Initializing Task #36: "fused_nn_conv2d_add_nn_relu_17"
2024-03-20 22:52:32 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(960), T.int64(14), T.int64(14)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(960), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-20 22:52:32 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-20 22:52:32 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(16), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(5880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(960), rc_0 * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1920)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v1 = T.axis.spatial(T.int64(960), rc_0 * T.int64(60) + ax0_ax1_ax2_ax3_fused % T.int64(60))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(60), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(960), rc_0 * T.int64(60) + rc_1 * T.int64(60) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 4, 2, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 1, 60])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-20 22:52:32 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(16), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(5880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1920)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v1 = T.axis.spatial(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + ax0_ax1_ax2_ax3_fused % T.int64(60))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(60), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + rc_1 * T.int64(60) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 4, 2, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 1, 60])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 22:52:32 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(960), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(960), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(16), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(5880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(98))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(98) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1920)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v1 = T.axis.spatial(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + ax0_ax1_ax2_ax3_fused % T.int64(60))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(60), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(960), rc_0_ry_0_rx_0_fused * T.int64(60) + rc_1 * T.int64(60) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(7) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 4, 2, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 1, 60])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 23:08:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-20 23:08:45 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-20 23:08:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 494 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 978 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 1462 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:47 [INFO] [evolutionary_search.cc:723] Sampled 74 candidate(s)
2024-03-20 23:08:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-20 23:08:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9993  0.9969  0.9965  0.9959  0.9955  0.9954  0.9937  0.9905  0.9902  0.9899  0.9898  0.9887  0.9879  0.9875  0.9858
[17 : 32]:	0.9857  0.9854  0.9854  0.9851  0.9850  0.9844  0.9830  0.9829  0.9822  0.9819  0.9818  0.9813  0.9805  0.9801  0.9791  0.9787
[33 : 48]:	0.9787  0.9785  0.9784  0.9772  0.9761  0.9755  0.9745  0.9734  0.9729  0.9728  0.9721  0.9715  0.9714  0.9712  0.9707  0.9703
[49 : 64]:	0.9701  0.9687  0.9679  0.9678  0.9678  0.9665  0.9663  0.9661  0.9656  0.9655  0.9636  0.9605  0.9603  0.9600  0.9598  0.9583
2024-03-20 23:08:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-20 23:08:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #1: GFLOPs: 258.6443. Time: 186.4303 us. Best GFLOPs: 258.6443
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #2: GFLOPs: 276.9025. Time: 174.1376 us. Best GFLOPs: 276.9025
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #3: GFLOPs: 15.2228. Time: 3167.5510 us. Best GFLOPs: 276.9025
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #4: GFLOPs: 544.5841. Time: 88.5430 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #5: GFLOPs: 156.3873. Time: 308.3315 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #6: GFLOPs: 43.9535. Time: 1097.0490 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #7: GFLOPs: 163.3062. Time: 295.2683 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #8: GFLOPs: 18.7726. Time: 2568.5859 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #9: GFLOPs: 331.6699. Time: 145.3829 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #10: GFLOPs: 357.7807. Time: 134.7729 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #11: GFLOPs: 445.9904. Time: 108.1170 us. Best GFLOPs: 544.5841
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #12: GFLOPs: 2246.0414. Time: 21.4685 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #13: GFLOPs: 837.6090. Time: 57.5676 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #14: GFLOPs: 957.0145. Time: 50.3850 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #15: GFLOPs: 52.3168. Time: 921.6752 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #16: GFLOPs: 638.4867. Time: 75.5210 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #17: GFLOPs: 157.0710. Time: 306.9893 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #18: GFLOPs: 204.3180. Time: 236.0005 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #19: GFLOPs: 300.3954. Time: 160.5189 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #20: GFLOPs: 229.8107. Time: 209.8211 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #21: GFLOPs: 7.2099. Time: 6687.8763 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #22: GFLOPs: 49.4872. Time: 974.3754 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #23: GFLOPs: 10.9013. Time: 4423.2347 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #24: GFLOPs: 287.3692. Time: 167.7950 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #25: GFLOPs: 968.1782. Time: 49.8040 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #26: GFLOPs: 295.4686. Time: 163.1954 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #27: GFLOPs: 487.8439. Time: 98.8413 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #28: GFLOPs: 52.6117. Time: 916.5091 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #29: GFLOPs: 236.8915. Time: 203.5494 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #30: GFLOPs: 573.4189. Time: 84.0906 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #31: GFLOPs: 599.5498. Time: 80.4256 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #32: GFLOPs: 261.7606. Time: 184.2108 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #33: GFLOPs: 635.3025. Time: 75.8995 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #34: GFLOPs: 122.1028. Time: 394.9060 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #35: GFLOPs: 197.4331. Time: 244.2302 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #36: GFLOPs: 615.6038. Time: 78.3282 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #37: GFLOPs: 12.0949. Time: 3986.7398 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #38: GFLOPs: 503.2533. Time: 95.8148 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #39: GFLOPs: 110.1322. Time: 437.8296 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #40: GFLOPs: 271.7439. Time: 177.4433 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #41: GFLOPs: 313.1243. Time: 153.9936 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #42: GFLOPs: 321.8194. Time: 149.8329 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #43: GFLOPs: 899.6224. Time: 53.5993 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #44: GFLOPs: 29.3030. Time: 1645.5344 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #45: GFLOPs: 402.2642. Time: 119.8693 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #46: GFLOPs: 154.9057. Time: 311.2806 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #47: GFLOPs: 69.0989. Time: 697.8275 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #48: GFLOPs: 189.5748. Time: 254.3542 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #49: GFLOPs: 155.4359. Time: 310.2188 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #50: GFLOPs: 241.7463. Time: 199.4618 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #51: GFLOPs: 110.2997. Time: 437.1645 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #52: GFLOPs: 1306.9159. Time: 36.8954 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #53: GFLOPs: 925.6302. Time: 52.0933 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #54: GFLOPs: 22.2822. Time: 2164.0170 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #55: GFLOPs: 860.9662. Time: 56.0058 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #56: GFLOPs: 72.5718. Time: 664.4336 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #57: GFLOPs: 701.1334. Time: 68.7731 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #58: GFLOPs: 341.9855. Time: 140.9976 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #59: GFLOPs: 325.8848. Time: 147.9637 us. Best GFLOPs: 2246.0414
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #60: GFLOPs: 2536.8837. Time: 19.0072 us. Best GFLOPs: 2536.8837
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #61: GFLOPs: 1376.9739. Time: 35.0182 us. Best GFLOPs: 2536.8837
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #62: GFLOPs: 296.7447. Time: 162.4937 us. Best GFLOPs: 2536.8837
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #63: GFLOPs: 120.1734. Time: 401.2463 us. Best GFLOPs: 2536.8837
2024-03-21 00:11:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #64: GFLOPs: 1244.8847. Time: 38.7338 us. Best GFLOPs: 2536.8837
2024-03-21 01:41:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:41:35 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 01:41:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 858 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 1292 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:37 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-03-21 01:41:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a105ea18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a135be78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a56d7438)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a65fcae8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a1a492b8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a6bb34a8)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a3d43778)]: 0 failure(s)
2024-03-21 01:41:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5744  1.2571  1.2220  1.1957  1.1950  1.1950  1.1805  1.1666  1.1422  1.1420  1.0892  1.0836  1.0430  1.0419  1.0366  1.0344
[17 : 32]:	1.0343  1.0318  1.0209  1.0104  1.0078  1.0003  1.0003  0.9920  0.9920  0.9877  0.9854  0.9852  0.9851  0.9844  0.9837  0.9819
[33 : 48]:	0.9818  0.9815  0.9815  0.9806  0.9806  0.9803  0.9796  0.9787  0.9758  0.9756  0.9736  0.9735  0.9719  0.9673  0.9652  0.9623
[49 : 64]:	0.9604  0.9587  0.9573  0.9573  0.9553  0.9545  0.9544  0.9534  0.9534  0.9525  0.9507  0.9489  0.9482  0.9473  0.9463  0.9454
2024-03-21 01:41:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:41:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #65: GFLOPs: 1694.3981. Time: 28.4580 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #66: GFLOPs: 1987.4670. Time: 24.2616 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #67: GFLOPs: 1987.4574. Time: 24.2617 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #68: GFLOPs: 2015.3007. Time: 23.9265 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #69: GFLOPs: 1399.1948. Time: 34.4621 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #70: GFLOPs: 1399.1055. Time: 34.4643 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #71: GFLOPs: 2066.2841. Time: 23.3362 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #72: GFLOPs: 1860.8505. Time: 25.9124 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #73: GFLOPs: 1534.0319. Time: 31.4329 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #74: GFLOPs: 1540.4752. Time: 31.3015 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #75: GFLOPs: 1650.6906. Time: 29.2115 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #76: GFLOPs: 1996.0662. Time: 24.1571 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #77: GFLOPs: 2018.5651. Time: 23.8878 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #78: GFLOPs: 989.8745. Time: 48.7124 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #79: GFLOPs: 983.7082. Time: 49.0177 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #80: GFLOPs: 2210.6812. Time: 21.8119 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #81: GFLOPs: 2392.0546. Time: 20.1580 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #82: GFLOPs: 986.7917. Time: 48.8646 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #83: GFLOPs: 1011.3520. Time: 47.6779 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #84: GFLOPs: 1368.2505. Time: 35.2415 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #85: GFLOPs: 2025.5165. Time: 23.8058 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #86: GFLOPs: 1915.0681. Time: 25.1788 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #87: GFLOPs: 1914.4600. Time: 25.1868 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #88: GFLOPs: 1902.0563. Time: 25.3511 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #89: GFLOPs: 1937.7093. Time: 24.8846 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #90: GFLOPs: 2487.9978. Time: 19.3807 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #91: GFLOPs: 1355.9780. Time: 35.5604 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #92: GFLOPs: 1898.1299. Time: 25.4035 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #93: GFLOPs: 1516.2940. Time: 31.8007 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #94: GFLOPs: 1956.9039. Time: 24.6405 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #95: GFLOPs: 1529.0894. Time: 31.5345 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #96: GFLOPs: 1251.3718. Time: 38.5330 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #97: GFLOPs: 1280.7429. Time: 37.6493 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #98: GFLOPs: 2058.8891. Time: 23.4200 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #99: GFLOPs: 2058.8897. Time: 23.4200 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #100: GFLOPs: 1424.7233. Time: 33.8446 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #101: GFLOPs: 1422.6545. Time: 33.8938 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #102: GFLOPs: 2486.8235. Time: 19.3899 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #103: GFLOPs: 1431.6805. Time: 33.6801 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #104: GFLOPs: 1315.4348. Time: 36.6564 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #105: GFLOPs: 1896.2022. Time: 25.4293 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #106: GFLOPs: 2438.7872. Time: 19.7718 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #107: GFLOPs: 1913.6885. Time: 25.1970 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #108: GFLOPs: 1394.2712. Time: 34.5838 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #109: GFLOPs: 1853.7455. Time: 26.0117 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #110: GFLOPs: 2515.4965. Time: 19.1688 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #111: GFLOPs: 1822.9393. Time: 26.4513 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #112: GFLOPs: 1316.5216. Time: 36.6262 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #113: GFLOPs: 1180.4576. Time: 40.8478 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #114: GFLOPs: 2049.2208. Time: 23.5305 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #115: GFLOPs: 1420.7091. Time: 33.9402 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #116: GFLOPs: 1420.6544. Time: 33.9415 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #117: GFLOPs: 269.6069. Time: 178.8498 us. Best GFLOPs: 2536.8837
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #118: GFLOPs: 2607.7785. Time: 18.4905 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #119: GFLOPs: 1512.1110. Time: 31.8886 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #120: GFLOPs: 1420.5932. Time: 33.9430 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #121: GFLOPs: 1416.1539. Time: 34.0494 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #122: GFLOPs: 1174.3188. Time: 41.0614 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #123: GFLOPs: 1211.9406. Time: 39.7867 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #124: GFLOPs: 1493.1094. Time: 32.2944 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #125: GFLOPs: 1738.2672. Time: 27.7398 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #126: GFLOPs: 141.6337. Time: 340.4495 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #127: GFLOPs: 332.0235. Time: 145.2281 us. Best GFLOPs: 2607.7785
2024-03-21 01:42:35 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_conv2d_add_nn_relu_17] Trial #128: GFLOPs: 777.7636. Time: 61.9972 us. Best GFLOPs: 2607.7785
