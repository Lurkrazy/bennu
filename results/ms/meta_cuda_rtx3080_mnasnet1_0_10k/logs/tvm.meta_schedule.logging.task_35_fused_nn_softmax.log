2024-03-21 19:46:25 [INFO] [task_scheduler.cc:160] Initializing Task #35: "fused_nn_softmax"
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
        T_softmax_exp = T.alloc_buffer((T.int64(1), T.int64(1000)))
        T_softmax_expsum = T.alloc_buffer((T.int64(1),))
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_maxelem"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(p0[v_i0, v_k])
                T.writes(T_softmax_maxelem[v_i0])
                with T.init():
                    T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_exp"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0])
                T.writes(T_softmax_exp[v_i0, v_i1])
                T_softmax_exp[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0])
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_expsum"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(T_softmax_exp[v_i0, v_k])
                T.writes(T_softmax_expsum[v_i0])
                with T.init():
                    T_softmax_expsum[v_i0] = T.float32(0)
                T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T_softmax_exp[v_i0, v_k]
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_norm"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(T_softmax_exp[v_i0, v_i1], T_softmax_expsum[v_i0])
                T.writes(T_softmax_norm[v_i0, v_i1])
                T.block_attr({"axis": 1})
                T_softmax_norm[v_i0, v_i1] = T_softmax_exp[v_i0, v_i1] / T_softmax_expsum[v_i0]
2024-03-21 19:46:26 [INFO] [task_scheduler.cc:164] Total 4 design space(s) generated
2024-03-21 19:46:26 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v5)
l6, l7 = sch.get_loops(block=b3)
l8 = sch.fuse(l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13 = sch.get_loops(block=b2)
l14 = sch.fuse(l12, preserve_unit_iters=True)
l15, l16 = sch.split(loop=l14, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-03-21 19:46:26 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for k_0 in range(T.int64(250)):
                    for k_1 in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k_0 * T.int64(4) + k_1)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=0)
l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, v5], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="threadIdx.x")
v10 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v10)
l11, l12 = sch.get_loops(block=b3)
l13 = sch.fuse(l11, l12, preserve_unit_iters=True)
v14 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
l15, l16 = sch.split(loop=l13, factors=[None, v14], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b2)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
l22, l23, l24 = sch.get_loops(block=b0)
l25 = sch.fuse(l22, preserve_unit_iters=True)
sch.bind(loop=l25, thread_axis="blockIdx.x")
2024-03-21 19:46:26 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(2)):
                    for ax1_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(512) + ax1_1)
                            T.where(ax1_0 * T.int64(512) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
                for i1_0 in range(T.int64(2)):
                    for i1_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(512) + i1_1)
                            T.where(i1_0 * T.int64(512) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=7)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17, l18, l19 = sch.get_loops(block=b3)
l20 = sch.fuse(l17, preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
l21, l22 = sch.get_loops(block=b0)
l23 = sch.fuse(l21, preserve_unit_iters=True)
l24, l25 = sch.split(loop=l23, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l24, thread_axis="blockIdx.x")
sch.bind(loop=l25, thread_axis="threadIdx.x")
2024-03-21 19:46:26 [INFO] [task_scheduler.cc:170] Design space #3:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(2)):
                    for ax1_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(512) + ax1_1)
                            T.where(ax1_0 * T.int64(512) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem_shared[v_i0])
                            with T.init():
                                T_softmax_maxelem_shared[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem_shared[v_i0] = T.max(T_softmax_maxelem_shared[v_i0], p0[v_i0, v_k])
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(2)):
                    for ax1_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(512) + ax1_1)
                            T.where(ax1_0 * T.int64(512) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem_shared[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem_shared[v_i0])
                for i1_0 in range(T.int64(2)):
                    for i1_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(512) + i1_1)
                            T.where(i1_0 * T.int64(512) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem_shared[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem_shared[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=7)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
b16, b17 = sch.get_consumers(block=b0)
l18, l19, l20, l21 = sch.get_loops(block=b16)
sch.compute_at(block=b0, loop=l18, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b0, buffer_index=0, storage_scope="shared")
l22, l23, l24 = sch.get_loops(block=b0)
l25, l26 = sch.split(loop=l24, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l26, thread_axis="threadIdx.x")
v27 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v27)
l28, l29, l30 = sch.get_loops(block=b3)
l31 = sch.fuse(l28, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
2024-03-21 20:21:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:21:05 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 20:21:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 20:21:05 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-03-21 20:21:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 20:21:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 20:21:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 20:21:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 20:21:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9975  0.9957  0.9768  0.9747  0.9743  0.9714  0.9644  0.9629  0.9614  0.9591  0.9543  0.9470  0.9456  0.9456  0.9334  0.9271
[17 : 32]:	0.9253  0.9250  0.9215  0.9213  0.9199  0.9155  0.9120  0.9090  0.9086  0.9079  0.9013  0.9000  0.9000  0.8995  0.8984  0.8968
[33 : 48]:	0.8814  0.8785  0.8765  0.8758  0.8739  0.8705  0.8662  0.8629  0.8565  0.8534  0.8508  0.8488  0.8473  0.8458  0.8413  0.8396
[49 : 64]:	0.8314  0.8311  0.8278  0.8249  0.8160  0.8154  0.8147  0.8146  0.8111  0.8095  0.8037  0.8015  0.8000  0.7896  0.7891  0.7824
2024-03-21 20:21:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:21:07 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #1: GFLOPs: 0.1491. Time: 26.8191 us. Best GFLOPs: 0.1491
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #2: GFLOPs: 0.1494. Time: 26.7723 us. Best GFLOPs: 0.1494
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #3: GFLOPs: 0.2051. Time: 19.5026 us. Best GFLOPs: 0.2051
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #4: GFLOPs: 0.1905. Time: 20.9990 us. Best GFLOPs: 0.2051
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #5: GFLOPs: 0.1478. Time: 27.0556 us. Best GFLOPs: 0.2051
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #6: GFLOPs: 0.2200. Time: 18.1836 us. Best GFLOPs: 0.2200
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #7: GFLOPs: 0.2126. Time: 18.8104 us. Best GFLOPs: 0.2200
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #8: GFLOPs: 1.2656. Time: 3.1605 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #9: GFLOPs: 0.3483. Time: 11.4838 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #10: GFLOPs: 0.1661. Time: 24.0871 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #11: GFLOPs: 0.4175. Time: 9.5818 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #12: GFLOPs: 0.5328. Time: 7.5076 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #13: GFLOPs: 0.4060. Time: 9.8530 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #14: GFLOPs: 0.1456. Time: 27.4694 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #15: GFLOPs: 0.1473. Time: 27.1476 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #16: GFLOPs: 0.1739. Time: 22.9991 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #17: GFLOPs: 0.1216. Time: 32.8821 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #18: GFLOPs: 0.1837. Time: 21.7776 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #19: GFLOPs: 0.1491. Time: 26.8270 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #20: GFLOPs: 0.1486. Time: 26.9229 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #21: GFLOPs: 0.1456. Time: 27.4684 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #22: GFLOPs: 0.1537. Time: 26.0244 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #23: GFLOPs: 0.1491. Time: 26.8335 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #24: GFLOPs: 0.1456. Time: 27.4709 us. Best GFLOPs: 1.2656
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #25: GFLOPs: 1.3934. Time: 2.8707 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #26: GFLOPs: 0.1466. Time: 27.2827 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #27: GFLOPs: 0.1483. Time: 26.9715 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #28: GFLOPs: 0.1491. Time: 26.8286 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #29: GFLOPs: 0.1494. Time: 26.7666 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #30: GFLOPs: 0.1479. Time: 27.0455 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #31: GFLOPs: 0.1457. Time: 27.4524 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #32: GFLOPs: 0.1491. Time: 26.8198 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #33: GFLOPs: 0.1207. Time: 33.1273 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #34: GFLOPs: 0.1487. Time: 26.8983 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #35: GFLOPs: 0.1456. Time: 27.4694 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #36: GFLOPs: 0.1489. Time: 26.8648 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #37: GFLOPs: 0.1491. Time: 26.8277 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #38: GFLOPs: 0.3411. Time: 11.7276 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #39: GFLOPs: 0.1494. Time: 26.7687 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #40: GFLOPs: 0.1487. Time: 26.9035 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #41: GFLOPs: 0.2045. Time: 19.5554 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #42: GFLOPs: 0.7311. Time: 5.4712 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #43: GFLOPs: 0.1491. Time: 26.8257 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #44: GFLOPs: 0.1473. Time: 27.1495 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #45: GFLOPs: 0.1494. Time: 26.7657 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #46: GFLOPs: 0.1495. Time: 26.7642 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #47: GFLOPs: 0.1484. Time: 26.9548 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #48: GFLOPs: 0.1494. Time: 26.7665 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #49: GFLOPs: 0.1308. Time: 30.5703 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #50: GFLOPs: 0.1491. Time: 26.8223 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #51: GFLOPs: 0.1494. Time: 26.7677 us. Best GFLOPs: 1.3934
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #52: GFLOPs: 1.7517. Time: 2.2835 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #53: GFLOPs: 0.4424. Time: 9.0408 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #54: GFLOPs: 0.1478. Time: 27.0552 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #55: GFLOPs: 1.6126. Time: 2.4805 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #56: GFLOPs: 0.2048. Time: 19.5290 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #57: GFLOPs: 0.1479. Time: 27.0531 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #58: GFLOPs: 0.4059. Time: 9.8545 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #59: GFLOPs: 0.1473. Time: 27.1494 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #60: GFLOPs: 0.2168. Time: 18.4538 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #61: GFLOPs: 0.1473. Time: 27.1504 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #62: GFLOPs: 0.3411. Time: 11.7275 us. Best GFLOPs: 1.7517
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #63: GFLOPs: 0.1488. Time: 26.8764 us. Best GFLOPs: 1.7517
2024-03-21 22:03:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 22:03:59 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-03-21 22:04:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 22:04:00 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-03-21 22:04:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 22:04:01 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 22:04:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 22:04:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed801098)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7d1a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed81d368)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed65aa48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53cce8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed95b448)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ecb18)]: 0 failure(s)
2024-03-21 22:04:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8446  0.7781  0.7522  0.7265  0.7246  0.6765  0.6667  0.6388  0.5193  0.4836  0.4741  0.4411  0.4356  0.4293  0.4135  0.4089
[17 : 32]:	0.4019  0.3956  0.3851  0.3765  0.3757  0.3710  0.3658  0.3598  0.3553  0.3537  0.3461  0.3318  0.3310  0.3165  0.3163  0.2938
[33 : 48]:	0.2591  0.2533  0.2460  0.2407  0.2370  0.2338  0.2302  0.2283  0.2184  0.2153  0.2093  0.2048  0.1993  0.1989  0.1959  0.1942
[49 : 64]:	0.1919  0.1910  0.1828  0.1818  0.1802  0.1798  0.1790  0.1711  0.1649  0.1638  0.1627  0.1617  0.1569  0.1555  0.1554  0.1550
2024-03-21 22:04:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 22:04:03 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #64: GFLOPs: 1.7009. Time: 2.3516 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #65: GFLOPs: 1.6122. Time: 2.4811 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #66: GFLOPs: 1.7024. Time: 2.3496 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #67: GFLOPs: 1.0150. Time: 3.9409 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #68: GFLOPs: 1.0157. Time: 3.9383 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #69: GFLOPs: 1.6123. Time: 2.4810 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #70: GFLOPs: 1.3845. Time: 2.8891 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #71: GFLOPs: 1.3845. Time: 2.8891 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #72: GFLOPs: 0.4059. Time: 9.8544 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #73: GFLOPs: 0.3656. Time: 10.9414 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #74: GFLOPs: 0.4425. Time: 9.0386 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #75: GFLOPs: 0.4116. Time: 9.7182 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #76: GFLOPs: 0.3656. Time: 10.9421 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #77: GFLOPs: 0.3898. Time: 10.2621 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #78: GFLOPs: 1.5282. Time: 2.6174 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #79: GFLOPs: 1.0159. Time: 3.9373 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #80: GFLOPs: 0.4059. Time: 9.8542 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #81: GFLOPs: 1.7364. Time: 2.3036 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #82: GFLOPs: 0.4174. Time: 9.5828 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #83: GFLOPs: 0.7293. Time: 5.4844 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #84: GFLOPs: 0.7291. Time: 5.4859 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #85: GFLOPs: 1.0967. Time: 3.6473 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #86: GFLOPs: 0.4510. Time: 8.8692 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #87: GFLOPs: 1.5279. Time: 2.6180 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #88: GFLOPs: 1.1210. Time: 3.5682 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #89: GFLOPs: 1.0963. Time: 3.6486 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #90: GFLOPs: 1.7388. Time: 2.3004 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #91: GFLOPs: 1.7022. Time: 2.3499 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #92: GFLOPs: 1.0971. Time: 3.6461 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #93: GFLOPs: 0.4174. Time: 9.5822 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #94: GFLOPs: 0.3123. Time: 12.8082 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #95: GFLOPs: 1.4527. Time: 2.7534 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #96: GFLOPs: 0.2193. Time: 18.2367 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #97: GFLOPs: 0.4004. Time: 9.9904 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #98: GFLOPs: 0.4175. Time: 9.5818 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #99: GFLOPs: 0.4250. Time: 9.4110 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #100: GFLOPs: 0.3090. Time: 12.9441 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #101: GFLOPs: 0.2958. Time: 13.5236 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #102: GFLOPs: 0.4059. Time: 9.8539 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #103: GFLOPs: 0.7311. Time: 5.4710 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #104: GFLOPs: 0.4312. Time: 9.2764 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #105: GFLOPs: 0.2189. Time: 18.2748 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #106: GFLOPs: 0.1488. Time: 26.8765 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #107: GFLOPs: 0.2177. Time: 18.3730 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #108: GFLOPs: 0.2184. Time: 18.3160 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #109: GFLOPs: 0.2192. Time: 18.2517 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #110: GFLOPs: 0.2192. Time: 18.2514 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #111: GFLOPs: 0.3847. Time: 10.3971 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #112: GFLOPs: 0.1488. Time: 26.8748 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #113: GFLOPs: 0.4174. Time: 9.5825 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #114: GFLOPs: 0.1467. Time: 27.2744 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #115: GFLOPs: 0.3749. Time: 10.6709 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #116: GFLOPs: 0.3483. Time: 11.4847 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #117: GFLOPs: 0.3717. Time: 10.7618 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #118: GFLOPs: 0.1488. Time: 26.8745 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #119: GFLOPs: 0.1488. Time: 26.8757 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #120: GFLOPs: 0.1481. Time: 27.0118 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #121: GFLOPs: 0.2121. Time: 18.8565 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #122: GFLOPs: 0.1481. Time: 27.0072 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #123: GFLOPs: 0.3212. Time: 12.4529 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #124: GFLOPs: 0.4117. Time: 9.7168 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #125: GFLOPs: 0.1452. Time: 27.5507 us. Best GFLOPs: 1.7517
2024-03-21 22:04:46 [INFO] [task_scheduler.cc:131] [Task #35: fused_nn_softmax] Trial #126: GFLOPs: 0.1360. Time: 29.4208 us. Best GFLOPs: 1.7517
