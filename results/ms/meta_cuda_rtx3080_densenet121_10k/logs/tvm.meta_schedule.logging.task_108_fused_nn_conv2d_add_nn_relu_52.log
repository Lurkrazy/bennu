2024-03-20 22:52:36 [INFO] [task_scheduler.cc:160] Initializing Task #108: "fused_nn_conv2d_add_nn_relu_52"
2024-03-20 22:52:36 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(224), T.int64(56), T.int64(56)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56), T.int64(224), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-20 22:52:36 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-20 22:52:36 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(175616)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(224), rc_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(224), rc_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(224), rc_0 * T.int64(112) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(28), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 2, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 56, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-20 22:52:36 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(175616)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(28), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 2, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 56, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 22:52:36 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(224), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(175616)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused // T.int64(1568))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(1568) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3584)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(112))
                                    v1 = T.axis.spatial(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(224), rc_0_ry_0_rx_0_fused * T.int64(112) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(28), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(28) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 2, 2, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 2, 7, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 56, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 23:51:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-20 23:51:15 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-20 23:51:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 493 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 982 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 1467 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:17 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-03-20 23:51:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-20 23:51:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9973  0.9966  0.9962  0.9961  0.9949  0.9945  0.9939  0.9930  0.9924  0.9911  0.9910  0.9899  0.9884  0.9882  0.9882  0.9882
[17 : 32]:	0.9878  0.9870  0.9869  0.9864  0.9839  0.9828  0.9821  0.9815  0.9811  0.9797  0.9794  0.9794  0.9791  0.9784  0.9763  0.9754
[33 : 48]:	0.9753  0.9752  0.9748  0.9743  0.9732  0.9731  0.9718  0.9714  0.9714  0.9711  0.9701  0.9695  0.9693  0.9689  0.9678  0.9671
[49 : 64]:	0.9662  0.9660  0.9654  0.9647  0.9647  0.9642  0.9639  0.9632  0.9623  0.9622  0.9621  0.9615  0.9611  0.9610  0.9601  0.9600
2024-03-20 23:51:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-20 23:51:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #1: GFLOPs: 2309.4600. Time: 78.2146 us. Best GFLOPs: 2309.4600
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #2: GFLOPs: 5724.1522. Time: 31.5564 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #3: GFLOPs: 2656.9135. Time: 67.9863 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #4: GFLOPs: 487.1595. Time: 370.7895 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #5: GFLOPs: 2627.0618. Time: 68.7588 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #6: GFLOPs: 110.8019. Time: 1630.2389 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #7: GFLOPs: 3317.3997. Time: 54.4504 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #8: GFLOPs: 1626.6950. Time: 111.0433 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #9: GFLOPs: 446.4612. Time: 404.5897 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #10: GFLOPs: 2091.7577. Time: 86.3549 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #11: GFLOPs: 1976.1658. Time: 91.4061 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #12: GFLOPs: 552.2792. Time: 327.0693 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #13: GFLOPs: 432.1307. Time: 418.0069 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #14: GFLOPs: 3906.9680. Time: 46.2337 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #15: GFLOPs: 19.8508. Time: 9099.5435 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #16: GFLOPs: 4213.5242. Time: 42.8700 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #17: GFLOPs: 21.0000. Time: 8601.6000 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #18: GFLOPs: 5340.1446. Time: 33.8256 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #19: GFLOPs: 2237.8240. Time: 80.7184 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #20: GFLOPs: 2723.7169. Time: 66.3188 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #21: GFLOPs: 740.5833. Time: 243.9072 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #22: GFLOPs: 185.9788. Time: 971.2590 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #23: GFLOPs: 4286.2148. Time: 42.1429 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #24: GFLOPs: 2652.3405. Time: 68.1035 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #25: GFLOPs: 19.6735. Time: 9181.5740 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #26: GFLOPs: 43.7739. Time: 4126.5152 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #27: GFLOPs: 2999.4053. Time: 60.2231 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #28: GFLOPs: 130.6100. Time: 1383.0001 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #29: GFLOPs: 3542.2237. Time: 50.9944 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #30: GFLOPs: 3969.5211. Time: 45.5051 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #31: GFLOPs: 969.9868. Time: 186.2227 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #32: GFLOPs: 3025.1612. Time: 59.7104 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #33: GFLOPs: 624.8925. Time: 289.0635 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #34: GFLOPs: 4994.5198. Time: 36.1664 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #35: GFLOPs: 1031.6380. Time: 175.0940 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #36: GFLOPs: 2160.5904. Time: 83.6038 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #37: GFLOPs: 1349.1143. Time: 133.8905 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #38: GFLOPs: 1673.2786. Time: 107.9519 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #39: GFLOPs: 2450.2636. Time: 73.7201 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #40: GFLOPs: 548.2604. Time: 329.4668 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #41: GFLOPs: 4504.9533. Time: 40.0967 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #42: GFLOPs: 4572.0638. Time: 39.5081 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #43: GFLOPs: 131.2781. Time: 1375.9614 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #44: GFLOPs: 708.6232. Time: 254.9078 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #45: GFLOPs: 103.8332. Time: 1739.6524 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #46: GFLOPs: 1690.7908. Time: 106.8338 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #47: GFLOPs: 4492.0036. Time: 40.2123 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #48: GFLOPs: 1668.4046. Time: 108.2673 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #49: GFLOPs: 1669.9658. Time: 108.1660 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #50: GFLOPs: 1918.0683. Time: 94.1748 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #51: GFLOPs: 3813.6814. Time: 47.3646 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #52: GFLOPs: 3138.6878. Time: 57.5507 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #53: GFLOPs: 2805.8030. Time: 64.3786 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #54: GFLOPs: 2306.1130. Time: 78.3282 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #55: GFLOPs: 5403.3389. Time: 33.4300 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #56: GFLOPs: 133.0181. Time: 1357.9624 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #57: GFLOPs: 4313.0077. Time: 41.8811 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #58: GFLOPs: 1221.1841. Time: 147.9168 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #59: GFLOPs: 1148.4962. Time: 157.2784 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #60: GFLOPs: 189.2994. Time: 954.2217 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #61: GFLOPs: 162.1605. Time: 1113.9186 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #62: GFLOPs: 2551.8890. Time: 70.7843 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #63: GFLOPs: 365.1200. Time: 494.7239 us. Best GFLOPs: 5724.1522
2024-03-21 00:12:55 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #64: GFLOPs: 851.7451. Time: 212.0747 us. Best GFLOPs: 5724.1522
2024-03-21 01:01:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:01:51 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 01:01:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 432 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:01:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 856 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:01:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 1277 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:01:54 [INFO] [evolutionary_search.cc:723] Sampled 67 candidate(s)
2024-03-21 01:01:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:01:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:02:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:02:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a23adae8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6c0bac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a5cfb428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a5667278)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a6d20b68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a418a6e8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6c0b9c8)]: 0 failure(s)
2024-03-21 01:02:04 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.9484  1.5343  1.5331  1.5210  1.5143  1.5143  1.4995  1.4727  1.4663  1.4551  1.4551  1.4448  1.4438  1.4238  1.4115  1.4094
[17 : 32]:	1.4087  1.3951  1.3912  1.3890  1.3847  1.3835  1.3499  1.3355  1.3319  1.3112  1.3072  1.3038  1.2967  1.2909  1.2896  1.2812
[33 : 48]:	1.2790  1.2763  1.2732  1.2727  1.2723  1.2680  1.2666  1.2603  1.2501  1.2501  1.2476  1.2453  1.2378  1.2344  1.2342  1.2325
[49 : 64]:	1.2301  1.2274  1.2237  1.2237  1.2209  1.2195  1.2178  1.2158  1.2092  1.2058  1.2046  1.2042  1.2042  1.1966  1.1963  1.1963
2024-03-21 01:02:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:02:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #65: GFLOPs: 4260.9283. Time: 42.3930 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #66: GFLOPs: 4984.5244. Time: 36.2389 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #67: GFLOPs: 5021.8450. Time: 35.9696 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #68: GFLOPs: 4032.6739. Time: 44.7925 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #69: GFLOPs: 5543.1238. Time: 32.5870 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #70: GFLOPs: 4614.7457. Time: 39.1427 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #71: GFLOPs: 5544.3113. Time: 32.5800 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #72: GFLOPs: 5180.0318. Time: 34.8711 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #73: GFLOPs: 5144.4589. Time: 35.1123 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #74: GFLOPs: 5162.8571. Time: 34.9871 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #75: GFLOPs: 5488.7102. Time: 32.9100 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #76: GFLOPs: 3872.6675. Time: 46.6432 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #77: GFLOPs: 5075.0378. Time: 35.5926 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #78: GFLOPs: 5580.3329. Time: 32.3697 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #79: GFLOPs: 5472.5736. Time: 33.0071 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #80: GFLOPs: 5499.4381. Time: 32.8458 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #81: GFLOPs: 4341.6832. Time: 41.6045 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #82: GFLOPs: 5458.9342. Time: 33.0895 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #83: GFLOPs: 5558.7503. Time: 32.4954 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #84: GFLOPs: 4288.8944. Time: 42.1166 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #85: GFLOPs: 5705.4121. Time: 31.6600 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #86: GFLOPs: 4367.4374. Time: 41.3592 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #87: GFLOPs: 3054.0080. Time: 59.1464 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #88: GFLOPs: 5209.7816. Time: 34.6720 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #89: GFLOPs: 3477.4386. Time: 51.9444 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #90: GFLOPs: 3287.2029. Time: 54.9505 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #91: GFLOPs: 4654.6238. Time: 38.8073 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #92: GFLOPs: 5454.3711. Time: 33.1172 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #93: GFLOPs: 4299.0644. Time: 42.0170 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #94: GFLOPs: 4342.4241. Time: 41.5974 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #95: GFLOPs: 3056.1015. Time: 59.1059 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #96: GFLOPs: 3764.5907. Time: 47.9823 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #97: GFLOPs: 3168.2310. Time: 57.0140 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #98: GFLOPs: 3097.7211. Time: 58.3118 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #99: GFLOPs: 3086.0517. Time: 58.5323 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #100: GFLOPs: 5259.4805. Time: 34.3444 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #101: GFLOPs: 4262.8356. Time: 42.3740 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #102: GFLOPs: 5154.9388. Time: 35.0409 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #103: GFLOPs: 2920.1190. Time: 61.8583 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #104: GFLOPs: 3593.1890. Time: 50.2711 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #105: GFLOPs: 4288.6191. Time: 42.1193 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #106: GFLOPs: 4296.8447. Time: 42.0387 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #107: GFLOPs: 4233.5298. Time: 42.6674 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #108: GFLOPs: 2744.8059. Time: 65.8092 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #109: GFLOPs: 3012.5494. Time: 59.9604 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #110: GFLOPs: 5207.2339. Time: 34.6890 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #111: GFLOPs: 4237.3964. Time: 42.6284 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #112: GFLOPs: 3757.8615. Time: 48.0682 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #113: GFLOPs: 3028.6338. Time: 59.6419 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #114: GFLOPs: 5430.7810. Time: 33.2611 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #115: GFLOPs: 4279.5882. Time: 42.2082 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #116: GFLOPs: 4305.9621. Time: 41.9496 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #117: GFLOPs: 4166.8572. Time: 43.3501 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #118: GFLOPs: 5571.1640. Time: 32.4230 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #119: GFLOPs: 3839.4040. Time: 47.0473 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #120: GFLOPs: 4217.4892. Time: 42.8297 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #121: GFLOPs: 5257.0427. Time: 34.3603 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #122: GFLOPs: 4219.8324. Time: 42.8059 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #123: GFLOPs: 5274.2077. Time: 34.2485 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #124: GFLOPs: 4587.0557. Time: 39.3790 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #125: GFLOPs: 4633.0591. Time: 38.9880 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #126: GFLOPs: 247.0081. Time: 731.2863 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #127: GFLOPs: 2250.3214. Time: 80.2701 us. Best GFLOPs: 5724.1522
2024-03-21 01:02:54 [INFO] [task_scheduler.cc:131] [Task #108: fused_nn_conv2d_add_nn_relu_52] Trial #128: GFLOPs: 102.6461. Time: 1759.7710 us. Best GFLOPs: 5724.1522
