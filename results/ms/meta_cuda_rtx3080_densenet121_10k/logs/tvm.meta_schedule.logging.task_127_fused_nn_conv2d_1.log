2024-03-20 22:52:37 [INFO] [task_scheduler.cc:160] Initializing Task #127: "fused_nn_conv2d_1"
2024-03-20 22:52:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(512), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(256), T.int64(28), T.int64(28), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
2024-03-20 22:52:37 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-20 22:52:37 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(448), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(28) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0 * T.int64(256) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                                T.writes(conv2d_nchw[v0, v1, v2, v3])
                                conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[2, 1, 32, 2, 2])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 1, 7, 1, 1])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[7, 1, 2, 2, 1])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[2, 16, 16])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
sch.compute_inline(block=b0)
v98 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v98)
2024-03-20 22:52:37 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(448), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(28) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                                T.writes(conv2d_nchw[v0, v1, v2, v3])
                                conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[2, 1, 32, 2, 2])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 1, 7, 1, 1])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[7, 1, 2, 2, 1])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[2, 16, 16])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
l98 = sch.fuse(l53, l59, l65, preserve_unit_iters=True)
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
2024-03-20 22:52:37 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(448), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7168)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(28) // T.int64(4))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32768)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(256))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + ax0_ax1_ax2_ax3_fused % T.int64(256))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(256) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(256), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(128) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) // T.int64(7) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                                T.writes(conv2d_nchw[v0, v1, v2, v3])
                                conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[2, 1, 32, 2, 2])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[4, 1, 7, 1, 1])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[7, 1, 2, 2, 1])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[2, 16, 16])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
l98 = sch.fuse(l53, l59, l65, preserve_unit_iters=True)
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
2024-03-21 00:05:27 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:05:27 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 00:05:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 482 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 965 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:29 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-03-21 00:05:30 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:05:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9979  0.9979  0.9974  0.9969  0.9963  0.9955  0.9955  0.9945  0.9945  0.9941  0.9922  0.9920  0.9918  0.9915  0.9910  0.9889
[17 : 32]:	0.9884  0.9873  0.9868  0.9859  0.9855  0.9853  0.9850  0.9846  0.9836  0.9830  0.9828  0.9821  0.9817  0.9813  0.9810  0.9810
[33 : 48]:	0.9807  0.9794  0.9779  0.9776  0.9773  0.9772  0.9771  0.9770  0.9767  0.9765  0.9758  0.9753  0.9753  0.9751  0.9749  0.9740
[49 : 64]:	0.9726  0.9720  0.9711  0.9708  0.9704  0.9687  0.9669  0.9652  0.9646  0.9631  0.9628  0.9614  0.9607  0.9603  0.9594  0.9594
2024-03-21 00:05:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:05:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #1: GFLOPs: 531.6165. Time: 386.5962 us. Best GFLOPs: 531.6165
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #2: GFLOPs: 814.4348. Time: 252.3479 us. Best GFLOPs: 814.4348
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #3: GFLOPs: 572.6856. Time: 358.8721 us. Best GFLOPs: 814.4348
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #4: GFLOPs: 3387.9653. Time: 60.6620 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #5: GFLOPs: 177.2536. Time: 1159.4740 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #6: GFLOPs: 180.0147. Time: 1141.6898 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #7: GFLOPs: 1478.0647. Time: 139.0473 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #8: GFLOPs: 37.7959. Time: 5437.6554 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #9: GFLOPs: 12.9759. Time: 15838.6470 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #10: GFLOPs: 115.5244. Time: 1779.0254 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #11: GFLOPs: 97.5228. Time: 2107.4133 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:121] [Task #127: fused_nn_conv2d_1] Trial #12: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(28)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + yy_3_init * T.int64(2) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), xx_3_init * T.int64(28) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(512), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(7)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused)
                                        v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(784))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(256), ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2)
                                        v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused)
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(28)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + yy_3 * T.int64(2) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), xx_3 * T.int64(28) + xx_4)
                                v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(28)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                            T.writes(conv2d_nchw[v0, v1, v2, v3])
                            conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 4, 32, 2, 1])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 2, 1, 7, 2])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 28])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[512, 1, 1])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
l98 = sch.fuse(l53, l59, l65, preserve_unit_iters=True)
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
sch.enter_postproc()
sch.unannotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch")
l100, l101, l102, l103, l104 = sch.get_loops(block=b72)
l105, l106, l107 = sch.split(loop=l104, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.bind(loop=l106, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch")
l108, l109, l110, l111, l112 = sch.get_loops(block=b85)
l113, l114, l115 = sch.split(loop=l112, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l115)
sch.bind(loop=l114, thread_axis="threadIdx.x")
b116 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b116, ann_key="meta_schedule.unroll_explicit")
b117, b118, b119, b120 = sch.get_child_blocks(b116)
l121, l122, l123, l124, l125, l126, l127 = sch.get_loops(block=b117)
l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b118)
l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b119)
sch.annotate(block_or_loop=l135, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l135, ann_key="pragma_unroll_explicit", ann_val=1)
l153, l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b120)
b160 = sch.get_block(name="conv2d_nchw", func_name="main")
l161, l162, l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b160)
b179 = sch.decompose_reduction(block=b160, loop=l164)
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #13: GFLOPs: 30.2916. Time: 6784.7509 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #14: GFLOPs: 2407.2964. Time: 85.3742 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #15: GFLOPs: 2533.6393. Time: 81.1169 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #16: GFLOPs: 640.3048. Time: 320.9735 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #17: GFLOPs: 135.6780. Time: 1514.7690 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #18: GFLOPs: 741.5362. Time: 277.1556 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #19: GFLOPs: 55.4432. Time: 3706.8730 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #20: GFLOPs: 1458.0274. Time: 140.9582 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #21: GFLOPs: 50.4343. Time: 4075.0207 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #22: GFLOPs: 473.1275. Time: 434.3879 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #23: GFLOPs: 11.3281. Time: 18142.5488 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #24: GFLOPs: 1510.0856. Time: 136.0988 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #25: GFLOPs: 1750.1574. Time: 117.4299 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #26: GFLOPs: 31.4441. Time: 6536.0641 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #27: GFLOPs: 152.5232. Time: 1347.4734 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #28: GFLOPs: 1545.6208. Time: 132.9698 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #29: GFLOPs: 602.4285. Time: 341.1540 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #30: GFLOPs: 1627.5771. Time: 126.2741 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #31: GFLOPs: 91.7453. Time: 2240.1252 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #32: GFLOPs: 1521.3087. Time: 135.0948 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #33: GFLOPs: 123.4358. Time: 1665.0029 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #34: GFLOPs: 240.5443. Time: 854.3995 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #35: GFLOPs: 980.0149. Time: 209.7120 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #36: GFLOPs: 49.3339. Time: 4165.9149 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #37: GFLOPs: 36.0690. Time: 5697.9912 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #38: GFLOPs: 2948.5470. Time: 69.7024 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:121] [Task #127: fused_nn_conv2d_1] Trial #39: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(8), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(14)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(16) + ff_3_init * T.int64(8) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3_init * T.int64(14) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(128), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(28)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(10)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(4))
                                        v1 = T.axis.spatial(T.int64(512), rc_0 * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1024))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(14)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(16) + ff_3 * T.int64(8) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 * T.int64(14) + xx_4)
                                v_rc = T.axis.reduce(T.int64(512), rc_0 * T.int64(4) + rc_1 * T.int64(4) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(14)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(256), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(16) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                            T.writes(conv2d_nchw[v0, v1, v2, v3])
                            conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 4, 4, 2, 8])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 2, 14, 1, 1])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 14])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[128, 1, 4])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
sch.compute_inline(block=b0)
v98 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v98)
sch.enter_postproc()
sch.unannotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch")
l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b72)
l106, l107 = sch.split(loop=l105, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l107, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch")
l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b85)
l115, l116, l117 = sch.split(loop=l114, factors=[None, 56, 2], preserve_unit_iters=True)
sch.vectorize(loop=l117)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b118 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b118, ann_key="meta_schedule.unroll_explicit")
b119, b120, b121, b122 = sch.get_child_blocks(b118)
l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b119)
l131, l132, l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b120)
l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b121)
sch.annotate(block_or_loop=l140, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l140, ann_key="pragma_unroll_explicit", ann_val=1)
l160, l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b122)
b167 = sch.get_block(name="conv2d_nchw", func_name="main")
l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b167)
b188 = sch.decompose_reduction(block=b167, loop=l171)
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #40: GFLOPs: 3263.7622. Time: 62.9705 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #41: GFLOPs: 48.3260. Time: 4252.8000 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #42: GFLOPs: 48.4354. Time: 4243.2000 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #43: GFLOPs: 32.2909. Time: 6364.6721 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #44: GFLOPs: 1359.4706. Time: 151.1772 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #45: GFLOPs: 467.4763. Time: 439.6392 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #46: GFLOPs: 51.1108. Time: 4021.0843 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #47: GFLOPs: 57.9405. Time: 3547.1007 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #48: GFLOPs: 151.0603. Time: 1360.5224 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #49: GFLOPs: 1976.3076. Time: 103.9924 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:121] [Task #127: fused_nn_conv2d_1] Trial #50: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  261: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::TVMRetValue)
  260: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  259: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  258: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  257: tvm::transform::Pass::operator()(tvm::IRModule) const
  256: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  255: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  254: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  253: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  252: _ZN3tvm7runtime13PackedFuncObj
  251: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  250: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  249: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  242: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  241: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  240: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  239: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  223: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  222: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  221: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  220: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  219: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  218: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  217: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  216: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  215: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  214: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  213: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  212: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  211: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  210: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  209: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  208: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  207: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  200: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  199: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  198: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  197: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  196: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  195: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  194: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  193: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  192: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  191: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  190: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  189: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  185: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  184: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  183: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  182: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  181: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  174: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  173: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  172: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  171: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  170: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  169: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  168: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  167: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  166: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  165: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  164: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  163: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  159: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  158: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  157: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  156: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  155: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  154: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  153: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  152: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  151: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  150: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  149: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  136: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  135: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  134: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  133: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  132: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  131: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  130: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  129: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  128: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  127: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  126: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  125: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  124: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  123: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  122: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  121: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  120: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  107: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  106: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  105: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  104: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  103: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  102: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  101: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  100: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  99: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  98: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  97: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  96: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  95: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  94: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  93: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  92: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  91: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  90: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  89: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  88: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  87: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  86: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  85: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  75: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  74: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  73: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  72: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  71: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  70: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  69: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  68: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  67: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  66: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  65: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  64: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  63: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  62: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  61: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  60: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  59: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  58: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  57: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  56: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  55: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  54: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  53: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  52: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  51: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  50: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  40: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  39: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  38: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  37: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  36: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  35: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  34: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  33: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  32: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  31: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  30: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  29: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  28: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  27: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  26: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  25: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  24: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  23: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  22: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  21: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  17: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  16: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  15: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  14: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  13: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  12: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  11: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  10: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  9: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  8: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  7: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  6: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  5: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  4: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  3: _ZZN3tvm3tir11ExprFunctorIFNS_8PrimExprERKS2_EE10InitVTableEvENUlRKNS_7ru
  2: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  1: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  0: tvm::tir::APIType(tvm::runtime::DataType)
  File "/home/canesche/tvm-0.16.dev0/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), "float32"), conv2d_nchw: T.Buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(256), T.int64(512), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(28), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(256), nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(256), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) // T.int64(56))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(56) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(28))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 < T.int64(112))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(256), nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(512), rc_0_ry_0_rx_0_fused * T.int64(2) + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(28)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(256), nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3])
                            T.writes(conv2d_nchw[v0, v1, v2, v3])
                            conv2d_nchw[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l15, l16, l17, l18, l19 = sch.split(loop=l3, factors=[v10, v11, v12, v13, v14], preserve_unit_iters=True)
v20, v21, v22, v23, v24 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 64, 2, 2])
l25, l26, l27, l28, l29 = sch.split(loop=l4, factors=[v20, v21, v22, v23, v24], preserve_unit_iters=True)
v30, v31, v32, v33, v34 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[14, 1, 2, 1, 1])
l35, l36, l37, l38, l39 = sch.split(loop=l5, factors=[v30, v31, v32, v33, v34], preserve_unit_iters=True)
v40, v41, v42, v43, v44 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 28, 1])
l45, l46, l47, l48, l49 = sch.split(loop=l6, factors=[v40, v41, v42, v43, v44], preserve_unit_iters=True)
v50, v51, v52 = sch.sample_perfect_tile(loop=l7, n=3, max_innermost_factor=64, decision=[256, 2, 1])
l53, l54, l55 = sch.split(loop=l7, factors=[v50, v51, v52], preserve_unit_iters=True)
v56, v57, v58 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l59, l60, l61 = sch.split(loop=l8, factors=[v56, v57, v58], preserve_unit_iters=True)
v62, v63, v64 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l65, l66, l67 = sch.split(loop=l9, factors=[v62, v63, v64], preserve_unit_iters=True)
sch.reorder(l15, l25, l35, l45, l16, l26, l36, l46, l17, l27, l37, l47, l53, l59, l65, l54, l60, l66, l18, l28, l38, l48, l55, l61, l67, l19, l29, l39, l49)
l68 = sch.fuse(l15, l25, l35, l45, preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="blockIdx.x")
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="vthread.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b71 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b71, loop=l70, preserve_unit_loops=True, index=-1)
b72 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b72, loop=l65, preserve_unit_loops=True, index=-1)
l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83 = sch.fuse(l79, l80, l81, l82, preserve_unit_iters=True)
v84 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch", ann_val=v84)
b85 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b85, loop=l65, preserve_unit_loops=True, index=-1)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b85)
l96 = sch.fuse(l92, l93, l94, l95, preserve_unit_iters=True)
v97 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch", ann_val=v97)
l98 = sch.fuse(l53, l59, l65, preserve_unit_iters=True)
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l98, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
sch.enter_postproc()
sch.unannotate(block_or_loop=b72, ann_key="meta_schedule.cooperative_fetch")
l100, l101, l102, l103, l104 = sch.get_loops(block=b72)
l105, l106 = sch.split(loop=l104, factors=[None, 128], preserve_unit_iters=True)
sch.bind(loop=l106, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b85, ann_key="meta_schedule.cooperative_fetch")
l107, l108, l109, l110, l111 = sch.get_loops(block=b85)
l112, l113, l114 = sch.split(loop=l111, factors=[None, 128, 4], preserve_unit_iters=True)
sch.vectorize(loop=l114)
sch.bind(loop=l113, thread_axis="threadIdx.x")
b115 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b115, ann_key="meta_schedule.unroll_explicit")
b116, b117, b118, b119 = sch.get_child_blocks(b115)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b116)
l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b117)
l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150 = sch.get_loops(block=b118)
l151, l152, l153, l154, l155, l156, l157 = sch.get_loops(block=b119)
b158 = sch.get_block(name="conv2d_nchw", func_name="main")
l159, l160, l161, l162, l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176 = sch.get_loops(block=b158)
b177 = sch.decompose_reduction(block=b158, loop=l162)
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #51: GFLOPs: 769.3435. Time: 267.1380 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #52: GFLOPs: 2019.7540. Time: 101.7554 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #53: GFLOPs: 1143.4037. Time: 179.7448 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #54: GFLOPs: 563.4057. Time: 364.7831 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #55: GFLOPs: 37.0929. Time: 5540.7008 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #56: GFLOPs: 716.2134. Time: 286.9548 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #57: GFLOPs: 900.6525. Time: 228.1911 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #58: GFLOPs: 847.5509. Time: 242.4880 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #59: GFLOPs: 1298.3023. Time: 158.2997 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #60: GFLOPs: 159.7527. Time: 1286.4940 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #61: GFLOPs: 1043.1123. Time: 197.0266 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #62: GFLOPs: 48.5476. Time: 4233.3867 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #63: GFLOPs: 147.2217. Time: 1395.9964 us. Best GFLOPs: 3387.9653
2024-03-21 00:13:18 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #64: GFLOPs: 756.0457. Time: 271.8366 us. Best GFLOPs: 3387.9653
2024-03-21 00:30:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 00:30:06 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-03-21 00:30:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 429 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 860 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 1284 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:08 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-03-21 00:30:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 00:30:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5418  1.4576  1.4576  1.4458  1.3685  1.3518  1.3473  1.3473  1.3387  1.3343  1.2441  1.1906  1.1686  1.1675  1.1574  1.1506
[17 : 32]:	1.1481  1.1339  1.1148  1.1106  1.1083  1.1062  1.1048  1.0955  1.0941  1.0677  1.0668  1.0311  1.0193  1.0193  0.9935  0.9911
[33 : 48]:	0.9890  0.9879  0.9873  0.9848  0.9846  0.9846  0.9845  0.9831  0.9831  0.9831  0.9814  0.9811  0.9787  0.9778  0.9736  0.9730
[49 : 64]:	0.9730  0.9729  0.9709  0.9693  0.9674  0.9670  0.9643  0.9643  0.9584  0.9560  0.9556  0.9524  0.9522  0.9501  0.9492  0.9479
2024-03-21 00:30:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 00:30:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #65: GFLOPs: 3301.6352. Time: 62.2482 us. Best GFLOPs: 3387.9653
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #66: GFLOPs: 3552.6977. Time: 57.8492 us. Best GFLOPs: 3552.6977
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #67: GFLOPs: 3630.3423. Time: 56.6120 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #68: GFLOPs: 3439.5872. Time: 59.7516 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #69: GFLOPs: 2867.7705. Time: 71.6657 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #70: GFLOPs: 3220.3580. Time: 63.8193 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #71: GFLOPs: 3175.8978. Time: 64.7127 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #72: GFLOPs: 3192.3427. Time: 64.3793 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #73: GFLOPs: 3011.7268. Time: 68.2402 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #74: GFLOPs: 3206.3848. Time: 64.0974 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #75: GFLOPs: 3137.5193. Time: 65.5043 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #76: GFLOPs: 2378.8746. Time: 86.3942 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #77: GFLOPs: 3502.0498. Time: 58.6859 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #78: GFLOPs: 2991.3783. Time: 68.7044 us. Best GFLOPs: 3630.3423
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #79: GFLOPs: 3880.2686. Time: 52.9656 us. Best GFLOPs: 3880.2686
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #80: GFLOPs: 3957.4919. Time: 51.9321 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #81: GFLOPs: 3452.6571. Time: 59.5254 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #82: GFLOPs: 3328.1930. Time: 61.7515 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #83: GFLOPs: 2517.5287. Time: 81.6360 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #84: GFLOPs: 2600.7170. Time: 79.0247 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #85: GFLOPs: 2064.6555. Time: 99.5425 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #86: GFLOPs: 2039.4524. Time: 100.7726 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #87: GFLOPs: 3333.1652. Time: 61.6594 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #88: GFLOPs: 3034.5258. Time: 67.7275 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #89: GFLOPs: 3255.1923. Time: 63.1363 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #90: GFLOPs: 2113.2026. Time: 97.2557 us. Best GFLOPs: 3957.4919
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #91: GFLOPs: 4232.1476. Time: 48.5618 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #92: GFLOPs: 3236.8499. Time: 63.4941 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #93: GFLOPs: 3455.0899. Time: 59.4835 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #94: GFLOPs: 3406.8345. Time: 60.3261 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #95: GFLOPs: 2163.1996. Time: 95.0078 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #96: GFLOPs: 2434.8616. Time: 84.4076 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #97: GFLOPs: 2422.9471. Time: 84.8227 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #98: GFLOPs: 2504.9489. Time: 82.0459 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #99: GFLOPs: 3404.0188. Time: 60.3760 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #100: GFLOPs: 2427.8450. Time: 84.6516 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #101: GFLOPs: 3102.0889. Time: 66.2524 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #102: GFLOPs: 3457.9302. Time: 59.4347 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #103: GFLOPs: 3364.8868. Time: 61.0781 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #104: GFLOPs: 2959.6084. Time: 69.4419 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #105: GFLOPs: 420.8870. Time: 488.3042 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #106: GFLOPs: 394.4510. Time: 521.0303 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #107: GFLOPs: 3232.0820. Time: 63.5878 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #108: GFLOPs: 3260.2007. Time: 63.0393 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #109: GFLOPs: 2133.3480. Time: 96.3373 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #110: GFLOPs: 1912.2633. Time: 107.4752 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #111: GFLOPs: 2816.7038. Time: 72.9650 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #112: GFLOPs: 3458.2471. Time: 59.4292 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #113: GFLOPs: 3102.3647. Time: 66.2465 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #114: GFLOPs: 2752.1324. Time: 74.6770 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #115: GFLOPs: 3236.8474. Time: 63.4942 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #116: GFLOPs: 3576.3826. Time: 57.4661 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #117: GFLOPs: 3345.7375. Time: 61.4277 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #118: GFLOPs: 3345.7126. Time: 61.4281 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #119: GFLOPs: 1917.7942. Time: 107.1653 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #120: GFLOPs: 1607.8923. Time: 127.8201 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #121: GFLOPs: 1861.8351. Time: 110.3862 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #122: GFLOPs: 3236.2042. Time: 63.5068 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #123: GFLOPs: 3620.0184. Time: 56.7734 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #124: GFLOPs: 3310.1818. Time: 62.0875 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #125: GFLOPs: 3418.7214. Time: 60.1163 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #126: GFLOPs: 1949.4915. Time: 105.4228 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #127: GFLOPs: 68.5224. Time: 2999.3261 us. Best GFLOPs: 4232.1476
2024-03-21 00:31:30 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #128: GFLOPs: 45.3185. Time: 4535.0329 us. Best GFLOPs: 4232.1476
2024-03-21 01:15:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:15:00 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 01:15:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 382 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 765 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:02 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-03-21 01:15:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a2775198)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6327148)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x57299f22cda8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a43a4ee8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x57299e6dae98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5729a29428a8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6327048)]: 0 failure(s)
2024-03-21 01:15:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7065  1.7028  1.6986  1.6985  1.6907  1.6649  1.6605  1.6569  1.6526  1.6450  1.6408  1.6371  1.6328  1.6271  1.6011  1.5990
[17 : 32]:	1.5950  1.5947  1.5787  1.5737  1.5717  1.5709  1.5499  1.5432  1.5411  1.5291  1.5285  1.5223  1.4928  1.4814  1.4722  1.4305
[33 : 48]:	1.4220  1.4194  1.4173  1.4034  1.4002  1.3901  1.3820  1.3808  1.3761  1.3729  1.3668  1.3615  1.3562  1.3489  1.3474  1.3462
[49 : 64]:	1.3444  1.3403  1.3403  1.3301  1.3091  1.2979  1.2978  1.2760  1.2752  1.2747  1.2720  1.2691  1.2579  1.2373  1.2373  1.2323
2024-03-21 01:15:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:15:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #129: GFLOPs: 2512.0634. Time: 81.8136 us. Best GFLOPs: 4232.1476
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #130: GFLOPs: 5161.8162. Time: 39.8156 us. Best GFLOPs: 5161.8162
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #131: GFLOPs: 2939.8990. Time: 69.9075 us. Best GFLOPs: 5161.8162
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #132: GFLOPs: 5206.8794. Time: 39.4710 us. Best GFLOPs: 5206.8794
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #133: GFLOPs: 5225.7933. Time: 39.3282 us. Best GFLOPs: 5225.7933
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #134: GFLOPs: 5218.9883. Time: 39.3795 us. Best GFLOPs: 5225.7933
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #135: GFLOPs: 2384.1131. Time: 86.2043 us. Best GFLOPs: 5225.7933
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #136: GFLOPs: 5246.0141. Time: 39.1766 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #137: GFLOPs: 5087.7479. Time: 40.3953 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #138: GFLOPs: 5171.1776. Time: 39.7435 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #139: GFLOPs: 3443.1372. Time: 59.6900 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #140: GFLOPs: 5104.6808. Time: 40.2613 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #141: GFLOPs: 5084.5397. Time: 40.4207 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #142: GFLOPs: 3237.1402. Time: 63.4884 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #143: GFLOPs: 5094.0899. Time: 40.3450 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #144: GFLOPs: 5053.4761. Time: 40.6692 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #145: GFLOPs: 3217.8592. Time: 63.8688 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #146: GFLOPs: 5071.8067. Time: 40.5222 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #147: GFLOPs: 2858.7593. Time: 71.8916 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #148: GFLOPs: 5055.0353. Time: 40.6567 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #149: GFLOPs: 5161.6454. Time: 39.8169 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #150: GFLOPs: 2928.7600. Time: 70.1733 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #151: GFLOPs: 3716.2826. Time: 55.3028 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #152: GFLOPs: 5178.4196. Time: 39.6880 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #153: GFLOPs: 3716.5722. Time: 55.2985 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #154: GFLOPs: 4962.1165. Time: 41.4180 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #155: GFLOPs: 333.5095. Time: 616.2370 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #156: GFLOPs: 5063.0544. Time: 40.5923 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #157: GFLOPs: 3288.5089. Time: 62.4967 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #158: GFLOPs: 4751.1144. Time: 43.2574 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #159: GFLOPs: 5053.3265. Time: 40.6704 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #160: GFLOPs: 5177.6870. Time: 39.6936 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #161: GFLOPs: 5119.7966. Time: 40.1424 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #162: GFLOPs: 5115.3723. Time: 40.1771 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #163: GFLOPs: 3995.9644. Time: 51.4321 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #164: GFLOPs: 5136.2293. Time: 40.0140 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #165: GFLOPs: 5135.1534. Time: 40.0223 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #166: GFLOPs: 4858.4408. Time: 42.3018 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #167: GFLOPs: 2584.7064. Time: 79.5142 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #168: GFLOPs: 5233.3619. Time: 39.2713 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #169: GFLOPs: 4962.7850. Time: 41.4124 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #170: GFLOPs: 4870.2456. Time: 42.1993 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #171: GFLOPs: 4609.7514. Time: 44.5839 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #172: GFLOPs: 5103.2352. Time: 40.2727 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #173: GFLOPs: 4561.4312. Time: 45.0562 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #174: GFLOPs: 5118.6773. Time: 40.1512 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #175: GFLOPs: 4585.9413. Time: 44.8154 us. Best GFLOPs: 5246.0141
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #176: GFLOPs: 5456.8865. Time: 37.6627 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #177: GFLOPs: 5129.1660. Time: 40.0691 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #178: GFLOPs: 3899.0327. Time: 52.7107 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #179: GFLOPs: 4823.4873. Time: 42.6084 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #180: GFLOPs: 5109.3005. Time: 40.2249 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #181: GFLOPs: 3629.6145. Time: 56.6233 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #182: GFLOPs: 2585.3678. Time: 79.4939 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #183: GFLOPs: 5131.1599. Time: 40.0535 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #184: GFLOPs: 3627.7202. Time: 56.6529 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #185: GFLOPs: 5188.2228. Time: 39.6130 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #186: GFLOPs: 4802.4275. Time: 42.7952 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #187: GFLOPs: 5034.9540. Time: 40.8188 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #188: GFLOPs: 5144.5814. Time: 39.9490 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #189: GFLOPs: 3539.1795. Time: 58.0702 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #190: GFLOPs: 2104.8411. Time: 97.6420 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #191: GFLOPs: 48.0891. Time: 4273.7493 us. Best GFLOPs: 5456.8865
2024-03-21 01:15:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_nn_conv2d_1] Trial #192: GFLOPs: 66.9493. Time: 3069.7969 us. Best GFLOPs: 5456.8865
