2024-03-21 19:46:24 [INFO] [task_scheduler.cc:160] Initializing Task #9: "fused_nn_conv2d_add_nn_relu_6"
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), "float32"), p2: T.Buffer((T.int64(1), T.int64(72), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        PaddedInput = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(60), T.int64(60)))
        DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(72), T.int64(60), T.int64(60)):
            with T.block("PaddedInput"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(2), v_i3 - T.int64(2)])
                T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3])
                PaddedInput[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(2) <= v_i2 and v_i2 < T.int64(58) and T.int64(2) <= v_i3 and v_i3 < T.int64(58), p0[v_i0, v_i1, v_i2 - T.int64(2), v_i3 - T.int64(2)], T.float32(0))
        for b, c, i, j, di, dj in T.grid(T.int64(1), T.int64(72), T.int64(28), T.int64(28), T.int64(5), T.int64(5)):
            with T.block("DepthwiseConv2d"):
                v_b, v_c, v_i, v_j, v_di, v_dj = T.axis.remap("SSSSRR", [b, c, i, j, di, dj])
                T.reads(PaddedInput[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1[v_c, T.int64(0), v_di, v_dj])
                T.writes(DepthwiseConv2d[v_b, v_c, v_i, v_j])
                with T.init():
                    DepthwiseConv2d[v_b, v_c, v_i, v_j] = T.float32(0)
                DepthwiseConv2d[v_b, v_c, v_i, v_j] = DepthwiseConv2d[v_b, v_c, v_i, v_j] + PaddedInput[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1[v_c, T.int64(0), v_di, v_dj]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(72), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(72), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), "float32"), p2: T.Buffer((T.int64(1), T.int64(72), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(60), T.int64(60)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(18), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for di_0, dj_0 in T.grid(T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(29736)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(413))
                                    v2 = T.axis.spatial(T.int64(60), b_0_c_0_i_0_j_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(413) // T.int64(59))
                                    v3 = T.axis.spatial(T.int64(60), ax0_ax1_ax2_ax3_fused % T.int64(59))
                                    T.reads(p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(2) <= v2 and v2 < T.int64(58) and T.int64(2) <= v3 and v3 < T.int64(58), p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1800)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(25))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(25) // T.int64(5))
                                    v3 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(5))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(5), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + c_3 * T.int64(2) + c_4)
                                    v_i = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + i_3 + i_4)
                                    v_j = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(5), di_0 * T.int64(5) + di_1 * T.int64(5) + di_2)
                                    v_dj = T.axis.reduce(T.int64(5), dj_0 * T.int64(5) + dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(7)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 18, 1, 2, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 1, 2, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 5])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 5, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v91 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v91)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), "float32"), p2: T.Buffer((T.int64(1), T.int64(72), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(60), T.int64(60)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(18), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for di_0_dj_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(29736)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(413))
                                    v2 = T.axis.spatial(T.int64(60), b_0_c_0_i_0_j_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(413) // T.int64(59))
                                    v3 = T.axis.spatial(T.int64(60), ax0_ax1_ax2_ax3_fused % T.int64(59))
                                    T.reads(p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(2) <= v2 and v2 < T.int64(58) and T.int64(2) <= v3 and v3 < T.int64(58), p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1800)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(25))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(25) // T.int64(5))
                                    v3 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(5))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(5), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + c_3 * T.int64(2) + c_4)
                                    v_i = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + i_3 + i_4)
                                    v_j = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(5), di_1 * T.int64(5) + di_2)
                                    v_dj = T.axis.reduce(T.int64(5), dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(7)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 18, 1, 2, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 1, 2, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 5])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 5, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
l91 = sch.fuse(l54, l60, preserve_unit_iters=True)
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v92 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v92)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), "float32"), p2: T.Buffer((T.int64(1), T.int64(72), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            DepthwiseConv2d_local = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="local")
            PaddedInput_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(60), T.int64(60)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(72), T.int64(1), T.int64(5), T.int64(5)), scope="shared")
            for b_0_c_0_i_0_j_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for b_1_c_1_i_1_j_1_fused in T.thread_binding(T.int64(18), thread="vthread.x"):
                    for b_2_c_2_i_2_j_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for di_0_dj_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(29736)):
                                with T.block("PaddedInput_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(413))
                                    v2 = T.axis.spatial(T.int64(60), b_0_c_0_i_0_j_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(413) // T.int64(59))
                                    v3 = T.axis.spatial(T.int64(60), ax0_ax1_ax2_ax3_fused % T.int64(59))
                                    T.reads(p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)])
                                    T.writes(PaddedInput_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    PaddedInput_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(2) <= v2 and v2 < T.int64(58) and T.int64(2) <= v3 and v3 < T.int64(58), p0[v0, v1, v2 - T.int64(2), v3 - T.int64(2)], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1800)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(25))
                                    v1 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v2 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(25) // T.int64(5))
                                    v3 = T.axis.spatial(T.int64(5), ax0_ax1_ax2_ax3_fused % T.int64(5))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for di_1, dj_1, b_3, c_3, i_3, j_3, di_2, dj_2, b_4, c_4, i_4, j_4 in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(5), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                                with T.block("DepthwiseConv2d"):
                                    v_b = T.axis.spatial(T.int64(1), b_3 + b_4)
                                    v_c = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + c_3 * T.int64(2) + c_4)
                                    v_i = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + i_3 + i_4)
                                    v_j = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + j_3 + j_4)
                                    v_di = T.axis.reduce(T.int64(5), di_1 * T.int64(5) + di_2)
                                    v_dj = T.axis.reduce(T.int64(5), dj_1 + dj_2)
                                    T.reads(PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj], p1_shared[v_c, T.int64(0), v_di, v_dj])
                                    T.writes(DepthwiseConv2d_local[v_b, v_c, v_i, v_j])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = T.float32(0)
                                    DepthwiseConv2d_local[v_b, v_c, v_i, v_j] = DepthwiseConv2d_local[v_b, v_c, v_i, v_j] + PaddedInput_shared[v_b, v_c, v_i * T.int64(2) + v_di, v_j * T.int64(2) + v_dj] * p1_shared[v_c, T.int64(0), v_di, v_dj]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(7)):
                            with T.block("DepthwiseConv2d_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(72), b_1_c_1_i_1_j_1_fused * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(28), b_0_c_0_i_0_j_0_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), b_2_c_2_i_2_j_2_fused * T.int64(7) + ax3)
                                T.reads(DepthwiseConv2d_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(DepthwiseConv2d_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l5, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 18, 1, 2, 2])
l26, l27, l28, l29, l30 = sch.split(loop=l6, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 1, 2, 1])
l36, l37, l38, l39, l40 = sch.split(loop=l7, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 1])
l46, l47, l48, l49, l50 = sch.split(loop=l8, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 5])
l54, l55, l56 = sch.split(loop=l9, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 5, 1])
l60, l61, l62 = sch.split(loop=l10, factors=[v57, v58, v59], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l55, l61, l19, l29, l39, l49, l56, l62, l20, l30, l40, l50)
l63 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l63, thread_axis="blockIdx.x")
l64 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l64, thread_axis="vthread.x")
l65 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l65, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b66 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b66, loop=l65, preserve_unit_loops=True, index=-1)
b67 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b67, loop=l60, preserve_unit_loops=True, index=-1)
l68, l69, l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l73, l74, l75, l76, preserve_unit_iters=True)
v78 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b67, ann_key="meta_schedule.cooperative_fetch", ann_val=v78)
b79 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b79, loop=l60, preserve_unit_loops=True, index=-1)
l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b79)
l89 = sch.fuse(l85, l86, l87, l88, preserve_unit_iters=True)
v90 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b79, ann_key="meta_schedule.cooperative_fetch", ann_val=v90)
l91 = sch.fuse(l54, l60, preserve_unit_iters=True)
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l91, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v92 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v92)
2024-03-21 19:56:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 19:56:05 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 19:56:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 510 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 1018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 1526 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 2032 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 2537 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 3045 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 3555 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 4060 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 4570 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 5069 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:14 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-03-21 19:56:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 19:56:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9993  0.9991  0.9983  0.9980  0.9975  0.9970  0.9967  0.9957  0.9943  0.9934  0.9921  0.9919  0.9916  0.9914  0.9913
[17 : 32]:	0.9912  0.9904  0.9892  0.9889  0.9874  0.9861  0.9823  0.9820  0.9818  0.9818  0.9811  0.9808  0.9798  0.9777  0.9772  0.9762
[33 : 48]:	0.9761  0.9760  0.9756  0.9750  0.9746  0.9744  0.9742  0.9696  0.9692  0.9692  0.9690  0.9687  0.9674  0.9673  0.9670  0.9668
[49 : 64]:	0.9661  0.9655  0.9650  0.9624  0.9620  0.9604  0.9600  0.9597  0.9595  0.9595  0.9582  0.9572  0.9571  0.9567  0.9563  0.9557
2024-03-21 19:56:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 19:56:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #1: GFLOPs: 355.8210. Time: 8.2494 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #2: GFLOPs: 17.7505. Time: 165.3644 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #3: GFLOPs: 124.0145. Time: 23.6690 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #4: GFLOPs: 265.0819. Time: 11.0732 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #5: GFLOPs: 78.4177. Time: 37.4315 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #6: GFLOPs: 285.5745. Time: 10.2786 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #7: GFLOPs: 215.1675. Time: 13.6419 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #8: GFLOPs: 22.2198. Time: 132.1026 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #9: GFLOPs: 65.3775. Time: 44.8977 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #10: GFLOPs: 82.6122. Time: 35.5310 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #11: GFLOPs: 76.6708. Time: 38.2844 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #12: GFLOPs: 52.3151. Time: 56.1080 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #13: GFLOPs: 71.3462. Time: 41.1416 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #14: GFLOPs: 79.3995. Time: 36.9687 us. Best GFLOPs: 355.8210
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #15: GFLOPs: 482.5350. Time: 6.0831 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #16: GFLOPs: 253.3063. Time: 11.5879 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #17: GFLOPs: 191.9204. Time: 15.2943 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #18: GFLOPs: 43.9781. Time: 66.7445 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #19: GFLOPs: 237.5055. Time: 12.3589 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #20: GFLOPs: 205.3439. Time: 14.2945 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #21: GFLOPs: 157.0037. Time: 18.6957 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #22: GFLOPs: 203.8542. Time: 14.3990 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #23: GFLOPs: 91.7257. Time: 32.0008 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #24: GFLOPs: 268.5073. Time: 10.9319 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #25: GFLOPs: 161.7314. Time: 18.1492 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #26: GFLOPs: 56.7149. Time: 51.7553 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #27: GFLOPs: 21.7187. Time: 135.1507 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #28: GFLOPs: 89.8002. Time: 32.6870 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #29: GFLOPs: 386.0505. Time: 7.6034 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #30: GFLOPs: 261.8615. Time: 11.2093 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #31: GFLOPs: 207.2558. Time: 14.1627 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #32: GFLOPs: 170.8162. Time: 17.1839 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #33: GFLOPs: 435.8881. Time: 6.7341 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #34: GFLOPs: 112.3307. Time: 26.1308 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #35: GFLOPs: 51.3668. Time: 57.1439 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #36: GFLOPs: 62.1608. Time: 47.2210 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #37: GFLOPs: 115.2923. Time: 25.4596 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #38: GFLOPs: 117.2880. Time: 25.0264 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #39: GFLOPs: 55.5656. Time: 52.8258 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #40: GFLOPs: 132.1723. Time: 22.2081 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #41: GFLOPs: 26.9885. Time: 108.7610 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #42: GFLOPs: 389.3259. Time: 7.5394 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #43: GFLOPs: 169.0831. Time: 17.3601 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #44: GFLOPs: 48.1740. Time: 60.9311 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #45: GFLOPs: 202.5570. Time: 14.4912 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #46: GFLOPs: 78.1235. Time: 37.5725 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #47: GFLOPs: 137.4664. Time: 21.3528 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #48: GFLOPs: 150.9380. Time: 19.4470 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #49: GFLOPs: 253.2543. Time: 11.5903 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #50: GFLOPs: 87.6978. Time: 33.4706 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #51: GFLOPs: 204.0386. Time: 14.3860 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #52: GFLOPs: 239.2502. Time: 12.2687 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #53: GFLOPs: 58.2308. Time: 50.4079 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #54: GFLOPs: 105.2164. Time: 27.8977 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #55: GFLOPs: 272.8047. Time: 10.7597 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #56: GFLOPs: 56.3874. Time: 52.0559 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #57: GFLOPs: 219.6250. Time: 13.3650 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #58: GFLOPs: 84.8995. Time: 34.5738 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #59: GFLOPs: 118.3608. Time: 24.7996 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #60: GFLOPs: 265.6636. Time: 11.0489 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #61: GFLOPs: 343.0253. Time: 8.5571 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #62: GFLOPs: 70.3194. Time: 41.7424 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #63: GFLOPs: 12.9283. Time: 227.0445 us. Best GFLOPs: 482.5350
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #64: GFLOPs: 60.2175. Time: 48.7449 us. Best GFLOPs: 482.5350
2024-03-21 20:54:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:54:26 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 20:54:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 446 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 890 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 1335 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 1780 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 2224 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 2672 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 3113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 3557 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 4000 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 4445 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 4891 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 5327 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 5770 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:38 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-03-21 20:54:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:49 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ecaa2778)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c2658)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7cd2c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed802748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed7ab3f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed84abe8)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7c2558)]: 0 failure(s)
2024-03-21 20:54:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0916  0.9963  0.9791  0.9791  0.9661  0.9661  0.9606  0.9606  0.9420  0.9410  0.9408  0.9370  0.9296  0.9296  0.9274  0.9250
[17 : 32]:	0.9250  0.9250  0.9235  0.9232  0.9212  0.9209  0.9209  0.9071  0.9064  0.9064  0.9061  0.9059  0.8999  0.8976  0.8976  0.8927
[33 : 48]:	0.8915  0.8835  0.8783  0.8736  0.8720  0.8712  0.8679  0.8661  0.8654  0.8634  0.8634  0.8603  0.8548  0.8471  0.8458  0.8438
[49 : 64]:	0.8438  0.8403  0.8361  0.8361  0.8334  0.8300  0.8297  0.8273  0.8225  0.8158  0.8126  0.8086  0.8071  0.8040  0.8020  0.8020
2024-03-21 20:54:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:54:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #65: GFLOPs: 431.0812. Time: 6.8091 us. Best GFLOPs: 482.5350
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #66: GFLOPs: 485.2922. Time: 6.0485 us. Best GFLOPs: 485.2922
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #67: GFLOPs: 493.1856. Time: 5.9517 us. Best GFLOPs: 493.1856
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #68: GFLOPs: 489.8031. Time: 5.9928 us. Best GFLOPs: 493.1856
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #69: GFLOPs: 626.0877. Time: 4.6883 us. Best GFLOPs: 626.0877
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #70: GFLOPs: 626.0278. Time: 4.6888 us. Best GFLOPs: 626.0877
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #71: GFLOPs: 482.2184. Time: 6.0871 us. Best GFLOPs: 626.0877
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #72: GFLOPs: 482.2256. Time: 6.0870 us. Best GFLOPs: 626.0877
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #73: GFLOPs: 810.6172. Time: 3.6211 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #74: GFLOPs: 504.7288. Time: 5.8156 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #75: GFLOPs: 619.0633. Time: 4.7415 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #76: GFLOPs: 605.4989. Time: 4.8477 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #77: GFLOPs: 533.7613. Time: 5.4993 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #78: GFLOPs: 533.8088. Time: 5.4988 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #79: GFLOPs: 704.2962. Time: 4.1677 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #80: GFLOPs: 706.2009. Time: 4.1565 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #81: GFLOPs: 706.1955. Time: 4.1565 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #82: GFLOPs: 706.3556. Time: 4.1556 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #83: GFLOPs: 704.3242. Time: 4.1675 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #84: GFLOPs: 548.1345. Time: 5.3551 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #85: GFLOPs: 706.3591. Time: 4.1555 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #86: GFLOPs: 547.1641. Time: 5.3646 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #87: GFLOPs: 547.1142. Time: 5.3651 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #88: GFLOPs: 605.6823. Time: 4.8463 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #89: GFLOPs: 507.0669. Time: 5.7888 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #90: GFLOPs: 507.0123. Time: 5.7894 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #91: GFLOPs: 383.2683. Time: 7.6586 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #92: GFLOPs: 743.2331. Time: 3.9494 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #93: GFLOPs: 704.3871. Time: 4.1672 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #94: GFLOPs: 706.4496. Time: 4.1550 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #95: GFLOPs: 706.4672. Time: 4.1549 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #96: GFLOPs: 447.1227. Time: 6.5649 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #97: GFLOPs: 450.6206. Time: 6.5139 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #98: GFLOPs: 702.4305. Time: 4.1788 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #99: GFLOPs: 805.7490. Time: 3.6429 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #100: GFLOPs: 438.3886. Time: 6.6956 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #101: GFLOPs: 441.3261. Time: 6.6511 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #102: GFLOPs: 437.8185. Time: 6.7044 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #103: GFLOPs: 423.7340. Time: 6.9272 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #104: GFLOPs: 681.5346. Time: 4.3069 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #105: GFLOPs: 459.6202. Time: 6.3864 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #106: GFLOPs: 658.3555. Time: 4.4585 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #107: GFLOPs: 658.3978. Time: 4.4582 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #108: GFLOPs: 136.8948. Time: 21.4420 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #109: GFLOPs: 544.5952. Time: 5.3899 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #110: GFLOPs: 496.3935. Time: 5.9132 us. Best GFLOPs: 810.6172
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #111: GFLOPs: 835.1273. Time: 3.5148 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #112: GFLOPs: 504.4977. Time: 5.8183 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #113: GFLOPs: 504.4897. Time: 5.8183 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #114: GFLOPs: 684.4945. Time: 4.2883 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #115: GFLOPs: 565.1187. Time: 5.1941 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #116: GFLOPs: 565.0886. Time: 5.1944 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #117: GFLOPs: 487.5220. Time: 6.0208 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #118: GFLOPs: 556.2454. Time: 5.2770 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #119: GFLOPs: 478.8749. Time: 6.1296 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #120: GFLOPs: 387.4459. Time: 7.5760 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #121: GFLOPs: 136.9803. Time: 21.4286 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #122: GFLOPs: 566.8753. Time: 5.1780 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #123: GFLOPs: 445.1363. Time: 6.5942 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #124: GFLOPs: 666.4400. Time: 4.4044 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #125: GFLOPs: 659.9162. Time: 4.4480 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #126: GFLOPs: 174.5743. Time: 16.8140 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #127: GFLOPs: 187.2564. Time: 15.6753 us. Best GFLOPs: 835.1273
2024-03-21 20:55:39 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_conv2d_add_nn_relu_6] Trial #128: GFLOPs: 111.7178. Time: 26.2742 us. Best GFLOPs: 835.1273
