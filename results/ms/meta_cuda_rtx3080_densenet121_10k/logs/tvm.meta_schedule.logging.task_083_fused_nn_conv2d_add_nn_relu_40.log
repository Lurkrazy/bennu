2024-03-20 22:52:35 [INFO] [task_scheduler.cc:160] Initializing Task #83: "fused_nn_conv2d_add_nn_relu_40"
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(480), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(480), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(94080)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(480), rc_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(15360)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(120))
                                    v1 = T.axis.spatial(T.int64(480), rc_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused % T.int64(120))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(480), rc_0 * T.int64(120) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 4, 16, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 14, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 6, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(94080)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(15360)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(120))
                                    v1 = T.axis.spatial(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + ax0_ax1_ax2_ax3_fused % T.int64(120))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 4, 16, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 14, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 6, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 22:52:35 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(480), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(480), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(224), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(94080)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(15360)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(120))
                                    v1 = T.axis.spatial(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + ax0_ax1_ax2_ax3_fused % T.int64(120))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(480), rc_0_ry_0_rx_0_fused * T.int64(120) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(4) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(4) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 4, 16, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 14, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 6, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-20 23:35:16 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-20 23:35:16 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-20 23:35:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 486 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 976 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 1459 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:18 [INFO] [evolutionary_search.cc:723] Sampled 77 candidate(s)
2024-03-20 23:35:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-20 23:35:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9995  0.9986  0.9986  0.9979  0.9966  0.9963  0.9963  0.9959  0.9957  0.9954  0.9949  0.9935  0.9933  0.9921  0.9916
[17 : 32]:	0.9916  0.9903  0.9902  0.9902  0.9901  0.9894  0.9889  0.9886  0.9886  0.9883  0.9868  0.9866  0.9856  0.9855  0.9850  0.9849
[33 : 48]:	0.9847  0.9833  0.9817  0.9813  0.9801  0.9774  0.9773  0.9765  0.9765  0.9760  0.9749  0.9746  0.9743  0.9741  0.9738  0.9733
[49 : 64]:	0.9729  0.9701  0.9697  0.9689  0.9676  0.9676  0.9656  0.9645  0.9633  0.9627  0.9600  0.9595  0.9595  0.9580  0.9579  0.9571
2024-03-20 23:35:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-20 23:35:25 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #1: GFLOPs: 1422.5127. Time: 67.8649 us. Best GFLOPs: 1422.5127
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #2: GFLOPs: 4947.4280. Time: 19.5129 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #3: GFLOPs: 3678.9039. Time: 26.2411 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #4: GFLOPs: 15.0554. Time: 6412.2238 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #5: GFLOPs: 297.8422. Time: 324.1267 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #6: GFLOPs: 4455.5375. Time: 21.6671 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #7: GFLOPs: 1742.2582. Time: 55.4101 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #8: GFLOPs: 110.3416. Time: 874.9070 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #9: GFLOPs: 1519.3664. Time: 63.5387 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #10: GFLOPs: 217.2822. Time: 444.3006 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #11: GFLOPs: 620.1497. Time: 155.6699 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #12: GFLOPs: 49.4837. Time: 1950.9163 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #13: GFLOPs: 45.3855. Time: 2127.0793 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #14: GFLOPs: 533.6094. Time: 180.9163 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #15: GFLOPs: 782.9973. Time: 123.2937 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #16: GFLOPs: 141.4371. Time: 682.5552 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #17: GFLOPs: 522.4611. Time: 184.7767 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #18: GFLOPs: 1629.7696. Time: 59.2345 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #19: GFLOPs: 47.1558. Time: 2047.2267 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #20: GFLOPs: 45.2759. Time: 2132.2294 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #21: GFLOPs: 25.6991. Time: 3756.4917 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #22: GFLOPs: 102.3893. Time: 942.8585 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #23: GFLOPs: 112.6047. Time: 857.3229 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #24: GFLOPs: 3666.2888. Time: 26.3314 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #25: GFLOPs: 153.8745. Time: 627.3856 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #26: GFLOPs: 2691.8670. Time: 35.8631 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #27: GFLOPs: 193.3114. Time: 499.3945 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #28: GFLOPs: 548.3011. Time: 176.0686 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #29: GFLOPs: 556.0321. Time: 173.6206 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #30: GFLOPs: 896.4354. Time: 107.6917 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #31: GFLOPs: 17.1513. Time: 5628.6434 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #32: GFLOPs: 1329.6568. Time: 72.6042 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #33: GFLOPs: 2910.4269. Time: 33.1699 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #34: GFLOPs: 42.6893. Time: 2261.4244 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #35: GFLOPs: 599.8619. Time: 160.9347 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #36: GFLOPs: 1767.9371. Time: 54.6052 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #37: GFLOPs: 299.5717. Time: 322.2555 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #38: GFLOPs: 284.4671. Time: 339.3665 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #39: GFLOPs: 73.8464. Time: 1307.2889 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #40: GFLOPs: 63.1530. Time: 1528.6458 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #41: GFLOPs: 310.1875. Time: 311.2267 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #42: GFLOPs: 72.5611. Time: 1330.4454 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #43: GFLOPs: 22.4018. Time: 4309.4187 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #44: GFLOPs: 775.5900. Time: 124.4712 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #45: GFLOPs: 138.0733. Time: 699.1837 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #46: GFLOPs: 1296.9767. Time: 74.4336 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #47: GFLOPs: 1110.7306. Time: 86.9145 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #48: GFLOPs: 4846.1077. Time: 19.9209 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #49: GFLOPs: 256.2840. Time: 376.6861 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #50: GFLOPs: 2910.0016. Time: 33.1748 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #51: GFLOPs: 967.9853. Time: 99.7315 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #52: GFLOPs: 2085.3224. Time: 46.2943 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #53: GFLOPs: 512.0566. Time: 188.5312 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #54: GFLOPs: 3604.6558. Time: 26.7816 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #55: GFLOPs: 1702.0038. Time: 56.7206 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #56: GFLOPs: 890.8244. Time: 108.3700 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #57: GFLOPs: 1263.1840. Time: 76.4248 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #58: GFLOPs: 511.0355. Time: 188.9079 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #59: GFLOPs: 54.2492. Time: 1779.5413 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #60: GFLOPs: 5.4452. Time: 17729.0242 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #61: GFLOPs: 22.4246. Time: 4305.0241 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #62: GFLOPs: 2252.4962. Time: 42.8585 us. Best GFLOPs: 4947.4280
2024-03-21 00:12:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #63: GFLOPs: 180.3121. Time: 535.3975 us. Best GFLOPs: 4947.4280
2024-03-21 01:38:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 01:38:11 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-03-21 01:38:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 429 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 861 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 1287 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:13 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-03-21 01:38:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5729a4ead698)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5729a6b50798)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5729a23c2018)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5729a6b545d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5729a4481298)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x57299e7c0098)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5729a6b50698)]: 0 failure(s)
2024-03-21 01:38:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6317  1.5615  1.5251  1.4327  1.3906  1.3804  1.3263  1.2856  1.2816  1.2798  1.2772  1.2674  1.2479  1.2424  1.2307  1.2300
[17 : 32]:	1.2282  1.2182  1.2171  1.2146  1.1719  1.1704  1.1626  1.1605  1.1288  1.1264  1.1118  1.1021  1.0998  1.0977  1.0945  1.0912
[33 : 48]:	1.0910  1.0900  1.0853  1.0851  1.0845  1.0811  1.0811  1.0721  1.0708  1.0694  1.0692  1.0687  1.0634  1.0630  1.0629  1.0629
[49 : 64]:	1.0627  1.0626  1.0623  1.0621  1.0615  1.0609  1.0596  1.0588  1.0579  1.0545  1.0497  1.0490  1.0467  1.0454  1.0410  1.0352
2024-03-21 01:38:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 01:38:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #64: GFLOPs: 5453.6866. Time: 17.7015 us. Best GFLOPs: 5453.6866
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #65: GFLOPs: 5535.4832. Time: 17.4400 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #66: GFLOPs: 4991.8255. Time: 19.3393 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #67: GFLOPs: 3708.5051. Time: 26.0317 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #68: GFLOPs: 4365.5277. Time: 22.1138 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #69: GFLOPs: 3545.1993. Time: 27.2308 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #70: GFLOPs: 3525.0990. Time: 27.3861 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #71: GFLOPs: 4449.2818. Time: 21.6976 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #72: GFLOPs: 4886.3614. Time: 19.7568 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #73: GFLOPs: 4618.0883. Time: 20.9045 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #74: GFLOPs: 4622.4971. Time: 20.8845 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #75: GFLOPs: 4563.6788. Time: 21.1537 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #76: GFLOPs: 2261.4085. Time: 42.6896 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #77: GFLOPs: 4592.6106. Time: 21.0204 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #78: GFLOPs: 3867.7300. Time: 24.9600 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #79: GFLOPs: 3918.9771. Time: 24.6336 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #80: GFLOPs: 4545.1862. Time: 21.2398 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #81: GFLOPs: 3578.9677. Time: 26.9739 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #82: GFLOPs: 3760.1327. Time: 25.6743 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #83: GFLOPs: 4339.8583. Time: 22.2446 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #84: GFLOPs: 3776.1844. Time: 25.5651 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #85: GFLOPs: 4341.0528. Time: 22.2385 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #86: GFLOPs: 3744.6768. Time: 25.7802 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #87: GFLOPs: 4367.5767. Time: 22.1035 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #88: GFLOPs: 3695.5059. Time: 26.1232 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #89: GFLOPs: 3408.0979. Time: 28.3262 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #90: GFLOPs: 5333.1831. Time: 18.1015 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #91: GFLOPs: 3629.2115. Time: 26.6004 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #92: GFLOPs: 3331.3474. Time: 28.9789 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #93: GFLOPs: 3082.7878. Time: 31.3154 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #94: GFLOPs: 3803.9133. Time: 25.3788 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #95: GFLOPs: 3633.2298. Time: 26.5710 us. Best GFLOPs: 5535.4832
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #96: GFLOPs: 5817.4106. Time: 16.5948 us. Best GFLOPs: 5817.4106
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #97: GFLOPs: 5679.5655. Time: 16.9975 us. Best GFLOPs: 5817.4106
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #98: GFLOPs: 3091.3626. Time: 31.2285 us. Best GFLOPs: 5817.4106
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #99: GFLOPs: 5134.5186. Time: 18.8019 us. Best GFLOPs: 5817.4106
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #100: GFLOPs: 5795.2982. Time: 16.6581 us. Best GFLOPs: 5817.4106
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #101: GFLOPs: 5847.1380. Time: 16.5104 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #102: GFLOPs: 5789.2402. Time: 16.6755 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #103: GFLOPs: 5745.1984. Time: 16.8034 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #104: GFLOPs: 5491.3669. Time: 17.5801 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #105: GFLOPs: 5023.3035. Time: 19.2182 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #106: GFLOPs: 4270.7980. Time: 22.6044 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #107: GFLOPs: 5094.8032. Time: 18.9485 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #108: GFLOPs: 5614.7961. Time: 17.1936 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #109: GFLOPs: 3075.5816. Time: 31.3887 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #110: GFLOPs: 3157.3879. Time: 30.5755 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #111: GFLOPs: 3341.9853. Time: 28.8866 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #112: GFLOPs: 3744.3179. Time: 25.7827 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #113: GFLOPs: 3093.3778. Time: 31.2082 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #114: GFLOPs: 5062.3913. Time: 19.0698 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #115: GFLOPs: 4378.6930. Time: 22.0474 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #116: GFLOPs: 3728.0502. Time: 25.8952 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #117: GFLOPs: 4890.3216. Time: 19.7408 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #118: GFLOPs: 4433.6496. Time: 21.7741 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #119: GFLOPs: 4821.2147. Time: 20.0237 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #120: GFLOPs: 5514.4242. Time: 17.5066 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #121: GFLOPs: 5490.1752. Time: 17.5839 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #122: GFLOPs: 4923.8772. Time: 19.6062 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #123: GFLOPs: 3010.4611. Time: 32.0677 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #124: GFLOPs: 4796.0480. Time: 20.1288 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #125: GFLOPs: 63.7521. Time: 1514.2820 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #126: GFLOPs: 1172.7466. Time: 82.3184 us. Best GFLOPs: 5847.1380
2024-03-21 01:39:31 [INFO] [task_scheduler.cc:131] [Task #83: fused_nn_conv2d_add_nn_relu_40] Trial #127: GFLOPs: 774.6530. Time: 124.6218 us. Best GFLOPs: 5847.1380
