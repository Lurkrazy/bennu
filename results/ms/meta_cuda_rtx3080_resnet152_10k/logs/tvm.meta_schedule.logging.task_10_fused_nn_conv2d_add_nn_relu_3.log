2024-03-22 04:15:25 [INFO] [task_scheduler.cc:160] Initializing Task #10: "fused_nn_conv2d_add_nn_relu_3"
2024-03-22 04:15:25 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(256), T.int64(56), T.int64(56)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56), T.int64(256), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-22 04:15:25 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-22 04:15:25 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(8), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(256), rc_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(56))
                                    v3 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(256), rc_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(256), rc_0 * T.int64(32) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 2, 1, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 2, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-22 04:15:25 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(56))
                                    v3 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 2, 1, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 2, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-22 04:15:25 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(56), T.int64(56)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(56))
                                    v3 = T.axis.spatial(T.int64(56), ax0_ax1_ax2_ax3_fused % T.int64(56))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(32))
                                    v1 = T.axis.spatial(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(32))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(256), rc_0_ry_0_rx_0_fused * T.int64(32) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(4)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(56), nn_2_ff_2_yy_2_xx_2_fused * T.int64(14) + ax2)
                                v3 = T.axis.spatial(T.int64(56), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(4) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 2, 1, 2, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 4, 7, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 2, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-22 04:28:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 04:28:08 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-22 04:28:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 486 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 977 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 1468 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:10 [INFO] [evolutionary_search.cc:723] Sampled 68 candidate(s)
2024-03-22 04:28:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 04:28:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9998  0.9997  0.9982  0.9977  0.9951  0.9917  0.9914  0.9913  0.9911  0.9908  0.9900  0.9898  0.9890  0.9883  0.9866  0.9861
[17 : 32]:	0.9860  0.9857  0.9855  0.9847  0.9841  0.9839  0.9832  0.9802  0.9793  0.9793  0.9790  0.9785  0.9783  0.9780  0.9770  0.9763
[33 : 48]:	0.9760  0.9754  0.9749  0.9741  0.9737  0.9735  0.9731  0.9726  0.9725  0.9721  0.9719  0.9703  0.9701  0.9701  0.9696  0.9688
[49 : 64]:	0.9688  0.9670  0.9669  0.9666  0.9655  0.9654  0.9651  0.9645  0.9644  0.9625  0.9618  0.9617  0.9601  0.9599  0.9589  0.9586
2024-03-22 04:28:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 04:28:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #1: GFLOPs: 515.0559. Time: 400.5851 us. Best GFLOPs: 515.0559
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #2: GFLOPs: 153.9738. Time: 1339.9924 us. Best GFLOPs: 515.0559
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #3: GFLOPs: 94.4757. Time: 2183.8803 us. Best GFLOPs: 515.0559
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #4: GFLOPs: 2220.2803. Time: 92.9269 us. Best GFLOPs: 2220.2803
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #5: GFLOPs: 347.8402. Time: 593.1565 us. Best GFLOPs: 2220.2803
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #6: GFLOPs: 3909.4006. Time: 52.7763 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #7: GFLOPs: 403.2689. Time: 511.6281 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #8: GFLOPs: 1635.1783. Time: 126.1781 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #9: GFLOPs: 625.7510. Time: 329.7217 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #10: GFLOPs: 78.1049. Time: 2641.6236 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #11: GFLOPs: 3398.4709. Time: 60.7107 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #12: GFLOPs: 1937.7074. Time: 106.4783 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #13: GFLOPs: 3403.1660. Time: 60.6270 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #14: GFLOPs: 2406.8808. Time: 85.7224 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #15: GFLOPs: 3027.9224. Time: 68.1404 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #16: GFLOPs: 783.1123. Time: 263.4663 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #17: GFLOPs: 1815.3123. Time: 113.6574 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #18: GFLOPs: 514.2935. Time: 401.1789 us. Best GFLOPs: 3909.4006
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #19: GFLOPs: 4613.6375. Time: 44.7204 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #20: GFLOPs: 627.4019. Time: 328.8542 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #21: GFLOPs: 2563.5301. Time: 80.4842 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #22: GFLOPs: 129.3896. Time: 1594.5925 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #23: GFLOPs: 1775.4237. Time: 116.2110 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #24: GFLOPs: 2946.6086. Time: 70.0207 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #25: GFLOPs: 1286.7815. Time: 160.3409 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #26: GFLOPs: 252.3550. Time: 817.5932 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #27: GFLOPs: 918.7281. Time: 224.5754 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #28: GFLOPs: 830.2334. Time: 248.5129 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #29: GFLOPs: 3268.5827. Time: 63.1233 us. Best GFLOPs: 4613.6375
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #30: GFLOPs: 4712.9390. Time: 43.7781 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #31: GFLOPs: 398.8317. Time: 517.3202 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #32: GFLOPs: 136.2248. Time: 1514.5829 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #33: GFLOPs: 36.7642. Time: 5612.0889 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #34: GFLOPs: 3407.6837. Time: 60.5466 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #35: GFLOPs: 1223.1151. Time: 168.6871 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #36: GFLOPs: 4335.6384. Time: 47.5879 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #37: GFLOPs: 991.8954. Time: 208.0095 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #38: GFLOPs: 150.9121. Time: 1367.1781 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #39: GFLOPs: 3780.6048. Time: 54.5743 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #40: GFLOPs: 3852.9985. Time: 53.5489 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #41: GFLOPs: 63.3437. Time: 3257.2088 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #42: GFLOPs: 3381.3284. Time: 61.0185 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #43: GFLOPs: 139.7909. Time: 1475.9454 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #44: GFLOPs: 77.2304. Time: 2671.5351 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #45: GFLOPs: 2814.4137. Time: 73.3097 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #46: GFLOPs: 1730.1838. Time: 119.2496 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #47: GFLOPs: 116.1432. Time: 1776.4603 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #48: GFLOPs: 1791.7744. Time: 115.1505 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #49: GFLOPs: 1551.6099. Time: 132.9740 us. Best GFLOPs: 4712.9390
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #50: GFLOPs: 7312.7496. Time: 28.2142 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #51: GFLOPs: 57.8793. Time: 3564.7207 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #52: GFLOPs: 2434.7567. Time: 84.7410 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #53: GFLOPs: 1776.9849. Time: 116.1089 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #54: GFLOPs: 5856.9560. Time: 35.2271 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #55: GFLOPs: 251.9079. Time: 819.0441 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #56: GFLOPs: 47.0611. Time: 4384.1705 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #57: GFLOPs: 39.5102. Time: 5222.0322 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #58: GFLOPs: 203.1667. Time: 1015.5391 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #59: GFLOPs: 6014.7009. Time: 34.3032 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #60: GFLOPs: 1610.0668. Time: 128.1461 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #61: GFLOPs: 467.7860. Time: 441.0643 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #62: GFLOPs: 3794.7050. Time: 54.3715 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #63: GFLOPs: 1658.4329. Time: 124.4088 us. Best GFLOPs: 7312.7496
2024-03-22 04:47:07 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #64: GFLOPs: 138.9953. Time: 1484.3934 us. Best GFLOPs: 7312.7496
2024-03-22 06:26:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-22 06:26:15 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-22 06:26:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 433 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 856 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 1286 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:17 [INFO] [evolutionary_search.cc:723] Sampled 58 candidate(s)
2024-03-22 06:26:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x64ac5442cd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x64ac67763688)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x64ac53cd1668)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x64ac57286358)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x64ac62e8afd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x64ac53d1a938)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x64ac55823578)]: 0 failure(s)
2024-03-22 06:26:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5794  1.5291  1.3831  1.3375  1.2935  1.2906  1.2881  1.2631  1.2401  1.2015  1.1972  1.1911  1.1755  1.1386  1.1370  1.1026
[17 : 32]:	1.1006  1.0918  1.0897  1.0787  1.0772  1.0453  1.0447  1.0264  1.0254  1.0239  1.0179  1.0100  1.0094  1.0039  0.9922  0.9913
[33 : 48]:	0.9846  0.9724  0.9679  0.9652  0.9647  0.9633  0.9576  0.9547  0.9540  0.9481  0.9470  0.9458  0.9455  0.9449  0.9434  0.9405
[49 : 64]:	0.9383  0.9373  0.9366  0.9353  0.9340  0.9319  0.9287  0.9260  0.9228  0.9186  0.9167  0.9167  0.9102  0.9089  0.9082  0.9044
2024-03-22 06:26:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-22 06:26:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #65: GFLOPs: 1698.0985. Time: 121.5028 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #66: GFLOPs: 7029.2871. Time: 29.3520 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #67: GFLOPs: 1744.1327. Time: 118.2959 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #68: GFLOPs: 2660.1746. Time: 77.5602 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #69: GFLOPs: 4433.8482. Time: 46.5338 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #70: GFLOPs: 4015.5395. Time: 51.3813 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #71: GFLOPs: 6498.2020. Time: 31.7509 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #72: GFLOPs: 4426.6580. Time: 46.6094 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #73: GFLOPs: 6036.5483. Time: 34.1791 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #74: GFLOPs: 4278.4844. Time: 48.2236 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #75: GFLOPs: 4021.9235. Time: 51.2998 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #76: GFLOPs: 4000.1924. Time: 51.5784 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #77: GFLOPs: 3473.2972. Time: 59.4028 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #78: GFLOPs: 5911.6589. Time: 34.9012 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #79: GFLOPs: 5924.0037. Time: 34.8284 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #80: GFLOPs: 5866.5727. Time: 35.1694 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #81: GFLOPs: 5946.4369. Time: 34.6970 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #82: GFLOPs: 6103.0215. Time: 33.8068 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #83: GFLOPs: 6293.8264. Time: 32.7819 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #84: GFLOPs: 3356.9019. Time: 61.4625 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #85: GFLOPs: 387.3825. Time: 532.6099 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #86: GFLOPs: 4543.8432. Time: 45.4073 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #87: GFLOPs: 4274.5426. Time: 48.2680 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #88: GFLOPs: 4442.5238. Time: 46.4429 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #89: GFLOPs: 5644.8415. Time: 36.5508 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #90: GFLOPs: 4540.8281. Time: 45.4375 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #91: GFLOPs: 4344.2776. Time: 47.4932 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #92: GFLOPs: 2670.1881. Time: 77.2694 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #93: GFLOPs: 5864.6646. Time: 35.1808 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #94: GFLOPs: 4520.9101. Time: 45.6376 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #95: GFLOPs: 2936.5834. Time: 70.2598 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #96: GFLOPs: 4334.1490. Time: 47.6042 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #97: GFLOPs: 4312.9134. Time: 47.8386 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #98: GFLOPs: 7204.1243. Time: 28.6397 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #99: GFLOPs: 7211.3141. Time: 28.6111 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #100: GFLOPs: 2640.6234. Time: 78.1345 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #101: GFLOPs: 2667.7757. Time: 77.3392 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #102: GFLOPs: 5441.1177. Time: 37.9194 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #103: GFLOPs: 7099.6728. Time: 29.0610 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #104: GFLOPs: 2619.3282. Time: 78.7697 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #105: GFLOPs: 7178.5336. Time: 28.7418 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #106: GFLOPs: 2625.3242. Time: 78.5898 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #107: GFLOPs: 6876.7983. Time: 30.0029 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #108: GFLOPs: 7250.7036. Time: 28.4557 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #109: GFLOPs: 4107.8368. Time: 50.2269 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #110: GFLOPs: 7232.9309. Time: 28.5256 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #111: GFLOPs: 4070.4647. Time: 50.6880 us. Best GFLOPs: 7312.7496
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #112: GFLOPs: 7469.7047. Time: 27.6214 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #113: GFLOPs: 4322.2380. Time: 47.7354 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #114: GFLOPs: 3996.4629. Time: 51.6266 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #115: GFLOPs: 7120.2172. Time: 28.9772 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #116: GFLOPs: 2761.9855. Time: 74.7012 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #117: GFLOPs: 4002.0756. Time: 51.5542 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #118: GFLOPs: 1683.7138. Time: 122.5408 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #119: GFLOPs: 3314.1158. Time: 62.2560 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #120: GFLOPs: 4248.8085. Time: 48.5604 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #121: GFLOPs: 2610.8355. Time: 79.0259 us. Best GFLOPs: 7469.7047
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #122: GFLOPs: 8030.3566. Time: 25.6930 us. Best GFLOPs: 8030.3566
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #123: GFLOPs: 4302.5338. Time: 47.9540 us. Best GFLOPs: 8030.3566
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #124: GFLOPs: 3907.1671. Time: 52.8065 us. Best GFLOPs: 8030.3566
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #125: GFLOPs: 8214.5121. Time: 25.1170 us. Best GFLOPs: 8214.5121
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #126: GFLOPs: 685.9744. Time: 300.7746 us. Best GFLOPs: 8214.5121
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #127: GFLOPs: 3337.8058. Time: 61.8142 us. Best GFLOPs: 8214.5121
2024-03-22 06:27:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_nn_relu_3] Trial #128: GFLOPs: 3743.8384. Time: 55.1102 us. Best GFLOPs: 8214.5121
