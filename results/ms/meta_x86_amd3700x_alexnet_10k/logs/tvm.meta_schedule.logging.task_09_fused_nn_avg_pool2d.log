2024-03-24 09:01:37 [INFO] [task_scheduler.cc:160] Initializing Task #9: "fused_nn_avg_pool2d"
2024-03-24 09:01:37 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pool_sum = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)))
        for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4), T.int64(1), T.int64(1)):
            with T.block("pool_sum"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                with T.init():
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)):
            with T.block("pool_avg"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.block_attr({"schedule_rule": "meta_schedule.pool_avg"})
                pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(5) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(5) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
2024-03-24 09:01:37 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-03-24 09:01:37 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 128, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            pool_sum = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)))
            for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4), T.int64(1), T.int64(1)):
                with T.block("pool_sum"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                    T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                    T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    with T.init():
                        pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(6), T.int64(6), T.int64(4)):
                with T.block("pool_avg"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(5) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(5) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
b0 = sch.get_block(name="pool_sum", func_name="main")
b1 = sch.get_block(name="pool_avg", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=128)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l4, preserve_unit_loops=True, index=-1)
2024-03-24 09:06:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-24 09:06:54 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-24 09:06:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x63f1dcd75218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x63f1dc827d48)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x63f1dc71c2a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x63f1dce5a5a8)]: 0 failure(s)
2024-03-24 09:06:54 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-03-24 09:06:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x63f1dcd75218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x63f1dc827d48)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x63f1dc71c2a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x63f1dce5a5a8)]: 0 failure(s)
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x63f1dcd75218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x63f1dc827d48)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x63f1dc71c2a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x63f1dce5a5a8)]: 0 failure(s)
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x63f1dcd75218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x63f1dc827d48)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x63f1dc71c2a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x63f1dce5a5a8)]: 0 failure(s)
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x63f1dcd75218)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x63f1dc827d48)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x63f1dc71c2a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x63f1dce5a5a8)]: 0 failure(s)
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:649] Scores of the best 36 candidates:
[1 : 16]:	0.9995  0.9461  0.9080  0.9068  0.8806  0.8805  0.8543  0.7962  0.7951  0.7941  0.7312  0.7223  0.7216  0.6952  0.6655  0.6620
[17 : 32]:	0.6606  0.6221  0.4641  0.3459  0.3332  0.3192  0.3130  0.2740  0.2730  0.2677  0.2616  0.2506  0.2364  0.2127  0.2087  0.2066
[33 : 36]:	0.1991  0.1945  0.0607  0.0320
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:727] Got 36 candidate(s) with evolutionary search
2024-03-24 09:06:55 [INFO] [evolutionary_search.cc:730] Sending 36 candidates(s) for measurement
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #1: GFLOPs: 41.7916. Time: 3.5284 us. Best GFLOPs: 41.7916
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #2: GFLOPs: 44.3328. Time: 3.3261 us. Best GFLOPs: 44.3328
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #3: GFLOPs: 43.0206. Time: 3.4276 us. Best GFLOPs: 44.3328
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #4: GFLOPs: 43.5464. Time: 3.3862 us. Best GFLOPs: 44.3328
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #5: GFLOPs: 43.7911. Time: 3.3673 us. Best GFLOPs: 44.3328
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #6: GFLOPs: 17.1958. Time: 8.5751 us. Best GFLOPs: 44.3328
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #7: GFLOPs: 44.6573. Time: 3.3019 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #8: GFLOPs: 43.6584. Time: 3.3775 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #9: GFLOPs: 43.6600. Time: 3.3774 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #10: GFLOPs: 17.0822. Time: 8.6322 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #11: GFLOPs: 40.7962. Time: 3.6145 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #12: GFLOPs: 43.7164. Time: 3.3730 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #13: GFLOPs: 44.0810. Time: 3.3451 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #14: GFLOPs: 43.5095. Time: 3.3891 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #15: GFLOPs: 16.5718. Time: 8.8980 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #16: GFLOPs: 16.9638. Time: 8.6924 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #17: GFLOPs: 16.9582. Time: 8.6953 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #18: GFLOPs: 42.6098. Time: 3.4606 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #19: GFLOPs: 43.9353. Time: 3.3562 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #20: GFLOPs: 16.7091. Time: 8.8249 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #21: GFLOPs: 43.2392. Time: 3.4102 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #22: GFLOPs: 44.0200. Time: 3.3498 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #23: GFLOPs: 44.1181. Time: 3.3423 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #24: GFLOPs: 42.9224. Time: 3.4354 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #25: GFLOPs: 44.6249. Time: 3.3043 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #26: GFLOPs: 16.8787. Time: 8.7362 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #27: GFLOPs: 43.7403. Time: 3.3712 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #28: GFLOPs: 42.6687. Time: 3.4558 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #29: GFLOPs: 43.8379. Time: 3.3637 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #30: GFLOPs: 43.6860. Time: 3.3754 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #31: GFLOPs: 43.2964. Time: 3.4057 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #32: GFLOPs: 43.0972. Time: 3.4215 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #33: GFLOPs: 43.3853. Time: 3.3988 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #34: GFLOPs: 42.2230. Time: 3.4923 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #35: GFLOPs: 17.1642. Time: 8.5909 us. Best GFLOPs: 44.6573
2024-03-24 09:10:37 [INFO] [task_scheduler.cc:131] [Task #9: fused_nn_avg_pool2d] Trial #36: GFLOPs: 43.7164. Time: 3.3730 us. Best GFLOPs: 44.6573
