2024-03-21 19:46:25 [INFO] [task_scheduler.cc:160] Initializing Task #34: "fused_nn_dense_add"
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT = T.alloc_buffer((T.int64(1), T.int64(1000)))
        for i0, i1, k in T.grid(T.int64(1), T.int64(1000), T.int64(1280)):
            with T.block("T_matmul_NT"):
                v_i0, v_i1, v_k = T.axis.remap("SSR", [i0, i1, k])
                T.reads(p0[v_i0, v_k], p1[v_i1, v_k])
                T.writes(T_matmul_NT[v_i0, v_i1])
                with T.init():
                    T_matmul_NT[v_i0, v_i1] = T.float32(0)
                T_matmul_NT[v_i0, v_i1] = T_matmul_NT[v_i0, v_i1] + p0[v_i0, v_k] * p1[v_i1, v_k]
        for ax0, ax1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_add"):
                v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                T.reads(T_matmul_NT[v_ax0, v_ax1], p2[v_ax0, v_ax1])
                T.writes(T_add[v_ax0, v_ax1])
                T_add[v_ax0, v_ax1] = T_matmul_NT[v_ax0, v_ax1] + p2[v_ax0, v_ax1]
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
            p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
            for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_1_i1_1_fused in T.thread_binding(T.int64(25), thread="vthread.x"):
                    for i0_2_i1_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for k_0 in range(T.int64(32)):
                            for ax0_ax1_fused in range(T.int64(40)):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(40) + ax0_ax1_fused)
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p0_shared[v0, v1] = p0[v0, v1]
                            for ax0_ax1_fused in range(T.int64(40000)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), ax0_ax1_fused // T.int64(40))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(40) + ax0_ax1_fused % T.int64(40))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1] = p1[v0, v1]
                            for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(40), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("T_matmul_NT"):
                                    v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                    v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + i1_3 + i1_4)
                                    v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(40) + k_1 + k_2)
                                    T.reads(p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                    T.writes(T_matmul_NT_local[v_i0, v_i1])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                                    T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                        for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                            with T.block("T_matmul_NT_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + ax1)
                                T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                                T.writes(T_add[v0, v1])
                                T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 25, 8, 5, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[32, 40, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
            p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
            for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_1_i1_1_fused in T.thread_binding(T.int64(25), thread="vthread.x"):
                    for i0_2_i1_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for k_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_fused in range(T.int64(40)):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(40) + ax0_ax1_fused)
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p0_shared[v0, v1] = p0[v0, v1]
                            for ax0_ax1_fused in range(T.int64(40000)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), ax0_ax1_fused // T.int64(40))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(40) + ax0_ax1_fused % T.int64(40))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1] = p1[v0, v1]
                            for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(40), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("T_matmul_NT"):
                                    v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                    v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + i1_3 + i1_4)
                                    v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(40) + k_1 + k_2)
                                    T.reads(p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                    T.writes(T_matmul_NT_local[v_i0, v_i1])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                                    T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                        for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                            with T.block("T_matmul_NT_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + ax1)
                                T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                                T.writes(T_add[v0, v1])
                                T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 25, 8, 5, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[32, 40, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
2024-03-21 19:46:25 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
            p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
            for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_1_i1_1_fused in T.thread_binding(T.int64(25), thread="vthread.x"):
                    for i0_2_i1_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for k_0_fused in T.serial(T.int64(32), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_fused in range(T.int64(40)):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(40) + ax0_ax1_fused)
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p0_shared[v0, v1] = p0[v0, v1]
                            for ax0_ax1_fused in range(T.int64(40000)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), ax0_ax1_fused // T.int64(40))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(40) + ax0_ax1_fused % T.int64(40))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1] = p1[v0, v1]
                            for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(40), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("T_matmul_NT"):
                                    v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                    v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + i1_3 + i1_4)
                                    v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(40) + k_1 + k_2)
                                    T.reads(p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                    T.writes(T_matmul_NT_local[v_i0, v_i1])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                                    T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                        for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                            with T.block("T_matmul_NT_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(40) + i0_2_i1_2_fused * T.int64(5) + ax1)
                                T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                                T.writes(T_add[v0, v1])
                                T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 25, 8, 5, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[32, 40, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
2024-03-21 20:20:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:20:24 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 20:20:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 501 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1001 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1506 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2014 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2519 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3023 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3529 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:26 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-03-21 20:20:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 91 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:20:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9972  0.9967  0.9967  0.9962  0.9917  0.9917  0.9916  0.9898  0.9870  0.9857  0.9848  0.9840  0.9834  0.9833  0.9811  0.9784
[17 : 32]:	0.9784  0.9769  0.9767  0.9759  0.9743  0.9718  0.9705  0.9689  0.9687  0.9684  0.9680  0.9660  0.9655  0.9652  0.9648  0.9648
[33 : 48]:	0.9644  0.9631  0.9631  0.9608  0.9589  0.9589  0.9575  0.9572  0.9565  0.9564  0.9561  0.9539  0.9536  0.9535  0.9528  0.9527
[49 : 64]:	0.9527  0.9521  0.9511  0.9498  0.9485  0.9484  0.9482  0.9476  0.9457  0.9453  0.9448  0.9445  0.9434  0.9432  0.9421  0.9397
2024-03-21 20:20:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:20:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #1: GFLOPs: 84.0734. Time: 30.4615 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #2: GFLOPs: 30.8634. Time: 82.9787 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #3: GFLOPs: 37.0483. Time: 69.1260 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #4: GFLOPs: 52.8504. Time: 48.4575 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #5: GFLOPs: 63.7487. Time: 40.1733 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #6: GFLOPs: 2.6840. Time: 954.1730 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #7: GFLOPs: 31.3478. Time: 81.6964 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #8: GFLOPs: 30.8430. Time: 83.0335 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #9: GFLOPs: 31.3497. Time: 81.6914 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #10: GFLOPs: 50.2043. Time: 51.0116 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #11: GFLOPs: 5.4881. Time: 466.6421 us. Best GFLOPs: 84.0734
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #12: GFLOPs: 94.0004. Time: 27.2446 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #13: GFLOPs: 2.7963. Time: 915.8394 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #14: GFLOPs: 2.8792. Time: 889.4844 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #15: GFLOPs: 17.1743. Time: 149.1181 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #16: GFLOPs: 15.9826. Time: 160.2370 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #17: GFLOPs: 4.4162. Time: 579.9155 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #18: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  312: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::TVMRetValue)
  311: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  310: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  309: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  308: tvm::transform::Pass::operator()(tvm::IRModule) const
  307: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  306: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  305: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  304: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  303: _ZN3tvm7runtime13PackedFuncObj
  302: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  301: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  300: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  299: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  298: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  297: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  296: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  295: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  294: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  286: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  285: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  284: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  283: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  282: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  281: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  280: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  279: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  278: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  277: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  276: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  275: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  274: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  273: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  272: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  271: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  270: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  269: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  268: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  267: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  266: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  265: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  264: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  263: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  262: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  261: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  260: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  259: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  258: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  257: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  256: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  255: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  254: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  253: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  252: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  251: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  250: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  249: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  248: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  247: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  246: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  245: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  244: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  243: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  242: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  241: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  240: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  239: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  238: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  237: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  236: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  235: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  234: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  233: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  232: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  231: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  230: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  229: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  228: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  227: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  226: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  225: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  224: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  217: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  213: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  212: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  211: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  210: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  209: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  208: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  207: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  206: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  205: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  204: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  203: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  202: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  198: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  197: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  196: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  195: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  188: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  187: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  186: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  185: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  184: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  183: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  182: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  181: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  180: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  179: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  178: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  177: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  176: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  175: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  174: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  173: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  172: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  171: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  170: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  169: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  168: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  167: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  166: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  165: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  164: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  163: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  162: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  161: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  160: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  159: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  158: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  157: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  156: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  155: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  154: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  150: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  149: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  148: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  147: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  146: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  145: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  144: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  143: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  142: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  141: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  140: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  139: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  138: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  137: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  136: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  135: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  134: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  133: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  132: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  131: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  130: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  129: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  128: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  127: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  126: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  125: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  124: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  123: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  122: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  121: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  120: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  119: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  118: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  117: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  116: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  115: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  114: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  113: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  112: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  111: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  110: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  109: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  108: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  107: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  106: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  105: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  104: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  103: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  102: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  101: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  100: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  99: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  98: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  97: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  96: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  95: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  94: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  93: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  92: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  91: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  90: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  89: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  88: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  87: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  86: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  85: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  84: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  83: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  82: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  81: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  80: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  79: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  78: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  77: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  76: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  75: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  74: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  73: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  72: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  71: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  70: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  69: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  68: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  67: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  66: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  65: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  64: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  63: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  62: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  61: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  60: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  59: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  58: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  57: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  56: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  55: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  54: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  53: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  52: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  51: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  50: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  49: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  48: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  47: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  45: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  44: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  43: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  42: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  41: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  40: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  39: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  38: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  37: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  36: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  35: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  34: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  33: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  32: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  31: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  30: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  29: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  28: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  27: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  26: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  25: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  24: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  23: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  22: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  21: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  19: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  18: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  17: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  16: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  15: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  14: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  13: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  12: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  11: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  10: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  9: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  8: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  7: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  6: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  5: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  4: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  3: _ZZN3tvm3tir11ExprFunctorIFNS_8PrimExprERKS2_EE10InitVTableEvENUlRKNS_7ru
  2: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  1: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  0: tvm::tir::APIType(tvm::runtime::DataType)
  File "/home/canesche/tvm-0.16.dev0/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(4)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3_init * T.int64(4) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(640), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(2))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(10)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(2))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(4)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3 * T.int64(4) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(2) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(20)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 50, 5, 4])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[640, 2, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62, l63 = sch.split(loop=l60, factors=[None, 50, 2], preserve_unit_iters=True)
sch.vectorize(loop=l63)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l64, l65, l66, l67, l68 = sch.get_loops(block=b45)
l69, l70, l71 = sch.split(loop=l68, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l71)
sch.bind(loop=l70, thread_axis="threadIdx.x")
b72 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b72, ann_key="meta_schedule.unroll_explicit")
b73, b74, b75, b76 = sch.get_child_blocks(b72)
l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b74)
l91, l92, l93, l94, l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b75)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
l101, l102, l103, l104, l105 = sch.get_loops(block=b76)
b106 = sch.get_block(name="T_matmul_NT", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b106)
b117 = sch.decompose_reduction(block=b106, loop=l110)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #19: GFLOPs: 37.0423. Time: 69.1372 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #20: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 159, in _worker_func
    costs: List[float] = f_run_evaluator(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 387, in default_run_evaluator
    return run_evaluator_common(rt_mod, device, evaluator_config, repeated_args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 117, in run_evaluator_common
    profile_result = evaluator(*args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/module.py", line 397, in evaluator
    blob = feval(*args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  1: tvm::runtime::profiling::WrapTimeEvaluator(tvm::runtime::PackedFunc, DLDevice, int, int, int, int, int, int, int, tvm::runtime::PackedFunc)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) [clone .isra.0]
  0: tvm::runtime::CUDADeviceAPI::StreamSync(DLDevice, void*)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 212
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(25)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(25) + i1_3_init * T.int64(25) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(1280), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                    T.where(ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1 < T.int64(1))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(13)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), ax0_ax1_fused_0 * T.int64(80) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2)
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                        T.where((ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(1000))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(25)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(25) + i1_3 * T.int64(25) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(25)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(25) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 40, 1, 25])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[1280, 1, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62 = sch.split(loop=l60, factors=[None, 40], preserve_unit_iters=True)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69, l70 = sch.split(loop=l67, factors=[None, 40, 2], preserve_unit_iters=True)
sch.vectorize(loop=l70)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b72)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #21: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(1000), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused + i1_3_init + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(128)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(1000), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(10) + (ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1 < T.int64(10))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(10)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(1000), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1) // T.int64(10))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(10) + (ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1) % T.int64(10))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(1)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused + i1_3 + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(10) + k_1 * T.int64(5) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1000, 1, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[128, 2, 5])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61 = sch.split(loop=l59, factors=[None, 1000], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b45)
l67, l68 = sch.split(loop=l66, factors=[None, 1000], preserve_unit_iters=True)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b69 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b69, ann_key="meta_schedule.unroll_explicit")
b70, b71, b72, b73 = sch.get_child_blocks(b69)
l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b70)
l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b71)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b72)
sch.annotate(block_or_loop=l86, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l86, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100 = sch.get_loops(block=b73)
b101 = sch.get_block(name="T_matmul_NT", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b101)
b112 = sch.decompose_reduction(block=b101, loop=l105)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #22: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(10)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(10) + i1_3_init * T.int64(10) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(128)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(10) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(10))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(100)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1) // T.int64(10))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(10) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1) % T.int64(10))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(10)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(10) + i1_3 * T.int64(10) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(10) + k_1 * T.int64(5) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(10)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(10) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 100, 1, 10])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[128, 2, 5])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61, l62 = sch.split(loop=l59, factors=[None, 100, 2], preserve_unit_iters=True)
sch.vectorize(loop=l62)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69 = sch.split(loop=l67, factors=[None, 100], preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b71)
l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b72)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l88, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l88, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102 = sch.get_loops(block=b74)
b103 = sch.get_block(name="T_matmul_NT", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b103)
b114 = sch.decompose_reduction(block=b103, loop=l107)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #23: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(5)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + i1_3_init * T.int64(5) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(1280), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                    T.where(ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1 < T.int64(1))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(3)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(4) + ax0_ax1_fused_2 < T.int64(500))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + i1_3 * T.int64(5) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[2, 2, 50, 1, 5])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[1280, 1, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62 = sch.split(loop=l60, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69, l70 = sch.split(loop=l67, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l70)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b72)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #24: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(5), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_1_i1_1_fused * T.int64(100) + i0_2_i1_2_fused * T.int64(2) + i1_3_init * T.int64(2) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(160)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(8) + (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1 < T.int64(8))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(16)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2) // T.int64(8))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(8) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2) % T.int64(8))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_1_i1_1_fused * T.int64(100) + i0_2_i1_2_fused * T.int64(2) + i1_3 * T.int64(2) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(8) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_1_i1_1_fused * T.int64(100) + i0_2_i1_2_fused * T.int64(2) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[5, 2, 50, 1, 2])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[160, 8, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61 = sch.split(loop=l59, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b45)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 50, 2], preserve_unit_iters=True)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b71)
l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b72)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l88, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l88, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102 = sch.get_loops(block=b74)
b103 = sch.get_block(name="T_matmul_NT", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b103)
b114 = sch.decompose_reduction(block=b103, loop=l107)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #25: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + i1_3_init * T.int64(4) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(320), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(4) + (ax0_ax1_fused_0 * T.int64(250) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(250) + ax0_ax1_fused_1 < T.int64(4))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(4)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(4))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(4) + (ax0_ax1_fused_0 * T.int64(1000) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(4))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + i1_3 * T.int64(4) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(4) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(4)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 250, 1, 4])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[320, 4, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62 = sch.split(loop=l60, factors=[None, 250], preserve_unit_iters=True)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69, l70 = sch.split(loop=l67, factors=[None, 250, 4], preserve_unit_iters=True)
sch.vectorize(loop=l70)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b72)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #26: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + i1_3_init * T.int64(4) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(256)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(5) + (ax0_ax1_fused_0 * T.int64(250) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(250) + ax0_ax1_fused_1 < T.int64(5))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(10)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(250), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(500) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2) // T.int64(5))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(5) + (ax0_ax1_fused_0 * T.int64(500) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2) % T.int64(5))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(4)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + i1_3 * T.int64(4) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(5) + k_1 * T.int64(5) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(4)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(4) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 250, 1, 4])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[256, 1, 5])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61 = sch.split(loop=l59, factors=[None, 250], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b45)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 250, 2], preserve_unit_iters=True)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b71)
l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b72)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l88, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l88, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102 = sch.get_loops(block=b74)
b103 = sch.get_block(name="T_matmul_NT", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b103)
b114 = sch.decompose_reduction(block=b103, loop=l107)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #27: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(5), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(5) + i1_3_init + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(80), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(16) + (ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1 < T.int64(16))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(80)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(40), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + (ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1) // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(16) + (ax0_ax1_fused_0 * T.int64(40) + ax0_ax1_fused_1) % T.int64(16))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(16), T.int64(1), T.int64(1)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(5) + i1_3 + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(16) + k_1 * T.int64(16) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(5) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[5, 1, 40, 5, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[80, 1, 16])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62 = sch.split(loop=l60, factors=[None, 40], preserve_unit_iters=True)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69 = sch.split(loop=l67, factors=[None, 40], preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b71)
l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b72)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l87, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l87, ann_key="pragma_unroll_explicit", ann_val=1)
l97, l98, l99, l100, l101 = sch.get_loops(block=b74)
b102 = sch.get_block(name="T_matmul_NT", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b102)
b113 = sch.decompose_reduction(block=b102, loop=l106)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #28: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(10), T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3_init * T.int64(2) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(320), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(4) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(4))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(80)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(4) + (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) % T.int64(4))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(10), T.int64(4), T.int64(1), T.int64(2)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3 * T.int64(2) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(4) + k_1 * T.int64(4) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(20)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 50, 10, 2])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[320, 1, 4])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62, l63 = sch.split(loop=l60, factors=[None, 50, 2], preserve_unit_iters=True)
sch.vectorize(loop=l63)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l64, l65, l66, l67, l68 = sch.get_loops(block=b45)
l69, l70 = sch.split(loop=l68, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #29: GFLOPs: 2.6973. Time: 949.4613 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #30: GFLOPs: 23.9164. Time: 107.0811 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #31: GFLOPs: 28.3043. Time: 90.4808 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #32: GFLOPs: 6.5443. Time: 391.3321 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #33: GFLOPs: 5.6336. Time: 454.5905 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #34: GFLOPs: 1.6478. Time: 1554.1627 us. Best GFLOPs: 94.0004
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #35: GFLOPs: 101.7868. Time: 25.1604 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #36: GFLOPs: 19.1695. Time: 133.5979 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #37: GFLOPs: 5.0947. Time: 502.6811 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #38: GFLOPs: 3.1227. Time: 820.1230 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #39: GFLOPs: 39.6314. Time: 64.6205 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #40: GFLOPs: 32.4573. Time: 78.9036 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #41: GFLOPs: 50.1718. Time: 51.0446 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #42: GFLOPs: 5.0507. Time: 507.0567 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #43: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 159, in _worker_func
    costs: List[float] = f_run_evaluator(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 387, in default_run_evaluator
    return run_evaluator_common(rt_mod, device, evaluator_config, repeated_args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 117, in run_evaluator_common
    profile_result = evaluator(*args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/module.py", line 397, in evaluator
    blob = feval(*args)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  1: tvm::runtime::profiling::WrapTimeEvaluator(tvm::runtime::PackedFunc, DLDevice, int, int, int, int, int, int, int, tvm::runtime::PackedFunc)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*) [clone .isra.0]
  0: tvm::runtime::CUDADeviceAPI::StreamSync(DLDevice, void*)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 212
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(10), T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3_init * T.int64(2) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(640), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(2))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(10)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(2))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(10), T.int64(1), T.int64(1), T.int64(2)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3 * T.int64(2) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(2) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(20)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 50, 10, 2])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[640, 2, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62, l63 = sch.split(loop=l60, factors=[None, 50, 2], preserve_unit_iters=True)
sch.vectorize(loop=l63)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l64, l65, l66, l67, l68 = sch.get_loops(block=b45)
l69, l70, l71 = sch.split(loop=l68, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l71)
sch.bind(loop=l70, thread_axis="threadIdx.x")
b72 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b72, ann_key="meta_schedule.unroll_explicit")
b73, b74, b75, b76 = sch.get_child_blocks(b72)
l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b74)
l91, l92, l93, l94, l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b75)
l101, l102, l103, l104, l105 = sch.get_loops(block=b76)
b106 = sch.get_block(name="T_matmul_NT", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b106)
b117 = sch.decompose_reduction(block=b106, loop=l110)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #44: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(5)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + i1_3_init * T.int64(5) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(1280), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                    T.where(ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1 < T.int64(1))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(3)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused)
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(4) + ax0_ax1_fused_2 < T.int64(500))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + i1_3 * T.int64(5) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(5)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(500) + i0_1_i1_1_fused * T.int64(250) + i0_2_i1_2_fused * T.int64(5) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[2, 2, 50, 1, 5])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[1280, 1, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62 = sch.split(loop=l60, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69, l70 = sch.split(loop=l67, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l70)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b72)
l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
sch.annotate(block_or_loop=l89, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l89, ann_key="pragma_unroll_explicit", ann_val=1)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #45: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(10)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(500) + i0_2_i1_2_fused * T.int64(10) + i1_3_init * T.int64(10) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(160)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(8) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(4) + ax0_ax1_fused_2 < T.int64(8))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(40)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(8))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(8) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(8))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(10)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(500) + i0_2_i1_2_fused * T.int64(10) + i1_3 * T.int64(10) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(8) + k_1 * T.int64(2) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(10)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(500) + i0_2_i1_2_fused * T.int64(10) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 2, 50, 1, 10])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[160, 4, 2])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61, l62 = sch.split(loop=l59, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l62)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l63, l64, l65, l66, l67 = sch.get_loops(block=b45)
l68, l69, l70 = sch.split(loop=l67, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l70)
sch.bind(loop=l69, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83, l84, l85, l86, l87, l88, l89 = sch.get_loops(block=b73)
l90, l91, l92, l93, l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b74)
sch.annotate(block_or_loop=l90, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l90, ann_key="pragma_unroll_explicit", ann_val=1)
l100, l101, l102, l103, l104 = sch.get_loops(block=b75)
b105 = sch.get_block(name="T_matmul_NT", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b105)
b116 = sch.decompose_reduction(block=b105, loop=l109)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #46: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(10), T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3_init * T.int64(2) + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0_fused in T.serial(T.int64(640), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p0_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 * T.int64(2) + ax0_ax1_fused_2))
                                        T.where((ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) * T.int64(2) + ax0_ax1_fused_2 < T.int64(2))
                                        T.reads(p0[v0, v1])
                                        T.writes(p0_shared[v0, v1])
                                        p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(40)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) // T.int64(2))
                                    v1 = T.axis.spatial(T.int64(1280), k_0_fused * T.int64(2) + (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1) % T.int64(2))
                                    T.reads(p1[v0, v1])
                                    T.writes(p1_shared[v0, v1])
                                    p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(10), T.int64(1), T.int64(1), T.int64(2)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + i1_3 * T.int64(2) + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0_fused * T.int64(2) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(20)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_2_i1_2_fused * T.int64(20) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 50, 10, 2])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[640, 2, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
l54 = sch.fuse(l29, preserve_unit_iters=True)
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l54, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b1)
v55 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v55)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l56, l57, l58, l59, l60 = sch.get_loops(block=b36)
l61, l62, l63 = sch.split(loop=l60, factors=[None, 50, 2], preserve_unit_iters=True)
sch.vectorize(loop=l63)
sch.bind(loop=l62, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l64, l65, l66, l67, l68 = sch.get_loops(block=b45)
l69, l70 = sch.split(loop=l68, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="threadIdx.x")
b71 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b71, ann_key="meta_schedule.unroll_explicit")
b72, b73, b74, b75 = sch.get_child_blocks(b71)
l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b72)
l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b73)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98 = sch.get_loops(block=b74)
l99, l100, l101, l102, l103 = sch.get_loops(block=b75)
b104 = sch.get_block(name="T_matmul_NT", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b104)
b115 = sch.decompose_reduction(block=b104, loop=l108)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #47: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  4: _ZN3tvm7runtime13PackedFuncObj
  3: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  2: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  0: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  File "/home/canesche/tvm-0.16.dev0/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(10), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(100) + i0_1_i1_1_fused * T.int64(50) + i0_2_i1_2_fused + i1_3_init + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(64)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(20) + (ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(50) + ax0_ax1_fused_1 < T.int64(20))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(10)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(50), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(100) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(20))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(20) + (ax0_ax1_fused_0 * T.int64(200) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(20))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(10), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(100) + i0_1_i1_1_fused * T.int64(50) + i0_2_i1_2_fused + i1_3 + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(20) + k_1 * T.int64(2) + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_0_i1_0_fused * T.int64(100) + i0_1_i1_1_fused * T.int64(50) + i0_2_i1_2_fused + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[10, 2, 50, 1, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[64, 10, 2])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61 = sch.split(loop=l59, factors=[None, 50], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b45)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 50, 4], preserve_unit_iters=True)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b71)
l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b72)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l88, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l88, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102 = sch.get_loops(block=b74)
b103 = sch.get_block(name="T_matmul_NT", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b103)
b114 = sch.decompose_reduction(block=b103, loop=l107)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:121] [Task #34: fused_nn_dense_add] Trial #48: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280)), "float32"), p1: T.Buffer((T.int64(1000), T.int64(1280)), "float32"), p2: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_matmul_NT_local = T.alloc_buffer((T.int64(1), T.int64(1000)), scope="local")
        p0_shared = T.alloc_buffer((T.int64(1), T.int64(1280)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(1000), T.int64(1280)), scope="shared")
        for i0_0_i1_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for i0_1_i1_1_fused in T.thread_binding(T.int64(5), thread="vthread.x"):
                for i0_2_i1_2_fused in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                    for i0_3_init, i1_3_init, i0_4_init, i1_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("T_matmul_NT_init"):
                            v_i0 = T.axis.spatial(T.int64(1), i0_3_init + i0_4_init)
                            v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(2) + i1_3_init + i1_4_init)
                            T.reads()
                            T.writes(T_matmul_NT_local[v_i0, v_i1])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            T_matmul_NT_local[v_i0, v_i1] = T.float32(0)
                    for k_0 in range(T.int64(640)):
                        for ax0_ax1_fused_0 in range(T.int64(1)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                                with T.block("p0_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(2) + (ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1))
                                    T.where(ax0_ax1_fused_0 * T.int64(100) + ax0_ax1_fused_1 < T.int64(2))
                                    T.reads(p0[v0, v1])
                                    T.writes(p0_shared[v0, v1])
                                    p0_shared[v0, v1] = p0[v0, v1]
                        for ax0_ax1_fused_0 in range(T.int64(5)):
                            for ax0_ax1_fused_1 in T.thread_binding(T.int64(100), thread="threadIdx.x"):
                                for ax0_ax1_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(1000), (ax0_ax1_fused_0 * T.int64(400) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) // T.int64(2))
                                        v1 = T.axis.spatial(T.int64(1280), k_0 * T.int64(2) + (ax0_ax1_fused_0 * T.int64(400) + ax0_ax1_fused_1 * T.int64(4) + ax0_ax1_fused_2) % T.int64(2))
                                        T.reads(p1[v0, v1])
                                        T.writes(p1_shared[v0, v1])
                                        p1_shared[v0, v1] = p1[v0, v1]
                        for k_1, i0_3, i1_3, k_2, i0_4, i1_4 in T.grid(T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("T_matmul_NT_update"):
                                v_i0 = T.axis.spatial(T.int64(1), i0_3 + i0_4)
                                v_i1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(2) + i1_3 + i1_4)
                                v_k = T.axis.reduce(T.int64(1280), k_0 * T.int64(2) + k_1 + k_2)
                                T.reads(T_matmul_NT_local[v_i0, v_i1], p0_shared[v_i0, v_k], p1_shared[v_i1, v_k])
                                T.writes(T_matmul_NT_local[v_i0, v_i1])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                T_matmul_NT_local[v_i0, v_i1] = T_matmul_NT_local[v_i0, v_i1] + p0_shared[v_i0, v_k] * p1_shared[v_i1, v_k]
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(2)):
                        with T.block("T_matmul_NT_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(1000), i0_1_i1_1_fused * T.int64(200) + i0_2_i1_2_fused * T.int64(2) + ax1)
                            T.reads(T_matmul_NT_local[v0, v1], p2[v0, v1])
                            T.writes(T_add[v0, v1])
                            T_add[v0, v1] = T_matmul_NT_local[v0, v1] + p2[v0, v1]
b0 = sch.get_block(name="T_matmul_NT", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l3, l4, l5 = sch.get_loops(block=b0)
v6, v7, v8, v9, v10 = sch.sample_perfect_tile(loop=l3, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l11, l12, l13, l14, l15 = sch.split(loop=l3, factors=[v6, v7, v8, v9, v10], preserve_unit_iters=True)
v16, v17, v18, v19, v20 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 5, 100, 2, 1])
l21, l22, l23, l24, l25 = sch.split(loop=l4, factors=[v16, v17, v18, v19, v20], preserve_unit_iters=True)
v26, v27, v28 = sch.sample_perfect_tile(loop=l5, n=3, max_innermost_factor=64, decision=[640, 2, 1])
l29, l30, l31 = sch.split(loop=l5, factors=[v26, v27, v28], preserve_unit_iters=True)
sch.reorder(l11, l21, l12, l22, l13, l23, l29, l30, l14, l24, l31, l15, l25)
l32 = sch.fuse(l11, l21, preserve_unit_iters=True)
sch.bind(loop=l32, thread_axis="blockIdx.x")
l33 = sch.fuse(l12, l22, preserve_unit_iters=True)
sch.bind(loop=l33, thread_axis="vthread.x")
l34 = sch.fuse(l13, l23, preserve_unit_iters=True)
sch.bind(loop=l34, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b35 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b35, loop=l34, preserve_unit_loops=True, index=-1)
b36 = sch.cache_read(block=b0, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b36, loop=l29, preserve_unit_loops=True, index=-1)
l37, l38, l39, l40, l41, l42 = sch.get_loops(block=b36)
l43 = sch.fuse(l41, l42, preserve_unit_iters=True)
v44 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch", ann_val=v44)
b45 = sch.cache_read(block=b0, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b0])
sch.compute_at(block=b45, loop=l29, preserve_unit_loops=True, index=-1)
l46, l47, l48, l49, l50, l51 = sch.get_loops(block=b45)
l52 = sch.fuse(l50, l51, preserve_unit_iters=True)
v53 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch", ann_val=v53)
sch.reverse_compute_inline(block=b1)
v54 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v54)
sch.enter_postproc()
sch.unannotate(block_or_loop=b36, ann_key="meta_schedule.cooperative_fetch")
l55, l56, l57, l58, l59 = sch.get_loops(block=b36)
l60, l61 = sch.split(loop=l59, factors=[None, 100], preserve_unit_iters=True)
sch.bind(loop=l61, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b45, ann_key="meta_schedule.cooperative_fetch")
l62, l63, l64, l65, l66 = sch.get_loops(block=b45)
l67, l68, l69 = sch.split(loop=l66, factors=[None, 100, 4], preserve_unit_iters=True)
sch.vectorize(loop=l69)
sch.bind(loop=l68, thread_axis="threadIdx.x")
b70 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b70, ann_key="meta_schedule.unroll_explicit")
b71, b72, b73, b74 = sch.get_child_blocks(b70)
l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b71)
l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b72)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b73)
sch.annotate(block_or_loop=l88, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l88, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102 = sch.get_loops(block=b74)
b103 = sch.get_block(name="T_matmul_NT", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b103)
b114 = sch.decompose_reduction(block=b103, loop=l107)
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #49: GFLOPs: 22.4432. Time: 114.1102 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #50: GFLOPs: 62.8076. Time: 40.7753 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #51: GFLOPs: 49.4808. Time: 51.7574 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #52: GFLOPs: 4.8276. Time: 530.4916 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #53: GFLOPs: 1.4401. Time: 1778.3107 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #54: GFLOPs: 26.6358. Time: 96.1489 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #55: GFLOPs: 12.4309. Time: 206.0184 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #56: GFLOPs: 33.4022. Time: 76.6715 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #57: GFLOPs: 8.2731. Time: 309.5572 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #58: GFLOPs: 51.6405. Time: 49.5929 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #59: GFLOPs: 9.4457. Time: 271.1277 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #60: GFLOPs: 5.3022. Time: 483.0092 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #61: GFLOPs: 52.4320. Time: 48.8442 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #62: GFLOPs: 24.2704. Time: 105.5193 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #63: GFLOPs: 10.5598. Time: 242.5229 us. Best GFLOPs: 101.7868
2024-03-21 20:22:07 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #64: GFLOPs: 29.0029. Time: 88.3016 us. Best GFLOPs: 101.7868
2024-03-21 20:22:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:22:57 [INFO] [evolutionary_search.cc:715] Picked top 48 candidate(s) from database
2024-03-21 20:22:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 462 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 920 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1378 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1836 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2297 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2755 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:22:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3215 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3677 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4134 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4592 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 5052 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:00 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-03-21 20:23:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:23:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0576  1.0543  1.0518  1.0506  1.0473  1.0468  1.0397  1.0360  1.0360  1.0360  1.0348  1.0327  1.0322  1.0315  1.0252  1.0247
[17 : 32]:	1.0240  1.0240  1.0233  1.0176  1.0169  1.0167  1.0167  1.0167  1.0140  1.0140  1.0103  1.0097  1.0097  1.0097  1.0097  1.0094
[33 : 48]:	1.0094  1.0082  1.0081  1.0081  1.0081  1.0070  1.0021  1.0020  1.0020  1.0019  1.0012  1.0011  1.0010  1.0010  0.9978  0.9978
[49 : 64]:	0.9978  0.9970  0.9970  0.9970  0.9960  0.9960  0.9946  0.9939  0.9939  0.9926  0.9892  0.9892  0.9892  0.9876  0.9873  0.9873
2024-03-21 20:23:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:23:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #65: GFLOPs: 172.1540. Time: 14.8762 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #66: GFLOPs: 116.4374. Time: 21.9947 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #67: GFLOPs: 160.2291. Time: 15.9834 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #68: GFLOPs: 160.0533. Time: 16.0009 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #69: GFLOPs: 127.5250. Time: 20.0823 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #70: GFLOPs: 116.4507. Time: 21.9921 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #71: GFLOPs: 116.4539. Time: 21.9915 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #72: GFLOPs: 140.9245. Time: 18.1728 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #73: GFLOPs: 140.9249. Time: 18.1728 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #74: GFLOPs: 140.9299. Time: 18.1722 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #75: GFLOPs: 136.8495. Time: 18.7140 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #76: GFLOPs: 118.6564. Time: 21.5833 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #77: GFLOPs: 116.4531. Time: 21.9917 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #78: GFLOPs: 106.6144. Time: 24.0212 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #79: GFLOPs: 127.5350. Time: 20.0808 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #80: GFLOPs: 116.4593. Time: 21.9905 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #81: GFLOPs: 100.3642. Time: 25.5171 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #82: GFLOPs: 100.3642. Time: 25.5171 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #83: GFLOPs: 167.4777. Time: 15.2916 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #84: GFLOPs: 118.9765. Time: 21.5253 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #85: GFLOPs: 100.3654. Time: 25.5168 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #86: GFLOPs: 99.4293. Time: 25.7570 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #87: GFLOPs: 99.4324. Time: 25.7562 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #88: GFLOPs: 99.4346. Time: 25.7556 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #89: GFLOPs: 124.9600. Time: 20.4946 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #90: GFLOPs: 124.9476. Time: 20.4966 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #91: GFLOPs: 139.5522. Time: 18.3516 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #92: GFLOPs: 124.8702. Time: 20.5093 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #93: GFLOPs: 128.7127. Time: 19.8970 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #94: GFLOPs: 128.7091. Time: 19.8976 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #95: GFLOPs: 103.2215. Time: 24.8107 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #96: GFLOPs: 106.6182. Time: 24.0203 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #97: GFLOPs: 106.6187. Time: 24.0202 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #98: GFLOPs: 152.6137. Time: 16.7809 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #99: GFLOPs: 101.6786. Time: 25.1872 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #100: GFLOPs: 101.6997. Time: 25.1820 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #101: GFLOPs: 101.7040. Time: 25.1809 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #102: GFLOPs: 126.9458. Time: 20.1740 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #103: GFLOPs: 90.7380. Time: 28.2241 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #104: GFLOPs: 127.6856. Time: 20.0571 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #105: GFLOPs: 127.6336. Time: 20.0653 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #106: GFLOPs: 100.3642. Time: 25.5171 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #107: GFLOPs: 167.4900. Time: 15.2905 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #108: GFLOPs: 127.3806. Time: 20.1051 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #109: GFLOPs: 103.2213. Time: 24.8108 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #110: GFLOPs: 103.2226. Time: 24.8105 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #111: GFLOPs: 49.1663. Time: 52.0885 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #112: GFLOPs: 95.3219. Time: 26.8668 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #113: GFLOPs: 49.1637. Time: 52.0913 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #114: GFLOPs: 124.1379. Time: 20.6303 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #115: GFLOPs: 128.2776. Time: 19.9645 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #116: GFLOPs: 128.2767. Time: 19.9647 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #117: GFLOPs: 137.7654. Time: 18.5896 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #118: GFLOPs: 137.7682. Time: 18.5892 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #119: GFLOPs: 99.4337. Time: 25.7559 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #120: GFLOPs: 78.6773. Time: 32.5507 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #121: GFLOPs: 78.6835. Time: 32.5481 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #122: GFLOPs: 167.7851. Time: 15.2636 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #123: GFLOPs: 55.8418. Time: 45.8617 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #124: GFLOPs: 55.8410. Time: 45.8624 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #125: GFLOPs: 55.8446. Time: 45.8594 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #126: GFLOPs: 4.4737. Time: 572.4628 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #127: GFLOPs: 29.6836. Time: 86.2766 us. Best GFLOPs: 172.1540
2024-03-21 20:23:51 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #128: GFLOPs: 31.4949. Time: 81.3148 us. Best GFLOPs: 172.1540
2024-03-21 20:44:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:44:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 20:44:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1622 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2027 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2435 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2841 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3244 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3648 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4054 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4455 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:29 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-03-21 20:44:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 125 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 20:44:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9617  0.9609  0.9547  0.9547  0.9532  0.9466  0.9339  0.9339  0.9308  0.9303  0.9303  0.9293  0.9280  0.9280  0.9272  0.9257
[17 : 32]:	0.9257  0.9251  0.9247  0.9201  0.9198  0.9198  0.9181  0.9170  0.9167  0.9140  0.9128  0.9108  0.9108  0.9098  0.9087  0.9081
[33 : 48]:	0.9081  0.9060  0.9025  0.9025  0.9009  0.8998  0.8982  0.8926  0.8913  0.8807  0.8798  0.8741  0.8737  0.8737  0.8722  0.8563
[49 : 64]:	0.8563  0.8497  0.8340  0.8340  0.8332  0.8314  0.8275  0.8270  0.8270  0.8263  0.8252  0.8221  0.8204  0.8204  0.8204  0.8155
2024-03-21 20:44:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:44:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #129: GFLOPs: 167.7552. Time: 15.2663 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #130: GFLOPs: 167.7748. Time: 15.2645 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #131: GFLOPs: 167.8251. Time: 15.2599 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #132: GFLOPs: 167.7683. Time: 15.2651 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #133: GFLOPs: 167.7350. Time: 15.2681 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #134: GFLOPs: 167.7187. Time: 15.2696 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #135: GFLOPs: 160.0697. Time: 15.9993 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #136: GFLOPs: 160.0652. Time: 15.9997 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #137: GFLOPs: 168.6010. Time: 15.1897 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #138: GFLOPs: 168.5488. Time: 15.1944 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #139: GFLOPs: 168.5903. Time: 15.1907 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #140: GFLOPs: 160.0683. Time: 15.9994 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #141: GFLOPs: 160.0662. Time: 15.9996 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #142: GFLOPs: 160.0610. Time: 16.0001 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #143: GFLOPs: 171.8318. Time: 14.9041 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #144: GFLOPs: 171.8362. Time: 14.9037 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #145: GFLOPs: 171.8267. Time: 14.9046 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #146: GFLOPs: 168.5891. Time: 15.1908 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #147: GFLOPs: 168.5755. Time: 15.1920 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #148: GFLOPs: 168.5893. Time: 15.1908 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #149: GFLOPs: 171.8328. Time: 14.9040 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #150: GFLOPs: 171.8255. Time: 14.9047 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #151: GFLOPs: 160.0655. Time: 15.9997 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #152: GFLOPs: 160.0820. Time: 15.9980 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #153: GFLOPs: 160.0861. Time: 15.9976 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #154: GFLOPs: 160.0676. Time: 15.9995 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #155: GFLOPs: 153.6980. Time: 16.6625 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #156: GFLOPs: 160.0675. Time: 15.9995 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #157: GFLOPs: 160.0880. Time: 15.9974 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #158: GFLOPs: 171.8292. Time: 14.9043 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #159: GFLOPs: 156.0564. Time: 16.4107 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #160: GFLOPs: 160.0682. Time: 15.9994 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #161: GFLOPs: 160.0687. Time: 15.9994 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #162: GFLOPs: 155.3971. Time: 16.4804 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #163: GFLOPs: 156.0619. Time: 16.4102 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #164: GFLOPs: 156.0650. Time: 16.4098 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #165: GFLOPs: 160.0883. Time: 15.9974 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #166: GFLOPs: 155.3917. Time: 16.4809 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #167: GFLOPs: 160.0706. Time: 15.9992 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #168: GFLOPs: 156.0582. Time: 16.4105 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #169: GFLOPs: 152.7439. Time: 16.7666 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #170: GFLOPs: 152.5374. Time: 16.7893 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #171: GFLOPs: 152.5668. Time: 16.7861 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #172: GFLOPs: 152.5167. Time: 16.7916 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #173: GFLOPs: 152.5678. Time: 16.7860 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #174: GFLOPs: 152.5722. Time: 16.7855 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #175: GFLOPs: 152.5363. Time: 16.7894 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #176: GFLOPs: 153.5345. Time: 16.6803 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #177: GFLOPs: 153.6156. Time: 16.6715 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #178: GFLOPs: 153.5481. Time: 16.6788 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #179: GFLOPs: 168.9848. Time: 15.1552 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #180: GFLOPs: 168.9800. Time: 15.1556 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #181: GFLOPs: 168.9824. Time: 15.1554 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #182: GFLOPs: 136.4696. Time: 18.7661 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #183: GFLOPs: 168.9904. Time: 15.1547 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #184: GFLOPs: 168.9882. Time: 15.1549 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #185: GFLOPs: 168.9906. Time: 15.1547 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #186: GFLOPs: 136.5533. Time: 18.7546 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #187: GFLOPs: 136.5764. Time: 18.7514 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #188: GFLOPs: 168.9864. Time: 15.1551 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #189: GFLOPs: 136.5430. Time: 18.7560 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #190: GFLOPs: 48.5484. Time: 52.7515 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #191: GFLOPs: 5.6728. Time: 451.4502 us. Best GFLOPs: 172.1540
2024-03-21 20:45:17 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #192: GFLOPs: 20.7764. Time: 123.2647 us. Best GFLOPs: 172.1540
2024-03-21 21:04:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:04:54 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 21:04:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 805 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2017 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2421 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2823 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3229 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:56 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-03-21 21:04:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 127 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:04:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:05:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:05:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9950  0.9937  0.9926  0.9921  0.9921  0.9912  0.9841  0.9841  0.9836  0.9836  0.9836  0.9702  0.9689  0.9689  0.9677  0.9677
[17 : 32]:	0.9648  0.9644  0.9644  0.9636  0.9636  0.9631  0.9625  0.9624  0.9624  0.9619  0.9611  0.9611  0.9591  0.9586  0.9586  0.9586
[33 : 48]:	0.9586  0.9585  0.9580  0.9580  0.9580  0.9575  0.9570  0.9490  0.9490  0.9490  0.9451  0.9451  0.9437  0.9425  0.9425  0.9421
[49 : 64]:	0.9421  0.9402  0.9402  0.9402  0.9402  0.9402  0.9397  0.9397  0.9377  0.9347  0.9338  0.9337  0.9337  0.9337  0.9334  0.9334
2024-03-21 21:05:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:05:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #193: GFLOPs: 163.5579. Time: 15.6581 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #194: GFLOPs: 168.0477. Time: 15.2397 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #195: GFLOPs: 168.0408. Time: 15.2403 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #196: GFLOPs: 168.0262. Time: 15.2417 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #197: GFLOPs: 168.0123. Time: 15.2429 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #198: GFLOPs: 168.0385. Time: 15.2406 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #199: GFLOPs: 168.0231. Time: 15.2420 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #200: GFLOPs: 167.9997. Time: 15.2441 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #201: GFLOPs: 168.0271. Time: 15.2416 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #202: GFLOPs: 168.0005. Time: 15.2440 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #203: GFLOPs: 168.0189. Time: 15.2423 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #204: GFLOPs: 167.4923. Time: 15.2903 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #205: GFLOPs: 167.4692. Time: 15.2924 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #206: GFLOPs: 167.4766. Time: 15.2917 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #207: GFLOPs: 167.4916. Time: 15.2903 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #208: GFLOPs: 167.4836. Time: 15.2910 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #209: GFLOPs: 167.4921. Time: 15.2903 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #210: GFLOPs: 167.4844. Time: 15.2910 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #211: GFLOPs: 167.4872. Time: 15.2907 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #212: GFLOPs: 167.4733. Time: 15.2920 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #213: GFLOPs: 167.4789. Time: 15.2915 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #214: GFLOPs: 167.4831. Time: 15.2911 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #215: GFLOPs: 167.4700. Time: 15.2923 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #216: GFLOPs: 171.8120. Time: 14.9058 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #217: GFLOPs: 171.8126. Time: 14.9058 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #218: GFLOPs: 167.5018. Time: 15.2894 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #219: GFLOPs: 171.8150. Time: 14.9056 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #220: GFLOPs: 171.8127. Time: 14.9058 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #221: GFLOPs: 167.4973. Time: 15.2898 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #222: GFLOPs: 171.8115. Time: 14.9059 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #223: GFLOPs: 167.4898. Time: 15.2905 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #224: GFLOPs: 167.4943. Time: 15.2901 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #225: GFLOPs: 167.4984. Time: 15.2897 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #226: GFLOPs: 167.4722. Time: 15.2921 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #227: GFLOPs: 167.4768. Time: 15.2917 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #228: GFLOPs: 167.4717. Time: 15.2921 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #229: GFLOPs: 167.4761. Time: 15.2917 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #230: GFLOPs: 171.8118. Time: 14.9058 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #231: GFLOPs: 171.8056. Time: 14.9064 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #232: GFLOPs: 155.4331. Time: 16.4765 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #233: GFLOPs: 155.4394. Time: 16.4759 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #234: GFLOPs: 155.4393. Time: 16.4759 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #235: GFLOPs: 159.9803. Time: 16.0082 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #236: GFLOPs: 159.9865. Time: 16.0076 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #237: GFLOPs: 159.9880. Time: 16.0074 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #238: GFLOPs: 155.4479. Time: 16.4750 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #239: GFLOPs: 155.4626. Time: 16.4734 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #240: GFLOPs: 155.4550. Time: 16.4742 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #241: GFLOPs: 155.4466. Time: 16.4751 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #242: GFLOPs: 154.8188. Time: 16.5419 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #243: GFLOPs: 154.8146. Time: 16.5424 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #244: GFLOPs: 154.8138. Time: 16.5425 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #245: GFLOPs: 154.8151. Time: 16.5423 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #246: GFLOPs: 159.9827. Time: 16.0080 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #247: GFLOPs: 159.9902. Time: 16.0072 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #248: GFLOPs: 159.9943. Time: 16.0068 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #249: GFLOPs: 154.8149. Time: 16.5423 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #250: GFLOPs: 160.1048. Time: 15.9958 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #251: GFLOPs: 154.8114. Time: 16.5427 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #252: GFLOPs: 154.8083. Time: 16.5430 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #253: GFLOPs: 154.8062. Time: 16.5433 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #254: GFLOPs: 18.8806. Time: 135.6415 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #255: GFLOPs: 10.7093. Time: 239.1371 us. Best GFLOPs: 172.1540
2024-03-21 21:05:45 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #256: GFLOPs: 52.3569. Time: 48.9143 us. Best GFLOPs: 172.1540
2024-03-21 21:09:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:09:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 21:09:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 810 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1614 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2021 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2827 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3638 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:51 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-03-21 21:09:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:09:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9805  0.9805  0.9802  0.9802  0.9764  0.9752  0.9735  0.9674  0.9670  0.9636  0.9636  0.9611  0.9569  0.9569  0.9536  0.9521
[17 : 32]:	0.9521  0.9491  0.9476  0.9399  0.9388  0.9385  0.9385  0.9385  0.9385  0.9385  0.9384  0.9346  0.9346  0.9321  0.9321  0.9316
[33 : 48]:	0.9311  0.9308  0.9308  0.9289  0.9280  0.9278  0.9278  0.9278  0.9266  0.9265  0.9260  0.9260  0.9254  0.9252  0.9252  0.9252
[49 : 64]:	0.9252  0.9247  0.9232  0.9216  0.9212  0.9212  0.9211  0.9204  0.9204  0.9204  0.9204  0.9204  0.9201  0.9199  0.9199  0.9199
2024-03-21 21:09:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:09:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #257: GFLOPs: 161.6518. Time: 15.8427 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #258: GFLOPs: 167.9821. Time: 15.2457 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #259: GFLOPs: 168.0029. Time: 15.2438 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #260: GFLOPs: 168.0242. Time: 15.2419 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #261: GFLOPs: 167.7690. Time: 15.2650 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #262: GFLOPs: 167.7596. Time: 15.2659 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #263: GFLOPs: 167.7568. Time: 15.2661 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #264: GFLOPs: 167.7521. Time: 15.2666 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #265: GFLOPs: 167.7521. Time: 15.2666 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #266: GFLOPs: 167.7662. Time: 15.2653 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #267: GFLOPs: 167.7545. Time: 15.2664 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #268: GFLOPs: 167.7606. Time: 15.2658 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #269: GFLOPs: 171.9505. Time: 14.8938 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #270: GFLOPs: 171.9418. Time: 14.8946 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #271: GFLOPs: 159.5142. Time: 16.0550 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #272: GFLOPs: 159.5028. Time: 16.0561 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #273: GFLOPs: 159.5236. Time: 16.0541 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #274: GFLOPs: 171.9493. Time: 14.8939 us. Best GFLOPs: 172.1540
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #275: GFLOPs: 199.7858. Time: 12.8187 us. Best GFLOPs: 199.7858
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #276: GFLOPs: 229.0010. Time: 11.1834 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #277: GFLOPs: 199.7799. Time: 12.8191 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #278: GFLOPs: 146.2697. Time: 17.5087 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #279: GFLOPs: 199.7795. Time: 12.8191 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #280: GFLOPs: 199.7713. Time: 12.8197 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #281: GFLOPs: 199.7789. Time: 12.8192 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #282: GFLOPs: 199.7776. Time: 12.8193 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #283: GFLOPs: 153.3228. Time: 16.7033 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #284: GFLOPs: 153.3155. Time: 16.7041 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #285: GFLOPs: 153.3094. Time: 16.7048 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #286: GFLOPs: 153.3107. Time: 16.7046 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #287: GFLOPs: 153.3186. Time: 16.7038 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #288: GFLOPs: 152.7313. Time: 16.7680 us. Best GFLOPs: 229.0010
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #289: GFLOPs: 229.0026. Time: 11.1833 us. Best GFLOPs: 229.0026
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #290: GFLOPs: 229.0043. Time: 11.1832 us. Best GFLOPs: 229.0043
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #291: GFLOPs: 229.0123. Time: 11.1828 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #292: GFLOPs: 211.1785. Time: 12.1272 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #293: GFLOPs: 154.8026. Time: 16.5437 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #294: GFLOPs: 152.7305. Time: 16.7681 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #295: GFLOPs: 152.7284. Time: 16.7683 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #296: GFLOPs: 152.7294. Time: 16.7682 us. Best GFLOPs: 229.0123
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #297: GFLOPs: 229.5581. Time: 11.1562 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #298: GFLOPs: 153.3138. Time: 16.7043 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #299: GFLOPs: 199.9722. Time: 12.8068 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #300: GFLOPs: 155.8199. Time: 16.4356 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #301: GFLOPs: 152.7354. Time: 16.7676 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #302: GFLOPs: 153.2966. Time: 16.7062 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #303: GFLOPs: 153.2987. Time: 16.7059 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #304: GFLOPs: 153.3047. Time: 16.7053 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #305: GFLOPs: 153.3418. Time: 16.7013 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #306: GFLOPs: 155.8255. Time: 16.4351 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #307: GFLOPs: 155.8108. Time: 16.4366 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #308: GFLOPs: 153.3250. Time: 16.7031 us. Best GFLOPs: 229.5581
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #309: GFLOPs: 231.7471. Time: 11.0508 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #310: GFLOPs: 160.1202. Time: 15.9942 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #311: GFLOPs: 152.7333. Time: 16.7678 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #312: GFLOPs: 154.8095. Time: 16.5429 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #313: GFLOPs: 153.3367. Time: 16.7018 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #314: GFLOPs: 153.3117. Time: 16.7045 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #315: GFLOPs: 153.3306. Time: 16.7025 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #316: GFLOPs: 153.3197. Time: 16.7037 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #317: GFLOPs: 211.1842. Time: 12.1269 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #318: GFLOPs: 33.2592. Time: 77.0012 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #319: GFLOPs: 115.6371. Time: 22.1469 us. Best GFLOPs: 231.7471
2024-03-21 21:10:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #320: GFLOPs: 28.5583. Time: 89.6761 us. Best GFLOPs: 231.7471
2024-03-21 21:54:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:54:48 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 21:54:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1214 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1619 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2022 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2829 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3636 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:50 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-03-21 21:54:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 151 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 21:54:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9015  0.9015  0.9015  0.9015  0.8799  0.8799  0.8799  0.8799  0.8799  0.8799  0.8675  0.8526  0.8526  0.8526  0.8526  0.8526
[17 : 32]:	0.8520  0.8458  0.8458  0.8458  0.8458  0.8458  0.8303  0.8151  0.8151  0.8151  0.8151  0.8151  0.8151  0.8146  0.8098  0.8023
[33 : 48]:	0.7876  0.7876  0.7876  0.7876  0.7870  0.7854  0.7803  0.7682  0.7682  0.7660  0.7660  0.7660  0.7660  0.7660  0.7566  0.7566
[49 : 64]:	0.7566  0.7502  0.7502  0.7476  0.7454  0.7454  0.7454  0.7434  0.7379  0.7379  0.7379  0.7299  0.7292  0.7274  0.7268  0.7226
2024-03-21 21:54:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:54:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #321: GFLOPs: 229.7467. Time: 11.1471 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #322: GFLOPs: 229.7298. Time: 11.1479 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #323: GFLOPs: 229.6910. Time: 11.1498 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #324: GFLOPs: 229.6876. Time: 11.1499 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #325: GFLOPs: 231.5921. Time: 11.0582 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #326: GFLOPs: 231.6070. Time: 11.0575 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #327: GFLOPs: 231.6016. Time: 11.0578 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #328: GFLOPs: 231.6683. Time: 11.0546 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #329: GFLOPs: 231.6067. Time: 11.0575 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #330: GFLOPs: 231.6784. Time: 11.0541 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #331: GFLOPs: 199.9080. Time: 12.8109 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #332: GFLOPs: 230.9911. Time: 11.0870 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #333: GFLOPs: 230.9928. Time: 11.0869 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #334: GFLOPs: 231.0137. Time: 11.0859 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #335: GFLOPs: 231.0170. Time: 11.0858 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #336: GFLOPs: 231.0008. Time: 11.0865 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #337: GFLOPs: 54.3733. Time: 47.1003 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #338: GFLOPs: 212.7329. Time: 12.0386 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #339: GFLOPs: 212.7314. Time: 12.0387 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #340: GFLOPs: 212.7352. Time: 12.0384 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #341: GFLOPs: 212.7293. Time: 12.0388 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #342: GFLOPs: 212.7403. Time: 12.0381 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #343: GFLOPs: 53.7518. Time: 47.6449 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #344: GFLOPs: 201.3420. Time: 12.7196 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #345: GFLOPs: 201.3389. Time: 12.7198 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #346: GFLOPs: 201.3445. Time: 12.7195 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #347: GFLOPs: 201.3418. Time: 12.7197 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #348: GFLOPs: 201.3431. Time: 12.7196 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #349: GFLOPs: 201.3389. Time: 12.7198 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #350: GFLOPs: 211.2121. Time: 12.1253 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #351: GFLOPs: 54.2250. Time: 47.2291 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #352: GFLOPs: 214.4798. Time: 11.9405 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #353: GFLOPs: 54.3751. Time: 47.0987 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #354: GFLOPs: 54.3914. Time: 47.0847 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #355: GFLOPs: 54.3916. Time: 47.0845 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #356: GFLOPs: 54.3783. Time: 47.0960 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #357: GFLOPs: 80.0129. Time: 32.0073 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #358: GFLOPs: 79.9869. Time: 32.0177 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #359: GFLOPs: 152.3091. Time: 16.8145 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #360: GFLOPs: 79.7155. Time: 32.1268 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #361: GFLOPs: 79.7151. Time: 32.1269 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #362: GFLOPs: 53.7583. Time: 47.6392 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #363: GFLOPs: 53.6960. Time: 47.6944 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #364: GFLOPs: 53.6899. Time: 47.6999 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #365: GFLOPs: 53.7559. Time: 47.6413 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #366: GFLOPs: 53.7564. Time: 47.6408 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #367: GFLOPs: 139.7930. Time: 18.3199 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #368: GFLOPs: 139.7902. Time: 18.3203 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #369: GFLOPs: 215.2858. Time: 11.8958 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #370: GFLOPs: 211.2401. Time: 12.1236 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #371: GFLOPs: 211.2264. Time: 12.1244 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #372: GFLOPs: 82.1118. Time: 31.1892 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #373: GFLOPs: 54.0886. Time: 47.3483 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #374: GFLOPs: 54.2243. Time: 47.2297 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #375: GFLOPs: 54.2242. Time: 47.2298 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #376: GFLOPs: 82.1058. Time: 31.1915 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #377: GFLOPs: 214.4534. Time: 11.9420 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #378: GFLOPs: 214.4601. Time: 11.9416 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #379: GFLOPs: 214.4435. Time: 11.9425 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #380: GFLOPs: 166.3455. Time: 15.3957 us. Best GFLOPs: 231.7471
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #381: GFLOPs: 233.0702. Time: 10.9881 us. Best GFLOPs: 233.0702
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #382: GFLOPs: 17.2432. Time: 148.5227 us. Best GFLOPs: 233.0702
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #383: GFLOPs: 27.8956. Time: 91.8066 us. Best GFLOPs: 233.0702
2024-03-21 21:55:40 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #384: GFLOPs: 33.7331. Time: 75.9195 us. Best GFLOPs: 233.0702
2024-03-21 22:08:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 22:08:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 22:08:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 812 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1216 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 1623 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2028 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2435 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 2842 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3249 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 3653 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4058 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 4460 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:06 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-03-21 22:08:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ed7b6e28)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed81d988)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed85fc58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ed710388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ed6f0fd8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed7b7b38)]: 120 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521eda7aa88)]: 0 failure(s)
2024-03-21 22:08:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0004  0.9695  0.9695  0.9695  0.9504  0.9458  0.9458  0.9070  0.9070  0.9070  0.9003  0.8997  0.8965  0.8965  0.8965  0.8965
[17 : 32]:	0.8805  0.8747  0.8665  0.8662  0.8494  0.8494  0.8494  0.8494  0.8379  0.8379  0.8379  0.8174  0.8088  0.8069  0.7942  0.7864
[33 : 48]:	0.7807  0.7799  0.7792  0.7788  0.7617  0.7599  0.7537  0.7537  0.7530  0.7503  0.7500  0.7465  0.7465  0.7457  0.7457  0.7457
[49 : 64]:	0.7333  0.7291  0.7283  0.7232  0.7219  0.7216  0.7192  0.7186  0.7174  0.7166  0.7166  0.7130  0.7123  0.7120  0.7120  0.7120
2024-03-21 22:08:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 22:08:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #385: GFLOPs: 232.2169. Time: 11.0285 us. Best GFLOPs: 233.0702
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #386: GFLOPs: 233.2466. Time: 10.9798 us. Best GFLOPs: 233.2466
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #387: GFLOPs: 233.2521. Time: 10.9795 us. Best GFLOPs: 233.2521
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #388: GFLOPs: 233.2910. Time: 10.9777 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #389: GFLOPs: 232.0621. Time: 11.0358 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #390: GFLOPs: 230.9964. Time: 11.0868 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #391: GFLOPs: 230.9896. Time: 11.0871 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #392: GFLOPs: 210.4577. Time: 12.1687 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #393: GFLOPs: 210.4813. Time: 12.1674 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #394: GFLOPs: 210.4606. Time: 12.1686 us. Best GFLOPs: 233.2910
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #395: GFLOPs: 255.9621. Time: 10.0054 us. Best GFLOPs: 255.9621
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #396: GFLOPs: 255.9655. Time: 10.0053 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #397: GFLOPs: 212.9728. Time: 12.0250 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #398: GFLOPs: 212.9878. Time: 12.0242 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #399: GFLOPs: 212.9863. Time: 12.0242 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #400: GFLOPs: 212.9803. Time: 12.0246 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #401: GFLOPs: 212.7356. Time: 12.0384 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #402: GFLOPs: 200.0845. Time: 12.7996 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #403: GFLOPs: 110.1012. Time: 23.2604 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #404: GFLOPs: 201.2758. Time: 12.7238 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #405: GFLOPs: 174.7440. Time: 14.6557 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #406: GFLOPs: 174.7589. Time: 14.6545 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #407: GFLOPs: 174.7721. Time: 14.6534 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #408: GFLOPs: 174.8133. Time: 14.6499 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #409: GFLOPs: 174.7646. Time: 14.6540 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #410: GFLOPs: 174.8272. Time: 14.6487 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #411: GFLOPs: 174.7674. Time: 14.6538 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #412: GFLOPs: 147.5011. Time: 17.3626 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #413: GFLOPs: 212.9985. Time: 12.0236 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #414: GFLOPs: 149.8367. Time: 17.0919 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #415: GFLOPs: 145.3777. Time: 17.6162 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #416: GFLOPs: 168.0019. Time: 15.2439 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #417: GFLOPs: 176.2491. Time: 14.5306 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #418: GFLOPs: 145.1978. Time: 17.6380 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #419: GFLOPs: 168.0042. Time: 15.2437 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #420: GFLOPs: 215.3040. Time: 11.8948 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #421: GFLOPs: 174.7832. Time: 14.6524 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #422: GFLOPs: 149.8534. Time: 17.0900 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #423: GFLOPs: 168.0042. Time: 15.2437 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #424: GFLOPs: 167.9699. Time: 15.2468 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #425: GFLOPs: 167.9809. Time: 15.2458 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #426: GFLOPs: 174.7766. Time: 14.6530 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #427: GFLOPs: 167.5068. Time: 15.2889 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #428: GFLOPs: 168.0484. Time: 15.2397 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #429: GFLOPs: 168.0168. Time: 15.2425 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #430: GFLOPs: 168.0294. Time: 15.2414 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #431: GFLOPs: 168.0450. Time: 15.2400 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #432: GFLOPs: 168.0637. Time: 15.2383 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #433: GFLOPs: 167.4838. Time: 15.2910 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #434: GFLOPs: 167.4901. Time: 15.2905 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #435: GFLOPs: 167.4923. Time: 15.2903 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #436: GFLOPs: 167.4819. Time: 15.2912 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #437: GFLOPs: 168.0123. Time: 15.2429 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #438: GFLOPs: 168.0068. Time: 15.2434 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #439: GFLOPs: 167.4812. Time: 15.2913 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #440: GFLOPs: 164.1541. Time: 15.6012 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #441: GFLOPs: 167.4802. Time: 15.2914 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #442: GFLOPs: 167.4927. Time: 15.2902 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #443: GFLOPs: 167.4872. Time: 15.2907 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #444: GFLOPs: 167.4909. Time: 15.2904 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #445: GFLOPs: 167.5010. Time: 15.2895 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #446: GFLOPs: 9.6660. Time: 264.9499 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #447: GFLOPs: 60.6845. Time: 42.2019 us. Best GFLOPs: 255.9655
2024-03-21 22:08:55 [INFO] [task_scheduler.cc:131] [Task #34: fused_nn_dense_add] Trial #448: GFLOPs: 1.4245. Time: 1797.8149 us. Best GFLOPs: 255.9655
