2024-03-21 13:42:24 [INFO] [task_scheduler.cc:160] Initializing Task #72: "fused_nn_conv2d_add_nn_relu_35"
2024-03-21 13:42:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(1664), T.int64(14), T.int64(14)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(1664), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-21 13:42:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 13:42:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(81536)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused // T.int64(49))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(49) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(106496)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(1664))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused % T.int64(1664))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(26), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1664), rc_0 * T.int64(1664) + rc_1 * T.int64(26) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 64, 26])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 13:42:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(81536)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused // T.int64(49))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(49) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(106496)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(1664))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused % T.int64(1664))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(26), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1664), rc_1 * T.int64(26) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 64, 26])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 13:42:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(1664), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(1664), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(81536)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused // T.int64(49))
                                    v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(49) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(106496)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(1664))
                                    v1 = T.axis.spatial(T.int64(1664), ax0_ax1_ax2_ax3_fused % T.int64(1664))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(26), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(1664), rc_1 * T.int64(26) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(64) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(7) + nn_2_ff_2_yy_2_xx_2_fused + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 7, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 64, 26])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 14:18:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 14:18:40 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 14:18:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 483 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 977 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 1463 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:43 [INFO] [evolutionary_search.cc:723] Sampled 73 candidate(s)
2024-03-21 14:18:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 14:18:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9996  0.9996  0.9990  0.9987  0.9979  0.9968  0.9968  0.9962  0.9953  0.9949  0.9945  0.9935  0.9923  0.9920  0.9913
[17 : 32]:	0.9913  0.9895  0.9891  0.9873  0.9872  0.9870  0.9861  0.9850  0.9833  0.9826  0.9822  0.9792  0.9791  0.9777  0.9767  0.9757
[33 : 48]:	0.9757  0.9738  0.9735  0.9734  0.9733  0.9712  0.9710  0.9710  0.9702  0.9694  0.9693  0.9692  0.9679  0.9669  0.9662  0.9649
[49 : 64]:	0.9648  0.9644  0.9637  0.9637  0.9632  0.9629  0.9621  0.9615  0.9609  0.9608  0.9608  0.9597  0.9594  0.9593  0.9586  0.9585
2024-03-21 14:18:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 14:18:48 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #1: GFLOPs: 164.5457. Time: 507.7193 us. Best GFLOPs: 164.5457
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #2: GFLOPs: 1634.5241. Time: 51.1115 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #3: GFLOPs: 680.4499. Time: 122.7762 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #4: GFLOPs: 425.7633. Time: 196.2195 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #5: GFLOPs: 247.6606. Time: 337.3287 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #6: GFLOPs: 22.7893. Time: 3665.8835 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #7: GFLOPs: 381.4078. Time: 219.0386 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #8: GFLOPs: 125.0383. Time: 668.1395 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #9: GFLOPs: 100.7903. Time: 828.8796 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #10: GFLOPs: 195.8140. Time: 426.6450 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #11: GFLOPs: 384.5020. Time: 217.2759 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #12: GFLOPs: 326.1574. Time: 256.1433 us. Best GFLOPs: 1634.5241
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #13: GFLOPs: 1778.7411. Time: 46.9675 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #14: GFLOPs: 1614.6194. Time: 51.7416 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #15: GFLOPs: 205.7890. Time: 405.9645 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #16: GFLOPs: 325.1972. Time: 256.8996 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #17: GFLOPs: 48.3358. Time: 1728.3884 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #18: GFLOPs: 139.9814. Time: 596.8152 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #19: GFLOPs: 50.9679. Time: 1639.1313 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #20: GFLOPs: 639.1598. Time: 130.7076 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #21: GFLOPs: 407.0501. Time: 205.2402 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #22: GFLOPs: 284.6741. Time: 293.4691 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #23: GFLOPs: 299.2376. Time: 279.1863 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #24: GFLOPs: 256.8807. Time: 325.2212 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #25: GFLOPs: 406.9542. Time: 205.2885 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #26: GFLOPs: 630.7245. Time: 132.4557 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #27: GFLOPs: 15.6524. Time: 5337.4112 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #28: GFLOPs: 231.0737. Time: 361.5429 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #29: GFLOPs: 174.7311. Time: 478.1234 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #30: GFLOPs: 12.6803. Time: 6588.4161 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #31: GFLOPs: 107.1901. Time: 779.3910 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #32: GFLOPs: 94.3768. Time: 885.2072 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #33: GFLOPs: 77.6626. Time: 1075.7175 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #34: GFLOPs: 408.8575. Time: 204.3329 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #35: GFLOPs: 153.5875. Time: 543.9444 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #36: GFLOPs: 428.1492. Time: 195.1260 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #37: GFLOPs: 14.1263. Time: 5914.0216 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #38: GFLOPs: 309.2617. Time: 270.1370 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #39: GFLOPs: 379.5640. Time: 220.1027 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #40: GFLOPs: 149.7686. Time: 557.8142 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #41: GFLOPs: 183.8412. Time: 454.4304 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #42: GFLOPs: 197.1702. Time: 423.7102 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #43: GFLOPs: 61.7562. Time: 1352.7870 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #44: GFLOPs: 1484.7399. Time: 56.2678 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #45: GFLOPs: 302.1973. Time: 276.4519 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #46: GFLOPs: 354.0244. Time: 235.9810 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #47: GFLOPs: 203.7037. Time: 410.1204 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #48: GFLOPs: 13.7903. Time: 6058.1045 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #49: GFLOPs: 1274.9868. Time: 65.5246 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #50: GFLOPs: 25.3012. Time: 3301.9335 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #51: GFLOPs: 260.6632. Time: 320.5018 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #52: GFLOPs: 823.7166. Time: 101.4221 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #53: GFLOPs: 109.9035. Time: 760.1493 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #54: GFLOPs: 92.2090. Time: 906.0186 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #55: GFLOPs: 284.0960. Time: 294.0663 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #56: GFLOPs: 256.9870. Time: 325.0867 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #57: GFLOPs: 251.9678. Time: 331.5624 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #58: GFLOPs: 379.5374. Time: 220.1181 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #59: GFLOPs: 1063.3334. Time: 78.5671 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #60: GFLOPs: 739.7807. Time: 112.9295 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #61: GFLOPs: 155.2331. Time: 538.1781 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #62: GFLOPs: 911.6110. Time: 91.6433 us. Best GFLOPs: 1778.7411
2024-03-21 15:48:06 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #63: GFLOPs: 24.3293. Time: 3433.8475 us. Best GFLOPs: 1778.7411
2024-03-21 16:37:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 16:37:33 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-03-21 16:37:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 422 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 851 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 1283 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:35 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2024-03-21 16:37:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:41 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac2f29623b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x5ac2f49f5ac8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x5ac2f6a90298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ac2fa1a78d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ac2f48686d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x5ac2f5d3b358)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x5ac2f49f5af8)]: 0 failure(s)
2024-03-21 16:37:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6445  1.2772  1.1236  1.1197  1.0259  1.0188  1.0164  1.0144  1.0128  1.0120  1.0092  1.0048  1.0044  0.9948  0.9904  0.9583
[17 : 32]:	0.9568  0.9542  0.9532  0.9529  0.9505  0.9461  0.9399  0.9386  0.9350  0.9338  0.9328  0.9262  0.9217  0.9199  0.9196  0.9194
[33 : 48]:	0.9163  0.9157  0.9153  0.9137  0.9098  0.9092  0.9070  0.9057  0.9045  0.9036  0.9028  0.9011  0.8988  0.8985  0.8965  0.8961
[49 : 64]:	0.8956  0.8926  0.8919  0.8913  0.8902  0.8900  0.8891  0.8874  0.8868  0.8864  0.8863  0.8787  0.8777  0.8777  0.8776  0.8750
2024-03-21 16:37:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 16:37:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #64: GFLOPs: 1747.3704. Time: 47.8107 us. Best GFLOPs: 1778.7411
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #65: GFLOPs: 2886.7847. Time: 28.9398 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #66: GFLOPs: 585.0697. Time: 142.7916 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #67: GFLOPs: 1743.7076. Time: 47.9112 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #68: GFLOPs: 2209.6392. Time: 37.8085 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #69: GFLOPs: 1897.1661. Time: 44.0357 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #70: GFLOPs: 1486.2125. Time: 56.2120 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #71: GFLOPs: 2221.6597. Time: 37.6039 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #72: GFLOPs: 1493.2529. Time: 55.9470 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #73: GFLOPs: 1540.8499. Time: 54.2188 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #74: GFLOPs: 1495.9138. Time: 55.8475 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #75: GFLOPs: 1590.3611. Time: 52.5309 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #76: GFLOPs: 2058.8837. Time: 40.5769 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #77: GFLOPs: 2170.1555. Time: 38.4963 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #78: GFLOPs: 2007.0668. Time: 41.6244 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #79: GFLOPs: 2464.3240. Time: 33.9010 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #80: GFLOPs: 1758.7001. Time: 47.5027 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #81: GFLOPs: 2594.4697. Time: 32.2004 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #82: GFLOPs: 640.9415. Time: 130.3442 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #83: GFLOPs: 1887.5099. Time: 44.2610 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #84: GFLOPs: 1486.8327. Time: 56.1886 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #85: GFLOPs: 1579.0997. Time: 52.9055 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #86: GFLOPs: 606.4606. Time: 137.7551 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #87: GFLOPs: 642.5745. Time: 130.0130 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #88: GFLOPs: 1794.3085. Time: 46.5600 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #89: GFLOPs: 1569.4107. Time: 53.2321 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #90: GFLOPs: 1676.3242. Time: 49.8370 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #91: GFLOPs: 635.8465. Time: 131.3887 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #92: GFLOPs: 1617.3600. Time: 51.6540 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #93: GFLOPs: 2027.3284. Time: 41.2084 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #94: GFLOPs: 986.2557. Time: 84.7073 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #95: GFLOPs: 2064.3269. Time: 40.4699 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #96: GFLOPs: 1954.5484. Time: 42.7429 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #97: GFLOPs: 581.6909. Time: 143.6210 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #98: GFLOPs: 1663.2946. Time: 50.2274 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #99: GFLOPs: 2405.6184. Time: 34.7283 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #100: GFLOPs: 1611.0861. Time: 51.8551 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #101: GFLOPs: 1769.6581. Time: 47.2086 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #102: GFLOPs: 635.9123. Time: 131.3751 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #103: GFLOPs: 682.3812. Time: 122.4287 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #104: GFLOPs: 1701.7769. Time: 49.0917 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #105: GFLOPs: 641.3063. Time: 130.2701 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #106: GFLOPs: 2455.5356. Time: 34.0223 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #107: GFLOPs: 581.9045. Time: 143.5683 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #108: GFLOPs: 1608.8167. Time: 51.9283 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #109: GFLOPs: 1529.8902. Time: 54.6072 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #110: GFLOPs: 2100.3904. Time: 39.7750 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #111: GFLOPs: 1489.0218. Time: 56.1060 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #112: GFLOPs: 1489.8615. Time: 56.0744 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #113: GFLOPs: 579.6845. Time: 144.1181 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #114: GFLOPs: 1666.8651. Time: 50.1199 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #115: GFLOPs: 1570.7866. Time: 53.1855 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #116: GFLOPs: 1784.0617. Time: 46.8274 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #117: GFLOPs: 2115.0023. Time: 39.5002 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #118: GFLOPs: 1548.2302. Time: 53.9603 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #119: GFLOPs: 2439.0572. Time: 34.2522 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #120: GFLOPs: 1739.4740. Time: 48.0278 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #121: GFLOPs: 1865.0712. Time: 44.7935 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #122: GFLOPs: 1502.7533. Time: 55.5933 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #123: GFLOPs: 1080.6759. Time: 77.3063 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #124: GFLOPs: 2035.6535. Time: 41.0399 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #125: GFLOPs: 1.4605. Time: 57202.6873 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #126: GFLOPs: 140.8693. Time: 593.0536 us. Best GFLOPs: 2886.7847
2024-03-21 16:38:36 [INFO] [task_scheduler.cc:131] [Task #72: fused_nn_conv2d_add_nn_relu_35] Trial #127: GFLOPs: 1232.2702. Time: 67.7960 us. Best GFLOPs: 2886.7847
