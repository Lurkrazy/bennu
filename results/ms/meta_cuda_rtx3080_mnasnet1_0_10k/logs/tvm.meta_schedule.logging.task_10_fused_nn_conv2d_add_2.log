2024-03-21 19:46:24 [INFO] [task_scheduler.cc:160] Initializing Task #10: "fused_nn_conv2d_add_2"
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(40), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(72), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(40), T.int64(28), T.int64(28), T.int64(72), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(40), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(40), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(80), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(28224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(40), ax0_ax1_ax2_ax3_fused // T.int64(72))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused % T.int64(72))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 * T.int64(7) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(72), rc_0 * T.int64(72) + rc_1 * T.int64(18) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 40, 1, 1, 1])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 7, 1, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 7])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 4, 18])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v99 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v99)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(40), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(80), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(28224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(40), ax0_ax1_ax2_ax3_fused // T.int64(72))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused % T.int64(72))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 * T.int64(7) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(72), rc_1 * T.int64(18) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 40, 1, 1, 1])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 7, 1, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 7])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 4, 18])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
l99 = sch.fuse(l54, l60, l66, preserve_unit_iters=True)
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(40), T.int64(1), T.int64(1)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(72), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(40), T.int64(72), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(80), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(7), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(28224)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused // T.int64(392))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(392) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(40), ax0_ax1_ax2_ax3_fused // T.int64(72))
                                    v1 = T.axis.spatial(T.int64(72), ax0_ax1_ax2_ax3_fused % T.int64(72))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + xx_3 * T.int64(7) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(72), rc_1 * T.int64(18) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(40), nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(14) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(14) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_add[v0, v1, v2, v3])
                                T_add[v0, v1, v2, v3] = conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)]
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b1)
v11, v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l16, l17, l18, l19, l20 = sch.split(loop=l4, factors=[v11, v12, v13, v14, v15], preserve_unit_iters=True)
v21, v22, v23, v24, v25 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 40, 1, 1, 1])
l26, l27, l28, l29, l30 = sch.split(loop=l5, factors=[v21, v22, v23, v24, v25], preserve_unit_iters=True)
v31, v32, v33, v34, v35 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 7, 1, 2])
l36, l37, l38, l39, l40 = sch.split(loop=l6, factors=[v31, v32, v33, v34, v35], preserve_unit_iters=True)
v41, v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 7])
l46, l47, l48, l49, l50 = sch.split(loop=l7, factors=[v41, v42, v43, v44, v45], preserve_unit_iters=True)
v51, v52, v53 = sch.sample_perfect_tile(loop=l8, n=3, max_innermost_factor=64, decision=[1, 4, 18])
l54, l55, l56 = sch.split(loop=l8, factors=[v51, v52, v53], preserve_unit_iters=True)
v57, v58, v59 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l60, l61, l62 = sch.split(loop=l9, factors=[v57, v58, v59], preserve_unit_iters=True)
v63, v64, v65 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l66, l67, l68 = sch.split(loop=l10, factors=[v63, v64, v65], preserve_unit_iters=True)
sch.reorder(l16, l26, l36, l46, l17, l27, l37, l47, l18, l28, l38, l48, l54, l60, l66, l55, l61, l67, l19, l29, l39, l49, l56, l62, l68, l20, l30, l40, l50)
l69 = sch.fuse(l16, l26, l36, l46, preserve_unit_iters=True)
sch.bind(loop=l69, thread_axis="blockIdx.x")
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="vthread.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b72 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b72, loop=l71, preserve_unit_loops=True, index=-1)
b73 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b73, loop=l66, preserve_unit_loops=True, index=-1)
l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b73)
l84 = sch.fuse(l80, l81, l82, l83, preserve_unit_iters=True)
v85 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b73, ann_key="meta_schedule.cooperative_fetch", ann_val=v85)
b86 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b86, loop=l66, preserve_unit_loops=True, index=-1)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96 = sch.get_loops(block=b86)
l97 = sch.fuse(l93, l94, l95, l96, preserve_unit_iters=True)
v98 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b86, ann_key="meta_schedule.cooperative_fetch", ann_val=v98)
l99 = sch.fuse(l54, l60, l66, preserve_unit_iters=True)
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l99, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 19:57:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 19:57:26 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 19:57:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 479 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 948 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:27 [INFO] [evolutionary_search.cc:723] Sampled 76 candidate(s)
2024-03-21 19:57:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 19:57:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9986  0.9978  0.9974  0.9974  0.9972  0.9970  0.9969  0.9965  0.9954  0.9952  0.9945  0.9941  0.9940  0.9935  0.9929
[17 : 32]:	0.9927  0.9925  0.9917  0.9907  0.9895  0.9891  0.9884  0.9882  0.9880  0.9872  0.9872  0.9856  0.9849  0.9847  0.9846  0.9842
[33 : 48]:	0.9841  0.9841  0.9836  0.9830  0.9819  0.9810  0.9802  0.9802  0.9781  0.9780  0.9779  0.9777  0.9775  0.9773  0.9748  0.9746
[49 : 64]:	0.9739  0.9734  0.9718  0.9712  0.9708  0.9706  0.9703  0.9701  0.9698  0.9680  0.9674  0.9668  0.9660  0.9658  0.9652  0.9646
2024-03-21 19:57:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 19:57:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #1: GFLOPs: 1131.7047. Time: 4.0180 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #2: GFLOPs: 1011.8688. Time: 4.4939 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #3: GFLOPs: 722.1881. Time: 6.2964 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #4: GFLOPs: 1088.4266. Time: 4.1778 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #5: GFLOPs: 47.6510. Time: 95.4271 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #6: GFLOPs: 734.4364. Time: 6.1914 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #7: GFLOPs: 937.7402. Time: 4.8491 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #8: GFLOPs: 161.8886. Time: 28.0885 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #9: GFLOPs: 80.7832. Time: 56.2889 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #10: GFLOPs: 732.2488. Time: 6.2099 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #11: GFLOPs: 339.5497. Time: 13.3919 us. Best GFLOPs: 1131.7047
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #12: GFLOPs: 1181.0574. Time: 3.8501 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #13: GFLOPs: 918.0985. Time: 4.9528 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #14: GFLOPs: 893.5686. Time: 5.0888 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #15: GFLOPs: 90.1586. Time: 50.4356 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #16: GFLOPs: 645.7642. Time: 7.0416 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #17: GFLOPs: 13.7496. Time: 330.7142 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #18: GFLOPs: 432.6942. Time: 10.5090 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #19: GFLOPs: 732.6363. Time: 6.2066 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #20: GFLOPs: 686.9604. Time: 6.6193 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #21: GFLOPs: 692.1004. Time: 6.5701 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #22: GFLOPs: 134.9677. Time: 33.6910 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #23: GFLOPs: 589.5590. Time: 7.7129 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #24: GFLOPs: 197.7053. Time: 22.9999 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #25: GFLOPs: 276.5720. Time: 16.4413 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #26: GFLOPs: 475.2622. Time: 9.5678 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #27: GFLOPs: 392.0193. Time: 11.5994 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #28: GFLOPs: 7.3066. Time: 622.3434 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #29: GFLOPs: 166.2318. Time: 27.3546 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #30: GFLOPs: 7.9028. Time: 575.3892 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #31: GFLOPs: 42.8453. Time: 106.1307 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #32: GFLOPs: 191.9347. Time: 23.6914 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #33: GFLOPs: 912.3399. Time: 4.9841 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #34: GFLOPs: 481.7527. Time: 9.4389 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #35: GFLOPs: 915.2961. Time: 4.9680 us. Best GFLOPs: 1181.0574
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #36: GFLOPs: 1267.3089. Time: 3.5881 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #37: GFLOPs: 722.8605. Time: 6.2906 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #38: GFLOPs: 21.5540. Time: 210.9682 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #39: GFLOPs: 266.7053. Time: 17.0495 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #40: GFLOPs: 42.8026. Time: 106.2364 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #41: GFLOPs: 998.1893. Time: 4.5554 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #42: GFLOPs: 328.1365. Time: 13.8576 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #43: GFLOPs: 203.5643. Time: 22.3379 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #44: GFLOPs: 229.1350. Time: 19.8451 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #45: GFLOPs: 252.6559. Time: 17.9976 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #46: GFLOPs: 449.9951. Time: 10.1050 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #47: GFLOPs: 1029.1443. Time: 4.4184 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #48: GFLOPs: 565.2360. Time: 8.0448 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #49: GFLOPs: 808.0464. Time: 5.6274 us. Best GFLOPs: 1267.3089
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #50: GFLOPs: 1361.1949. Time: 3.3406 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #51: GFLOPs: 496.5055. Time: 9.1584 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #52: GFLOPs: 733.4214. Time: 6.2000 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #53: GFLOPs: 377.7472. Time: 12.0377 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #54: GFLOPs: 370.3370. Time: 12.2785 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #55: GFLOPs: 1003.1628. Time: 4.5329 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #56: GFLOPs: 162.9756. Time: 27.9011 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #57: GFLOPs: 580.5299. Time: 7.8328 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #58: GFLOPs: 512.2329. Time: 8.8772 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #59: GFLOPs: 24.9664. Time: 182.1329 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #60: GFLOPs: 514.0216. Time: 8.8463 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #61: GFLOPs: 151.3047. Time: 30.0533 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #62: GFLOPs: 305.9930. Time: 14.8605 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #63: GFLOPs: 811.3259. Time: 5.6047 us. Best GFLOPs: 1361.1949
2024-03-21 20:21:52 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #64: GFLOPs: 447.2811. Time: 10.1663 us. Best GFLOPs: 1361.1949
2024-03-21 21:31:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:31:12 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-03-21 21:31:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 417 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 827 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:13 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-03-21 21:31:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521ec157448)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7ffba8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3b98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ec6503e8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ec53b768)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8047b8)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7ff1b8)]: 0 failure(s)
2024-03-21 21:31:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0219  1.0219  1.0219  1.0219  1.0185  1.0181  1.0138  1.0137  1.0137  1.0055  0.9985  0.9968  0.9968  0.9934  0.9930  0.9930
[17 : 32]:	0.9930  0.9930  0.9896  0.9896  0.9896  0.9892  0.9892  0.9892  0.9892  0.9892  0.9892  0.9858  0.9854  0.9849  0.9811  0.9726
[33 : 48]:	0.9723  0.9685  0.9679  0.9575  0.9503  0.9489  0.9462  0.9462  0.9425  0.9216  0.9200  0.9199  0.9191  0.9063  0.9061  0.9049
[49 : 64]:	0.8980  0.8959  0.8895  0.8887  0.8883  0.8874  0.8874  0.8868  0.8842  0.8809  0.8804  0.8787  0.8783  0.8778  0.8766  0.8737
2024-03-21 21:31:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:31:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #65: GFLOPs: 1315.0572. Time: 3.4578 us. Best GFLOPs: 1361.1949
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #66: GFLOPs: 1371.9549. Time: 3.3144 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #67: GFLOPs: 1318.8846. Time: 3.4478 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #68: GFLOPs: 1315.5810. Time: 3.4564 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #69: GFLOPs: 1304.2716. Time: 3.4864 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #70: GFLOPs: 1317.8180. Time: 3.4506 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #71: GFLOPs: 1291.8237. Time: 3.5200 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #72: GFLOPs: 1370.0782. Time: 3.3189 us. Best GFLOPs: 1371.9549
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #73: GFLOPs: 1410.3207. Time: 3.2242 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #74: GFLOPs: 1326.7903. Time: 3.4272 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #75: GFLOPs: 1366.7405. Time: 3.3270 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #76: GFLOPs: 1368.6463. Time: 3.3224 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #77: GFLOPs: 1315.9697. Time: 3.4554 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #78: GFLOPs: 1328.0360. Time: 3.4240 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #79: GFLOPs: 1318.4536. Time: 3.4489 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #80: GFLOPs: 1363.1741. Time: 3.3357 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #81: GFLOPs: 1371.4087. Time: 3.3157 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #82: GFLOPs: 1219.5728. Time: 3.7285 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #83: GFLOPs: 1366.5809. Time: 3.3274 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #84: GFLOPs: 1318.4793. Time: 3.4488 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #85: GFLOPs: 1221.3685. Time: 3.7230 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #86: GFLOPs: 1319.6454. Time: 3.4458 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #87: GFLOPs: 1372.1834. Time: 3.3138 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #88: GFLOPs: 1319.5339. Time: 3.4461 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #89: GFLOPs: 1214.2942. Time: 3.7447 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #90: GFLOPs: 1221.9139. Time: 3.7214 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #91: GFLOPs: 1222.2704. Time: 3.7203 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #92: GFLOPs: 1226.6328. Time: 3.7071 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #93: GFLOPs: 1203.8938. Time: 3.7771 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #94: GFLOPs: 1299.8066. Time: 3.4984 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #95: GFLOPs: 1222.6055. Time: 3.7193 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #96: GFLOPs: 1319.3568. Time: 3.4465 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #97: GFLOPs: 1268.9983. Time: 3.5833 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #98: GFLOPs: 1222.4689. Time: 3.7197 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #99: GFLOPs: 1317.8849. Time: 3.4504 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #100: GFLOPs: 1171.6179. Time: 3.8811 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #101: GFLOPs: 1229.9459. Time: 3.6971 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #102: GFLOPs: 723.1741. Time: 6.2878 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #103: GFLOPs: 1093.8032. Time: 4.1572 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #104: GFLOPs: 1193.0657. Time: 3.8114 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #105: GFLOPs: 723.7738. Time: 6.2826 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #106: GFLOPs: 783.6540. Time: 5.8026 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #107: GFLOPs: 1232.5271. Time: 3.6893 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #108: GFLOPs: 1125.8123. Time: 4.0390 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #109: GFLOPs: 1226.8580. Time: 3.7064 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #110: GFLOPs: 1193.5598. Time: 3.8098 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #111: GFLOPs: 1306.6543. Time: 3.4800 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #112: GFLOPs: 1253.8073. Time: 3.6267 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #113: GFLOPs: 1106.7011. Time: 4.1088 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #114: GFLOPs: 1135.7432. Time: 4.0037 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #115: GFLOPs: 1359.5870. Time: 3.3445 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #116: GFLOPs: 1356.7939. Time: 3.3514 us. Best GFLOPs: 1410.3207
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #117: GFLOPs: 1417.4829. Time: 3.2079 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #118: GFLOPs: 1210.9472. Time: 3.7551 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #119: GFLOPs: 1210.7947. Time: 3.7555 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #120: GFLOPs: 1415.4629. Time: 3.2125 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #121: GFLOPs: 1254.3914. Time: 3.6250 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #122: GFLOPs: 1258.9946. Time: 3.6118 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #123: GFLOPs: 1045.8325. Time: 4.3479 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #124: GFLOPs: 1309.2066. Time: 3.4732 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #125: GFLOPs: 1308.1639. Time: 3.4760 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #126: GFLOPs: 347.5320. Time: 13.0843 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #127: GFLOPs: 863.6695. Time: 5.2650 us. Best GFLOPs: 1417.4829
2024-03-21 21:32:00 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_conv2d_add_2] Trial #128: GFLOPs: 341.0424. Time: 13.3332 us. Best GFLOPs: 1417.4829
