2024-03-21 19:46:24 [INFO] [task_scheduler.cc:160] Initializing Task #11: "fused_nn_conv2d_add_nn_relu_7"
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(40), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(120), T.int64(28), T.int64(28), T.int64(40), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(120), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(120), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(10), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(112)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(40), rc_0 * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(40), rc_0 * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(15), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(40), rc_0 * T.int64(4) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(30), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 15, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 2, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(10), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(112)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(15), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(30), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 15, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 2, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 19:46:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(28), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(10), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(112)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused // T.int64(28))
                                    v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(240)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + ax0_ax1_ax2_ax3_fused // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(4))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(15), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(30), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(28) * T.int64(60) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(30) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(28) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 15, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[28, 1, 1, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 2, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-03-21 19:58:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 19:58:15 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-03-21 19:58:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 458 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 19:58:16 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-03-21 19:58:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 19:58:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 19:58:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 19:58:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 19:58:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9992  0.9985  0.9975  0.9973  0.9959  0.9956  0.9942  0.9940  0.9934  0.9932  0.9929  0.9921  0.9920  0.9909  0.9901
[17 : 32]:	0.9894  0.9879  0.9878  0.9877  0.9868  0.9865  0.9860  0.9854  0.9851  0.9848  0.9846  0.9843  0.9842  0.9831  0.9822  0.9816
[33 : 48]:	0.9814  0.9812  0.9810  0.9805  0.9804  0.9803  0.9789  0.9783  0.9780  0.9772  0.9757  0.9756  0.9744  0.9741  0.9723  0.9711
[49 : 64]:	0.9703  0.9671  0.9669  0.9657  0.9656  0.9654  0.9651  0.9648  0.9644  0.9642  0.9642  0.9628  0.9606  0.9589  0.9584  0.9581
2024-03-21 19:58:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 19:58:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #1: GFLOPs: 509.7285. Time: 15.1346 us. Best GFLOPs: 509.7285
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #2: GFLOPs: 357.8531. Time: 21.5579 us. Best GFLOPs: 509.7285
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:121] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #3: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(15), T.int64(2), T.int64(7)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused * T.int64(30) + ff_3_init * T.int64(15) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + yy_3_init * T.int64(2) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + xx_3_init * T.int64(7) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(140)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(40), rc_0 * T.int64(10) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(6)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(120), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(10))
                                        v1 = T.axis.spatial(T.int64(40), rc_0 * T.int64(10) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(10))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1200))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(15), T.int64(2), T.int64(7)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused * T.int64(30) + ff_3 * T.int64(15) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + xx_3 * T.int64(7) + xx_4)
                                v_rc = T.axis.reduce(T.int64(40), rc_0 * T.int64(10) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(30), T.int64(2), T.int64(7)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused * T.int64(30) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(7) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 4, 1, 2, 15])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 14, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 7])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 5, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109 = sch.split(loop=l107, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b87)
l117, l118, l119 = sch.split(loop=l116, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l119)
sch.bind(loop=l118, thread_axis="threadIdx.x")
b120 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b120, ann_key="meta_schedule.unroll_explicit")
b121, b122, b123, b124 = sch.get_child_blocks(b120)
l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b121)
l133, l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b122)
l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b123)
sch.annotate(block_or_loop=l142, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l142, ann_key="pragma_unroll_explicit", ann_val=1)
l162, l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b124)
b169 = sch.get_block(name="conv2d_nchw", func_name="main")
l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189 = sch.get_loops(block=b169)
b190 = sch.decompose_reduction(block=b169, loop=l173)
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #4: GFLOPs: 867.5398. Time: 8.8925 us. Best GFLOPs: 867.5398
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #5: GFLOPs: 1746.5462. Time: 4.4170 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #6: GFLOPs: 751.4633. Time: 10.2660 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #7: GFLOPs: 24.5121. Time: 314.7247 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #8: GFLOPs: 35.6122. Time: 216.6271 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:121] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #9: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/home/canesche/tvm-0.16.dev0/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "/home/canesche/tvm-0.16.dev0/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/home/canesche/tvm-0.16.dev0/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  336: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::TVMRetValue)
  335: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  334: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  333: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  332: tvm::transform::Pass::operator()(tvm::IRModule) const
  331: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  327: _ZN3tvm7runtime13PackedFuncObj
  326: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  325: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  323: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  322: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  321: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  320: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  319: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  318: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  317: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  316: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  315: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  314: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  313: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  312: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  311: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  310: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  309: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  308: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  307: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  306: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  305: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  304: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  303: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  302: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  301: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  300: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  299: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  298: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  297: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  296: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  295: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  294: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  293: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  292: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  291: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  290: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  289: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  288: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  287: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  286: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  285: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  284: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  283: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  282: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  281: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  280: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  279: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  278: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  277: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  276: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  275: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  274: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  273: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  272: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  271: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  270: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  269: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  268: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  267: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  266: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  265: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  264: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  263: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  262: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  261: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  260: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  259: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  258: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  257: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  256: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  255: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  254: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  253: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  252: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  251: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  250: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  249: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  248: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  247: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  246: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  245: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  244: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  243: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  242: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  241: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  240: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  239: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  238: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  237: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  236: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  235: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  234: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  233: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  232: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  231: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  230: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  229: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  228: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  227: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  226: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  225: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  224: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  223: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  222: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  221: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  220: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  219: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  218: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  217: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  216: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  215: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  214: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  213: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  212: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  211: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  210: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  209: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  208: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  207: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  206: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  205: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  204: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  203: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  202: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  201: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  200: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  199: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  198: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  197: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  196: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  195: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  194: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  193: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  192: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  191: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  190: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  189: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  188: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  187: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  186: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  185: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  184: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  183: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  182: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  181: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  180: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  179: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  178: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  177: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  176: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  175: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  174: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  173: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  172: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  171: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  170: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  169: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  168: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  167: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  166: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  165: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  164: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  163: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  162: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  161: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  160: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  159: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  158: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  157: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  156: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  155: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  154: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  153: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  152: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  151: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  150: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  149: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  147: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  146: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  145: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  144: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  143: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  142: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  141: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  140: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  139: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  138: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  137: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  136: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  135: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  134: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  133: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  132: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  131: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  130: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  129: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  128: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  127: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  126: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  125: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  124: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  123: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  122: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  121: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  120: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  119: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  118: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  117: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  115: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  114: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  113: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  112: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  111: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  110: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  109: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  108: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  107: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  106: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  105: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  104: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  103: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  102: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  101: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  100: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  99: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  98: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  97: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  96: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  95: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  94: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  93: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  92: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  91: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  90: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  89: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  88: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  87: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  86: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  85: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  84: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  83: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  82: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  80: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  79: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  78: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  77: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  76: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  75: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  74: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  73: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  72: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  71: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  70: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  69: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  68: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  67: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  66: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  65: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  64: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  63: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  62: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  61: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  60: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  59: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  58: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  57: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  56: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  55: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  54: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  53: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  52: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  51: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  50: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  49: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  48: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  47: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  45: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  44: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  43: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  42: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  41: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  40: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  39: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  38: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  37: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  36: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  35: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  34: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  33: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  32: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  31: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  30: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  29: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  28: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  27: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  26: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  25: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  24: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  23: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  22: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  21: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::Stmt>::value, void>::type> const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::ObjectPtr<tvm::runtime::Object>, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  19: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  18: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  17: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  16: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  15: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  14: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  13: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  12: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  11: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  10: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  9: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runti
  8: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  7: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  6: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  5: _ZZN3tvm3tir11StmtFunctorIFNS0_4StmtERKS2_EE10InitVTableEvENUlRKNS_7runtime9
  4: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  3: _ZZN3tvm3tir11ExprFunctorIFNS_8PrimExprERKS2_EE10InitVTableEvENUlRKNS_7ru
  2: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  1: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  0: tvm::tir::APIType(tvm::runtime::DataType)
  File "/home/canesche/tvm-0.16.dev0/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(42), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(2), T.int64(2)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(120), nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(40) + ff_3_init * T.int64(5) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + yy_3_init * T.int64(2) + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + xx_3_init * T.int64(2) + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(10), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(42), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(168) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(168) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(168) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(42) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(224))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(12)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(42), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(120), (ax0_ax1_ax2_ax3_fused_0 * T.int64(42) + ax0_ax1_ax2_ax3_fused_1) // T.int64(4))
                                    v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(42) + ax0_ax1_ax2_ax3_fused_1) % T.int64(4))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(42) + ax0_ax1_ax2_ax3_fused_1 < T.int64(480))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(2), T.int64(2)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(120), nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(40) + ff_3 * T.int64(5) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                v_rc = T.axis.reduce(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(40), T.int64(2), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(120), nn_2_ff_2_yy_2_xx_2_fused // T.int64(14) * T.int64(40) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(14) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 3, 8, 5])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 14, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[14, 1, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 2, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l102, l103, l104, l105, l106 = sch.get_loops(block=b74)
l107, l108, l109 = sch.split(loop=l106, factors=[None, 42, 4], preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.bind(loop=l108, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114 = sch.get_loops(block=b87)
l115, l116 = sch.split(loop=l114, factors=[None, 42], preserve_unit_iters=True)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b117 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b117, ann_key="meta_schedule.unroll_explicit")
b118, b119, b120, b121 = sch.get_child_blocks(b117)
l122, l123, l124, l125, l126, l127, l128 = sch.get_loops(block=b118)
l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b119)
l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152 = sch.get_loops(block=b120)
sch.annotate(block_or_loop=l135, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l135, ann_key="pragma_unroll_explicit", ann_val=1)
l153, l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b121)
b160 = sch.get_block(name="conv2d_nchw", func_name="main")
l161, l162, l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178 = sch.get_loops(block=b160)
b179 = sch.decompose_reduction(block=b160, loop=l164)
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #10: GFLOPs: 142.0311. Time: 54.3160 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #11: GFLOPs: 339.6979. Time: 22.7101 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #12: GFLOPs: 952.7919. Time: 8.0968 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #13: GFLOPs: 905.8628. Time: 8.5163 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #14: GFLOPs: 59.2665. Time: 130.1672 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #15: GFLOPs: 428.0281. Time: 18.0235 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #16: GFLOPs: 414.0729. Time: 18.6309 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #17: GFLOPs: 865.6457. Time: 8.9119 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #18: GFLOPs: 1329.1401. Time: 5.8042 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #19: GFLOPs: 60.2062. Time: 128.1356 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #20: GFLOPs: 28.0659. Time: 274.8730 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #21: GFLOPs: 10.3284. Time: 746.9283 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #22: GFLOPs: 454.9539. Time: 16.9568 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #23: GFLOPs: 22.5386. Time: 342.2815 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #24: GFLOPs: 215.2050. Time: 35.8475 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #25: GFLOPs: 741.0210. Time: 10.4107 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #26: GFLOPs: 68.7543. Time: 112.2047 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #27: GFLOPs: 41.3653. Time: 186.4982 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #28: GFLOPs: 1729.4788. Time: 4.4606 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #29: GFLOPs: 1297.7250. Time: 5.9447 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #30: GFLOPs: 20.2006. Time: 381.8973 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #31: GFLOPs: 431.9922. Time: 17.8581 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #32: GFLOPs: 1194.7489. Time: 6.4571 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #33: GFLOPs: 397.9539. Time: 19.3856 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #34: GFLOPs: 16.6661. Time: 462.8891 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #35: GFLOPs: 441.5051. Time: 17.4733 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #36: GFLOPs: 1100.7466. Time: 7.0085 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #37: GFLOPs: 491.9822. Time: 15.6806 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #38: GFLOPs: 398.0727. Time: 19.3798 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #39: GFLOPs: 627.5939. Time: 12.2923 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #40: GFLOPs: 1461.6089. Time: 5.2781 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #41: GFLOPs: 146.2744. Time: 52.7403 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #42: GFLOPs: 575.7033. Time: 13.4002 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #43: GFLOPs: 878.4207. Time: 8.7823 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #44: GFLOPs: 148.1803. Time: 52.0620 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #45: GFLOPs: 5.9552. Time: 1295.4256 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #46: GFLOPs: 1147.4497. Time: 6.7232 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #47: GFLOPs: 68.9673. Time: 111.8583 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #48: GFLOPs: 875.8292. Time: 8.8083 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #49: GFLOPs: 451.5721. Time: 17.0838 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #50: GFLOPs: 386.3190. Time: 19.9694 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #51: GFLOPs: 20.8890. Time: 369.3126 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #52: GFLOPs: 12.0889. Time: 638.1513 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #53: GFLOPs: 879.0415. Time: 8.7761 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #54: GFLOPs: 482.1327. Time: 16.0009 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #55: GFLOPs: 1613.8831. Time: 4.7801 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #56: GFLOPs: 41.1046. Time: 187.6812 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #57: GFLOPs: 126.6767. Time: 60.8996 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #58: GFLOPs: 379.0170. Time: 20.3541 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #59: GFLOPs: 22.7274. Time: 339.4383 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #60: GFLOPs: 162.4855. Time: 47.4785 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #61: GFLOPs: 19.6188. Time: 393.2235 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #62: GFLOPs: 392.6888. Time: 19.6455 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #63: GFLOPs: 92.7564. Time: 83.1701 us. Best GFLOPs: 1746.5462
2024-03-21 20:21:53 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #64: GFLOPs: 588.6915. Time: 13.1046 us. Best GFLOPs: 1746.5462
2024-03-21 20:39:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 20:40:00 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-03-21 20:40:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 812 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:01 [INFO] [evolutionary_search.cc:723] Sampled 88 candidate(s)
2024-03-21 20:40:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 20:40:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0243  1.0196  1.0190  1.0126  1.0091  1.0046  1.0036  1.0013  0.9979  0.9975  0.9970  0.9965  0.9958  0.9941  0.9930  0.9869
[17 : 32]:	0.9851  0.9831  0.9815  0.9779  0.9760  0.9744  0.9734  0.9713  0.9708  0.9705  0.9699  0.9647  0.9641  0.9609  0.9592  0.9588
[33 : 48]:	0.9560  0.9484  0.9462  0.9448  0.9445  0.9440  0.9434  0.9416  0.9416  0.9415  0.9412  0.9410  0.9396  0.9389  0.9383  0.9382
[49 : 64]:	0.9376  0.9374  0.9362  0.9360  0.9353  0.9343  0.9334  0.9332  0.9322  0.9289  0.9282  0.9258  0.9218  0.9203  0.9141  0.9137
2024-03-21 20:40:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 20:40:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:121] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #65: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(56), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(7), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(60), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(14) * T.int64(30) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(5)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(60), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(10) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(60) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(560))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(60), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(14) * T.int64(30) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(10))
                                        v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(10) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(120) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(10))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(60) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(300))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(14) * T.int64(30) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(10) + rc_1 * T.int64(5) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(120), nn_0_ff_0_yy_0_xx_0_fused // T.int64(14) * T.int64(30) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_0_ff_0_yy_0_xx_0_fused % T.int64(14) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 1, 15, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[14, 1, 1, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 4, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 2, 5])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l102, l103, l104, l105, l106 = sch.get_loops(block=b74)
l107, l108, l109 = sch.split(loop=l106, factors=[None, 60, 2], preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.bind(loop=l108, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114 = sch.get_loops(block=b87)
l115, l116, l117 = sch.split(loop=l114, factors=[None, 60, 2], preserve_unit_iters=True)
sch.vectorize(loop=l117)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b118 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b118, ann_key="meta_schedule.unroll_explicit")
b119, b120, b121, b122 = sch.get_child_blocks(b118)
l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b119)
l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b120)
l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154 = sch.get_loops(block=b121)
sch.annotate(block_or_loop=l137, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l137, ann_key="pragma_unroll_explicit", ann_val=1)
l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b122)
b162 = sch.get_block(name="conv2d_nchw", func_name="main")
l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b162)
b181 = sch.decompose_reduction(block=b162, loop=l166)
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #66: GFLOPs: 1585.1197. Time: 4.8669 us. Best GFLOPs: 1746.5462
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #67: GFLOPs: 1749.5821. Time: 4.4094 us. Best GFLOPs: 1749.5821
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #68: GFLOPs: 1701.7311. Time: 4.5334 us. Best GFLOPs: 1749.5821
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #69: GFLOPs: 1742.7053. Time: 4.4268 us. Best GFLOPs: 1749.5821
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #70: GFLOPs: 1757.8439. Time: 4.3886 us. Best GFLOPs: 1757.8439
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #71: GFLOPs: 1650.5290. Time: 4.6740 us. Best GFLOPs: 1757.8439
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #72: GFLOPs: 1696.6271. Time: 4.5470 us. Best GFLOPs: 1757.8439
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #73: GFLOPs: 1806.1159. Time: 4.2714 us. Best GFLOPs: 1806.1159
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #74: GFLOPs: 1808.2420. Time: 4.2663 us. Best GFLOPs: 1808.2420
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #75: GFLOPs: 1925.4229. Time: 4.0067 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #76: GFLOPs: 1686.1829. Time: 4.5752 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #77: GFLOPs: 1850.6507. Time: 4.1686 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #78: GFLOPs: 1737.2857. Time: 4.4406 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #79: GFLOPs: 1635.5964. Time: 4.7167 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #80: GFLOPs: 1912.8506. Time: 4.0330 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #81: GFLOPs: 1707.9997. Time: 4.5167 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #82: GFLOPs: 1792.6907. Time: 4.3033 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #83: GFLOPs: 1791.1813. Time: 4.3070 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #84: GFLOPs: 1639.6073. Time: 4.7051 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #85: GFLOPs: 1854.5184. Time: 4.1599 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #86: GFLOPs: 1790.4349. Time: 4.3088 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #87: GFLOPs: 1681.6429. Time: 4.5875 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #88: GFLOPs: 1847.7300. Time: 4.1752 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #89: GFLOPs: 1716.8421. Time: 4.4935 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #90: GFLOPs: 1913.1828. Time: 4.0323 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #91: GFLOPs: 1646.3151. Time: 4.6860 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #92: GFLOPs: 1684.0311. Time: 4.5810 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #93: GFLOPs: 1911.4166. Time: 4.0360 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #94: GFLOPs: 1679.2677. Time: 4.5940 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #95: GFLOPs: 1639.3617. Time: 4.7058 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #96: GFLOPs: 1737.7331. Time: 4.4394 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #97: GFLOPs: 1683.1827. Time: 4.5833 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #98: GFLOPs: 1752.3009. Time: 4.4025 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #99: GFLOPs: 1684.7063. Time: 4.5792 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #100: GFLOPs: 1607.2068. Time: 4.8000 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #101: GFLOPs: 1608.7540. Time: 4.7954 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #102: GFLOPs: 1840.5766. Time: 4.1914 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #103: GFLOPs: 1685.5309. Time: 4.5769 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #104: GFLOPs: 1635.2907. Time: 4.7175 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #105: GFLOPs: 1736.8446. Time: 4.4417 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #106: GFLOPs: 1726.4508. Time: 4.4685 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #107: GFLOPs: 1716.6737. Time: 4.4939 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #108: GFLOPs: 1794.0041. Time: 4.3002 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #109: GFLOPs: 1477.9877. Time: 5.2196 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #110: GFLOPs: 1718.3897. Time: 4.4894 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #111: GFLOPs: 1685.4937. Time: 4.5770 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #112: GFLOPs: 1903.6158. Time: 4.0526 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #113: GFLOPs: 1913.1939. Time: 4.0323 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #114: GFLOPs: 1620.1137. Time: 4.7617 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #115: GFLOPs: 1734.2082. Time: 4.4485 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #116: GFLOPs: 1617.7623. Time: 4.7687 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #117: GFLOPs: 1734.8686. Time: 4.4468 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #118: GFLOPs: 1793.2543. Time: 4.3020 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #119: GFLOPs: 1608.8772. Time: 4.7950 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #120: GFLOPs: 1726.7063. Time: 4.4678 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #121: GFLOPs: 1682.8895. Time: 4.5841 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #122: GFLOPs: 1644.5055. Time: 4.6911 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #123: GFLOPs: 1506.6237. Time: 5.1204 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #124: GFLOPs: 1626.2753. Time: 4.7437 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #125: GFLOPs: 1734.4878. Time: 4.4477 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #126: GFLOPs: 131.6469. Time: 58.6004 us. Best GFLOPs: 1925.4229
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:121] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #127: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(120), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(120), T.int64(28), T.int64(28)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(40), T.int64(28), T.int64(28)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(120), T.int64(40), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(105), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(4) + ff_3_init * T.int64(4) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(2) * T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0_ry_0_rx_0_fused in T.serial(T.int64(10), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(28)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784) // T.int64(28))
                                        v3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_fused_0 * T.int64(112) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(28))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(120), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(4))
                                        v1 = T.axis.spatial(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(480))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(4) + ff_3 * T.int64(4) + ff_4)
                                v_yy = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(2) * T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(40), rc_0_ry_0_rx_0_fused * T.int64(4) + rc_1 + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(120), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(28) * T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(28), nn_2_ff_2_yy_2_xx_2_fused % T.int64(28) // T.int64(2) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 15, 2, 1, 4])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 14, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 2, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 4, 1])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l102, l103, l104, l105, l106 = sch.get_loops(block=b74)
l107, l108, l109 = sch.split(loop=l106, factors=[None, 56, 2], preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.bind(loop=l108, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l110, l111, l112, l113, l114 = sch.get_loops(block=b87)
l115, l116, l117 = sch.split(loop=l114, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l117)
sch.bind(loop=l116, thread_axis="threadIdx.x")
b118 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b118, ann_key="meta_schedule.unroll_explicit")
b119, b120, b121, b122 = sch.get_child_blocks(b118)
l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b119)
l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b120)
l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154 = sch.get_loops(block=b121)
sch.annotate(block_or_loop=l137, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l137, ann_key="pragma_unroll_explicit", ann_val=1)
l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b122)
b162 = sch.get_block(name="conv2d_nchw", func_name="main")
l163, l164, l165, l166, l167, l168, l169, l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b162)
b181 = sch.decompose_reduction(block=b162, loop=l166)
2024-03-21 20:41:22 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #128: GFLOPs: 1012.1123. Time: 7.6222 us. Best GFLOPs: 1925.4229
2024-03-21 21:19:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:19:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 21:19:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 355 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:19:49 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-03-21 21:19:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 115 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:19:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:19:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:19:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:20:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9972  0.9969  0.9966  0.9921  0.9897  0.9863  0.9861  0.9835  0.9812  0.9800  0.9788  0.9785  0.9783  0.9732  0.9719  0.9718
[17 : 32]:	0.9717  0.9716  0.9712  0.9709  0.9708  0.9707  0.9705  0.9701  0.9691  0.9688  0.9683  0.9681  0.9670  0.9670  0.9670  0.9667
[33 : 48]:	0.9665  0.9651  0.9643  0.9642  0.9642  0.9642  0.9635  0.9622  0.9622  0.9619  0.9618  0.9613  0.9605  0.9594  0.9591  0.9588
[49 : 64]:	0.9586  0.9585  0.9580  0.9559  0.9557  0.9513  0.9488  0.9436  0.9416  0.9401  0.9397  0.9356  0.9336  0.9325  0.9325  0.9323
2024-03-21 21:20:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:20:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #129: GFLOPs: 1877.3371. Time: 4.1093 us. Best GFLOPs: 1925.4229
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #130: GFLOPs: 2132.1780. Time: 3.6182 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #131: GFLOPs: 1923.0964. Time: 4.0115 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #132: GFLOPs: 1927.2474. Time: 4.0029 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #133: GFLOPs: 1924.3864. Time: 4.0088 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #134: GFLOPs: 1789.1290. Time: 4.3119 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #135: GFLOPs: 1911.9775. Time: 4.0349 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #136: GFLOPs: 1911.3550. Time: 4.0362 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #137: GFLOPs: 1913.2401. Time: 4.0322 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #138: GFLOPs: 1912.0542. Time: 4.0347 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #139: GFLOPs: 1789.5033. Time: 4.3110 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #140: GFLOPs: 2124.9312. Time: 3.6305 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #141: GFLOPs: 1913.2527. Time: 4.0322 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #142: GFLOPs: 1911.2339. Time: 4.0364 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #143: GFLOPs: 1912.3047. Time: 4.0342 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #144: GFLOPs: 1913.6655. Time: 4.0313 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #145: GFLOPs: 1910.8150. Time: 4.0373 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #146: GFLOPs: 1911.7479. Time: 4.0353 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #147: GFLOPs: 2117.2803. Time: 3.6436 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #148: GFLOPs: 1910.2901. Time: 4.0384 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #149: GFLOPs: 1912.7632. Time: 4.0332 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #150: GFLOPs: 1912.1463. Time: 4.0345 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #151: GFLOPs: 2117.6984. Time: 3.6429 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #152: GFLOPs: 1912.3765. Time: 4.0340 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #153: GFLOPs: 1911.6090. Time: 4.0356 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #154: GFLOPs: 1913.3949. Time: 4.0319 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #155: GFLOPs: 1912.4233. Time: 4.0339 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #156: GFLOPs: 2115.2830. Time: 3.6471 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #157: GFLOPs: 1911.2882. Time: 4.0363 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #158: GFLOPs: 1912.5135. Time: 4.0337 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #159: GFLOPs: 1913.3786. Time: 4.0319 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #160: GFLOPs: 1897.0919. Time: 4.0665 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #161: GFLOPs: 1908.8868. Time: 4.0414 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #162: GFLOPs: 1913.5835. Time: 4.0315 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #163: GFLOPs: 1867.6468. Time: 4.1306 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #164: GFLOPs: 1911.3327. Time: 4.0362 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #165: GFLOPs: 1911.4041. Time: 4.0361 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #166: GFLOPs: 1912.0542. Time: 4.0347 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #167: GFLOPs: 1874.2176. Time: 4.1161 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #168: GFLOPs: 1894.0904. Time: 4.0730 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #169: GFLOPs: 1910.3173. Time: 4.0384 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #170: GFLOPs: 2086.7896. Time: 3.6969 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #171: GFLOPs: 1912.4746. Time: 4.0338 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #172: GFLOPs: 2122.2248. Time: 3.6351 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #173: GFLOPs: 1869.4300. Time: 4.1267 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #174: GFLOPs: 1911.3803. Time: 4.0361 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #175: GFLOPs: 1095.3422. Time: 7.0431 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #176: GFLOPs: 1911.5322. Time: 4.0358 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #177: GFLOPs: 1820.7956. Time: 4.2369 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #178: GFLOPs: 865.3367. Time: 8.9151 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #179: GFLOPs: 1287.6741. Time: 5.9911 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #180: GFLOPs: 1850.0344. Time: 4.1700 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #181: GFLOPs: 1097.0088. Time: 7.0324 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #182: GFLOPs: 1912.3118. Time: 4.0342 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #183: GFLOPs: 1852.9532. Time: 4.1634 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #184: GFLOPs: 1974.6602. Time: 3.9068 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #185: GFLOPs: 1734.8855. Time: 4.4467 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #186: GFLOPs: 2049.8459. Time: 3.7635 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #187: GFLOPs: 1681.8604. Time: 4.5869 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #188: GFLOPs: 2113.4650. Time: 3.6502 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #189: GFLOPs: 1745.7498. Time: 4.4191 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #190: GFLOPs: 242.7817. Time: 31.7757 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #191: GFLOPs: 213.6925. Time: 36.1012 us. Best GFLOPs: 2132.1780
2024-03-21 21:20:39 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #192: GFLOPs: 831.1226. Time: 9.2821 us. Best GFLOPs: 2132.1780
2024-03-21 21:56:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-03-21 21:56:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-03-21 21:56:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 365 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 729 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:36 [INFO] [evolutionary_search.cc:723] Sampled 91 candidate(s)
2024-03-21 21:56:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6521eb8d5118)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x6521ed7c38e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x6521ed7c3208)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6521ebde4598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6521ebdf58d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x6521ed8305e8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x6521ed7f9bf8)]: 0 failure(s)
2024-03-21 21:56:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0023  1.0015  0.9933  0.9913  0.9888  0.9827  0.9823  0.9818  0.9774  0.9770  0.9758  0.9751  0.9737  0.9727  0.9716  0.9707
[17 : 32]:	0.9706  0.9689  0.9688  0.9681  0.9662  0.9654  0.9652  0.9650  0.9650  0.9644  0.9621  0.9607  0.9599  0.9590  0.9586  0.9577
[33 : 48]:	0.9566  0.9560  0.9554  0.9545  0.9538  0.9536  0.9533  0.9531  0.9530  0.9523  0.9520  0.9520  0.9500  0.9491  0.9491  0.9490
[49 : 64]:	0.9485  0.9474  0.9464  0.9452  0.9452  0.9451  0.9441  0.9431  0.9411  0.9410  0.9407  0.9402  0.9401  0.9392  0.9381  0.9373
2024-03-21 21:56:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-03-21 21:56:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #193: GFLOPs: 2133.0100. Time: 3.6167 us. Best GFLOPs: 2133.0100
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #194: GFLOPs: 1879.7795. Time: 4.1040 us. Best GFLOPs: 2133.0100
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #195: GFLOPs: 2136.2953. Time: 3.6112 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #196: GFLOPs: 2133.5166. Time: 3.6159 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #197: GFLOPs: 2120.6561. Time: 3.6378 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #198: GFLOPs: 2099.4670. Time: 3.6745 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #199: GFLOPs: 2114.3639. Time: 3.6486 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #200: GFLOPs: 2119.6693. Time: 3.6395 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #201: GFLOPs: 2120.4974. Time: 3.6381 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #202: GFLOPs: 2100.2622. Time: 3.6731 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #203: GFLOPs: 2110.7592. Time: 3.6549 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #204: GFLOPs: 2124.0634. Time: 3.6320 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #205: GFLOPs: 1910.7499. Time: 4.0375 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #206: GFLOPs: 1896.1747. Time: 4.0685 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #207: GFLOPs: 2112.4505. Time: 3.6519 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #208: GFLOPs: 2075.3807. Time: 3.7172 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #209: GFLOPs: 2119.2642. Time: 3.6402 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #210: GFLOPs: 2124.9666. Time: 3.6304 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #211: GFLOPs: 2119.0706. Time: 3.6405 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #212: GFLOPs: 2126.8759. Time: 3.6272 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #213: GFLOPs: 2119.2291. Time: 3.6403 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #214: GFLOPs: 1908.3150. Time: 4.0426 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #215: GFLOPs: 2126.7250. Time: 3.6274 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #216: GFLOPs: 2114.1179. Time: 3.6491 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #217: GFLOPs: 2114.0093. Time: 3.6493 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #218: GFLOPs: 2126.2596. Time: 3.6282 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #219: GFLOPs: 2106.4298. Time: 3.6624 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #220: GFLOPs: 2118.9613. Time: 3.6407 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #221: GFLOPs: 2112.5538. Time: 3.6518 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #222: GFLOPs: 2127.4910. Time: 3.6261 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #223: GFLOPs: 2062.0614. Time: 3.7412 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #224: GFLOPs: 2127.1461. Time: 3.6267 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #225: GFLOPs: 2121.9787. Time: 3.6356 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #226: GFLOPs: 2120.6077. Time: 3.6379 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #227: GFLOPs: 2128.2110. Time: 3.6249 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #228: GFLOPs: 2121.0525. Time: 3.6371 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #229: GFLOPs: 2124.0294. Time: 3.6320 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #230: GFLOPs: 2122.0499. Time: 3.6354 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #231: GFLOPs: 2115.8188. Time: 3.6461 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #232: GFLOPs: 2126.0470. Time: 3.6286 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #233: GFLOPs: 2102.9060. Time: 3.6685 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #234: GFLOPs: 2116.9038. Time: 3.6443 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #235: GFLOPs: 2113.6093. Time: 3.6499 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #236: GFLOPs: 2113.7840. Time: 3.6496 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #237: GFLOPs: 2105.4666. Time: 3.6641 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #238: GFLOPs: 2126.4709. Time: 3.6279 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #239: GFLOPs: 1906.8478. Time: 4.0457 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #240: GFLOPs: 1893.4872. Time: 4.0743 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #241: GFLOPs: 1888.3351. Time: 4.0854 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #242: GFLOPs: 2119.3551. Time: 3.6401 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #243: GFLOPs: 2121.8661. Time: 3.6357 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #244: GFLOPs: 2119.0396. Time: 3.6406 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #245: GFLOPs: 2058.5125. Time: 3.7476 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #246: GFLOPs: 2093.7094. Time: 3.6846 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #247: GFLOPs: 2119.1411. Time: 3.6404 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #248: GFLOPs: 2115.4899. Time: 3.6467 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #249: GFLOPs: 2126.3305. Time: 3.6281 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #250: GFLOPs: 2116.6089. Time: 3.6448 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #251: GFLOPs: 1979.6021. Time: 3.8970 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #252: GFLOPs: 2120.6181. Time: 3.6379 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #253: GFLOPs: 1904.3458. Time: 4.0510 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #254: GFLOPs: 307.3259. Time: 25.1022 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #255: GFLOPs: 8.9362. Time: 863.2938 us. Best GFLOPs: 2136.2953
2024-03-21 21:57:27 [INFO] [task_scheduler.cc:131] [Task #11: fused_nn_conv2d_add_nn_relu_7] Trial #256: GFLOPs: 23.9323. Time: 322.3495 us. Best GFLOPs: 2136.2953
